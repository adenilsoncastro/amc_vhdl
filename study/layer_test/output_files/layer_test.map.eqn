-- Copyright (C) 2020  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and any partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details, at
-- https://fpgasoftware.intel.com/eula.
--B1L1 is neuron_l1_n0:n0|Add1~0
B1L1 = J1_r_data_out[-10] $ (VCC);

--B1L2 is neuron_l1_n0:n0|Add1~1
B1L2 = CARRY(J1_r_data_out[-10]);


--B1L3 is neuron_l1_n0:n0|Add1~2
B1L3 = (J1_r_data_out[-9] & (B1L2 & VCC)) # (!J1_r_data_out[-9] & (!B1L2));

--B1L4 is neuron_l1_n0:n0|Add1~3
B1L4 = CARRY((!J1_r_data_out[-9] & !B1L2));


--B1L5 is neuron_l1_n0:n0|Add1~4
B1L5 = (J1_r_data_out[-8] & (B1L4 $ (GND))) # (!J1_r_data_out[-8] & (!B1L4 & VCC));

--B1L6 is neuron_l1_n0:n0|Add1~5
B1L6 = CARRY((J1_r_data_out[-8] & !B1L4));


--B1L7 is neuron_l1_n0:n0|Add1~6
B1L7 = (J1_r_data_out[-7] & (!B1L6)) # (!J1_r_data_out[-7] & ((B1L6) # (GND)));

--B1L8 is neuron_l1_n0:n0|Add1~7
B1L8 = CARRY((!B1L6) # (!J1_r_data_out[-7]));


--B1L9 is neuron_l1_n0:n0|Add1~8
B1L9 = (J1_r_data_out[-6] & ((GND) # (!B1L8))) # (!J1_r_data_out[-6] & (B1L8 $ (GND)));

--B1L10 is neuron_l1_n0:n0|Add1~9
B1L10 = CARRY((J1_r_data_out[-6]) # (!B1L8));


--B1L11 is neuron_l1_n0:n0|Add1~10
B1L11 = (J1_r_data_out[-5] & (!B1L10)) # (!J1_r_data_out[-5] & ((B1L10) # (GND)));

--B1L12 is neuron_l1_n0:n0|Add1~11
B1L12 = CARRY((!B1L10) # (!J1_r_data_out[-5]));


--B1L13 is neuron_l1_n0:n0|Add1~12
B1L13 = (J1_r_data_out[-4] & (B1L12 $ (GND))) # (!J1_r_data_out[-4] & (!B1L12 & VCC));

--B1L14 is neuron_l1_n0:n0|Add1~13
B1L14 = CARRY((J1_r_data_out[-4] & !B1L12));


--B1L15 is neuron_l1_n0:n0|Add1~14
B1L15 = (J1_r_data_out[-3] & (!B1L14)) # (!J1_r_data_out[-3] & ((B1L14) # (GND)));

--B1L16 is neuron_l1_n0:n0|Add1~15
B1L16 = CARRY((!B1L14) # (!J1_r_data_out[-3]));


--B1L17 is neuron_l1_n0:n0|Add1~16
B1L17 = (J1_r_data_out[-2] & (B1L16 $ (GND))) # (!J1_r_data_out[-2] & (!B1L16 & VCC));

--B1L18 is neuron_l1_n0:n0|Add1~17
B1L18 = CARRY((J1_r_data_out[-2] & !B1L16));


--B1L19 is neuron_l1_n0:n0|Add1~18
B1L19 = (J1_r_data_out[-1] & (!B1L18)) # (!J1_r_data_out[-1] & ((B1L18) # (GND)));

--B1L20 is neuron_l1_n0:n0|Add1~19
B1L20 = CARRY((!B1L18) # (!J1_r_data_out[-1]));


--B1L21 is neuron_l1_n0:n0|Add1~20
B1L21 = (J1_r_data_out[0] & (B1L20 $ (GND))) # (!J1_r_data_out[0] & (!B1L20 & VCC));

--B1L22 is neuron_l1_n0:n0|Add1~21
B1L22 = CARRY((J1_r_data_out[0] & !B1L20));


--B1L23 is neuron_l1_n0:n0|Add1~22
B1L23 = (J1_r_data_out[1] & (!B1L22)) # (!J1_r_data_out[1] & ((B1L22) # (GND)));

--B1L24 is neuron_l1_n0:n0|Add1~23
B1L24 = CARRY((!B1L22) # (!J1_r_data_out[1]));


--B1L25 is neuron_l1_n0:n0|Add1~24
B1L25 = (J1_r_data_out[2] & (B1L24 $ (GND))) # (!J1_r_data_out[2] & (!B1L24 & VCC));

--B1L26 is neuron_l1_n0:n0|Add1~25
B1L26 = CARRY((J1_r_data_out[2] & !B1L24));


--B1L27 is neuron_l1_n0:n0|Add1~26
B1L27 = (J1_r_data_out[3] & (!B1L26)) # (!J1_r_data_out[3] & ((B1L26) # (GND)));

--B1L28 is neuron_l1_n0:n0|Add1~27
B1L28 = CARRY((!B1L26) # (!J1_r_data_out[3]));


--B1L29 is neuron_l1_n0:n0|Add1~28
B1L29 = (J1_r_data_out[4] & (B1L28 $ (GND))) # (!J1_r_data_out[4] & (!B1L28 & VCC));

--B1L30 is neuron_l1_n0:n0|Add1~29
B1L30 = CARRY((J1_r_data_out[4] & !B1L28));


--B1L31 is neuron_l1_n0:n0|Add1~30
B1L31 = J1_r_data_out[4] $ (!B1L30);


--C1L1 is neuron_l1_n1:n1|Add1~0
C1L1 = J2_r_data_out[-8] $ (VCC);

--C1L2 is neuron_l1_n1:n1|Add1~1
C1L2 = CARRY(J2_r_data_out[-8]);


--C1L3 is neuron_l1_n1:n1|Add1~2
C1L3 = (J2_r_data_out[-7] & (!C1L2)) # (!J2_r_data_out[-7] & ((C1L2) # (GND)));

--C1L4 is neuron_l1_n1:n1|Add1~3
C1L4 = CARRY((!C1L2) # (!J2_r_data_out[-7]));


--C1L5 is neuron_l1_n1:n1|Add1~4
C1L5 = (J2_r_data_out[-6] & ((GND) # (!C1L4))) # (!J2_r_data_out[-6] & (C1L4 $ (GND)));

--C1L6 is neuron_l1_n1:n1|Add1~5
C1L6 = CARRY((J2_r_data_out[-6]) # (!C1L4));


--C1L7 is neuron_l1_n1:n1|Add1~6
C1L7 = (J2_r_data_out[-5] & (C1L6 & VCC)) # (!J2_r_data_out[-5] & (!C1L6));

--C1L8 is neuron_l1_n1:n1|Add1~7
C1L8 = CARRY((!J2_r_data_out[-5] & !C1L6));


--C1L9 is neuron_l1_n1:n1|Add1~8
C1L9 = (J2_r_data_out[-4] & (C1L8 $ (GND))) # (!J2_r_data_out[-4] & (!C1L8 & VCC));

--C1L10 is neuron_l1_n1:n1|Add1~9
C1L10 = CARRY((J2_r_data_out[-4] & !C1L8));


--C1L11 is neuron_l1_n1:n1|Add1~10
C1L11 = (J2_r_data_out[-3] & (!C1L10)) # (!J2_r_data_out[-3] & ((C1L10) # (GND)));

--C1L12 is neuron_l1_n1:n1|Add1~11
C1L12 = CARRY((!C1L10) # (!J2_r_data_out[-3]));


--C1L13 is neuron_l1_n1:n1|Add1~12
C1L13 = (J2_r_data_out[-2] & (C1L12 $ (GND))) # (!J2_r_data_out[-2] & (!C1L12 & VCC));

--C1L14 is neuron_l1_n1:n1|Add1~13
C1L14 = CARRY((J2_r_data_out[-2] & !C1L12));


--C1L15 is neuron_l1_n1:n1|Add1~14
C1L15 = (J2_r_data_out[-1] & (!C1L14)) # (!J2_r_data_out[-1] & ((C1L14) # (GND)));

--C1L16 is neuron_l1_n1:n1|Add1~15
C1L16 = CARRY((!C1L14) # (!J2_r_data_out[-1]));


--C1L17 is neuron_l1_n1:n1|Add1~16
C1L17 = (J2_r_data_out[0] & (C1L16 $ (GND))) # (!J2_r_data_out[0] & (!C1L16 & VCC));

--C1L18 is neuron_l1_n1:n1|Add1~17
C1L18 = CARRY((J2_r_data_out[0] & !C1L16));


--C1L19 is neuron_l1_n1:n1|Add1~18
C1L19 = (J2_r_data_out[1] & (!C1L18)) # (!J2_r_data_out[1] & ((C1L18) # (GND)));

--C1L20 is neuron_l1_n1:n1|Add1~19
C1L20 = CARRY((!C1L18) # (!J2_r_data_out[1]));


--C1L21 is neuron_l1_n1:n1|Add1~20
C1L21 = (J2_r_data_out[2] & (C1L20 $ (GND))) # (!J2_r_data_out[2] & (!C1L20 & VCC));

--C1L22 is neuron_l1_n1:n1|Add1~21
C1L22 = CARRY((J2_r_data_out[2] & !C1L20));


--C1L23 is neuron_l1_n1:n1|Add1~22
C1L23 = (J2_r_data_out[3] & (!C1L22)) # (!J2_r_data_out[3] & ((C1L22) # (GND)));

--C1L24 is neuron_l1_n1:n1|Add1~23
C1L24 = CARRY((!C1L22) # (!J2_r_data_out[3]));


--C1L25 is neuron_l1_n1:n1|Add1~24
C1L25 = (J2_r_data_out[4] & (C1L24 $ (GND))) # (!J2_r_data_out[4] & (!C1L24 & VCC));

--C1L26 is neuron_l1_n1:n1|Add1~25
C1L26 = CARRY((J2_r_data_out[4] & !C1L24));


--C1L27 is neuron_l1_n1:n1|Add1~26
C1L27 = J2_r_data_out[4] $ (!C1L26);


--D1L1 is neuron_l1_n2:n2|Add1~0
D1L1 = J3_r_data_out[-10] $ (VCC);

--D1L2 is neuron_l1_n2:n2|Add1~1
D1L2 = CARRY(J3_r_data_out[-10]);


--D1L3 is neuron_l1_n2:n2|Add1~2
D1L3 = (J3_r_data_out[-9] & (!D1L2)) # (!J3_r_data_out[-9] & ((D1L2) # (GND)));

--D1L4 is neuron_l1_n2:n2|Add1~3
D1L4 = CARRY((!D1L2) # (!J3_r_data_out[-9]));


--D1L5 is neuron_l1_n2:n2|Add1~4
D1L5 = (J3_r_data_out[-8] & ((GND) # (!D1L4))) # (!J3_r_data_out[-8] & (D1L4 $ (GND)));

--D1L6 is neuron_l1_n2:n2|Add1~5
D1L6 = CARRY((J3_r_data_out[-8]) # (!D1L4));


--D1L7 is neuron_l1_n2:n2|Add1~6
D1L7 = (J3_r_data_out[-7] & (!D1L6)) # (!J3_r_data_out[-7] & ((D1L6) # (GND)));

--D1L8 is neuron_l1_n2:n2|Add1~7
D1L8 = CARRY((!D1L6) # (!J3_r_data_out[-7]));


--D1L9 is neuron_l1_n2:n2|Add1~8
D1L9 = (J3_r_data_out[-6] & ((GND) # (!D1L8))) # (!J3_r_data_out[-6] & (D1L8 $ (GND)));

--D1L10 is neuron_l1_n2:n2|Add1~9
D1L10 = CARRY((J3_r_data_out[-6]) # (!D1L8));


--D1L11 is neuron_l1_n2:n2|Add1~10
D1L11 = (J3_r_data_out[-5] & (!D1L10)) # (!J3_r_data_out[-5] & ((D1L10) # (GND)));

--D1L12 is neuron_l1_n2:n2|Add1~11
D1L12 = CARRY((!D1L10) # (!J3_r_data_out[-5]));


--D1L13 is neuron_l1_n2:n2|Add1~12
D1L13 = (J3_r_data_out[-4] & (D1L12 $ (GND))) # (!J3_r_data_out[-4] & (!D1L12 & VCC));

--D1L14 is neuron_l1_n2:n2|Add1~13
D1L14 = CARRY((J3_r_data_out[-4] & !D1L12));


--D1L15 is neuron_l1_n2:n2|Add1~14
D1L15 = (J3_r_data_out[-3] & (!D1L14)) # (!J3_r_data_out[-3] & ((D1L14) # (GND)));

--D1L16 is neuron_l1_n2:n2|Add1~15
D1L16 = CARRY((!D1L14) # (!J3_r_data_out[-3]));


--D1L17 is neuron_l1_n2:n2|Add1~16
D1L17 = (J3_r_data_out[-2] & (D1L16 $ (GND))) # (!J3_r_data_out[-2] & (!D1L16 & VCC));

--D1L18 is neuron_l1_n2:n2|Add1~17
D1L18 = CARRY((J3_r_data_out[-2] & !D1L16));


--D1L19 is neuron_l1_n2:n2|Add1~18
D1L19 = (J3_r_data_out[-1] & (!D1L18)) # (!J3_r_data_out[-1] & ((D1L18) # (GND)));

--D1L20 is neuron_l1_n2:n2|Add1~19
D1L20 = CARRY((!D1L18) # (!J3_r_data_out[-1]));


--D1L21 is neuron_l1_n2:n2|Add1~20
D1L21 = (J3_r_data_out[0] & (D1L20 $ (GND))) # (!J3_r_data_out[0] & (!D1L20 & VCC));

--D1L22 is neuron_l1_n2:n2|Add1~21
D1L22 = CARRY((J3_r_data_out[0] & !D1L20));


--D1L23 is neuron_l1_n2:n2|Add1~22
D1L23 = (J3_r_data_out[1] & (!D1L22)) # (!J3_r_data_out[1] & ((D1L22) # (GND)));

--D1L24 is neuron_l1_n2:n2|Add1~23
D1L24 = CARRY((!D1L22) # (!J3_r_data_out[1]));


--D1L25 is neuron_l1_n2:n2|Add1~24
D1L25 = (J3_r_data_out[2] & (D1L24 $ (GND))) # (!J3_r_data_out[2] & (!D1L24 & VCC));

--D1L26 is neuron_l1_n2:n2|Add1~25
D1L26 = CARRY((J3_r_data_out[2] & !D1L24));


--D1L27 is neuron_l1_n2:n2|Add1~26
D1L27 = (J3_r_data_out[3] & (!D1L26)) # (!J3_r_data_out[3] & ((D1L26) # (GND)));

--D1L28 is neuron_l1_n2:n2|Add1~27
D1L28 = CARRY((!D1L26) # (!J3_r_data_out[3]));


--D1L29 is neuron_l1_n2:n2|Add1~28
D1L29 = (J3_r_data_out[4] & (D1L28 $ (GND))) # (!J3_r_data_out[4] & (!D1L28 & VCC));

--D1L30 is neuron_l1_n2:n2|Add1~29
D1L30 = CARRY((J3_r_data_out[4] & !D1L28));


--D1L31 is neuron_l1_n2:n2|Add1~30
D1L31 = J3_r_data_out[4] $ (!D1L30);


--E1L1 is neuron_l1_n3:n3|Add1~0
E1L1 = J4_r_data_out[-11] $ (VCC);

--E1L2 is neuron_l1_n3:n3|Add1~1
E1L2 = CARRY(J4_r_data_out[-11]);


--E1L3 is neuron_l1_n3:n3|Add1~2
E1L3 = (J4_r_data_out[-10] & (E1L2 & VCC)) # (!J4_r_data_out[-10] & (!E1L2));

--E1L4 is neuron_l1_n3:n3|Add1~3
E1L4 = CARRY((!J4_r_data_out[-10] & !E1L2));


--E1L5 is neuron_l1_n3:n3|Add1~4
E1L5 = (J4_r_data_out[-9] & (E1L4 $ (GND))) # (!J4_r_data_out[-9] & (!E1L4 & VCC));

--E1L6 is neuron_l1_n3:n3|Add1~5
E1L6 = CARRY((J4_r_data_out[-9] & !E1L4));


--E1L7 is neuron_l1_n3:n3|Add1~6
E1L7 = (J4_r_data_out[-8] & (E1L6 & VCC)) # (!J4_r_data_out[-8] & (!E1L6));

--E1L8 is neuron_l1_n3:n3|Add1~7
E1L8 = CARRY((!J4_r_data_out[-8] & !E1L6));


--E1L9 is neuron_l1_n3:n3|Add1~8
E1L9 = (J4_r_data_out[-7] & (E1L8 $ (GND))) # (!J4_r_data_out[-7] & (!E1L8 & VCC));

--E1L10 is neuron_l1_n3:n3|Add1~9
E1L10 = CARRY((J4_r_data_out[-7] & !E1L8));


--E1L11 is neuron_l1_n3:n3|Add1~10
E1L11 = (J4_r_data_out[-6] & (!E1L10)) # (!J4_r_data_out[-6] & ((E1L10) # (GND)));

--E1L12 is neuron_l1_n3:n3|Add1~11
E1L12 = CARRY((!E1L10) # (!J4_r_data_out[-6]));


--E1L13 is neuron_l1_n3:n3|Add1~12
E1L13 = (J4_r_data_out[-5] & (E1L12 $ (GND))) # (!J4_r_data_out[-5] & (!E1L12 & VCC));

--E1L14 is neuron_l1_n3:n3|Add1~13
E1L14 = CARRY((J4_r_data_out[-5] & !E1L12));


--E1L15 is neuron_l1_n3:n3|Add1~14
E1L15 = (J4_r_data_out[-4] & (E1L14 & VCC)) # (!J4_r_data_out[-4] & (!E1L14));

--E1L16 is neuron_l1_n3:n3|Add1~15
E1L16 = CARRY((!J4_r_data_out[-4] & !E1L14));


--E1L17 is neuron_l1_n3:n3|Add1~16
E1L17 = (J4_r_data_out[-3] & (E1L16 $ (GND))) # (!J4_r_data_out[-3] & (!E1L16 & VCC));

--E1L18 is neuron_l1_n3:n3|Add1~17
E1L18 = CARRY((J4_r_data_out[-3] & !E1L16));


--E1L19 is neuron_l1_n3:n3|Add1~18
E1L19 = (J4_r_data_out[-2] & (!E1L18)) # (!J4_r_data_out[-2] & ((E1L18) # (GND)));

--E1L20 is neuron_l1_n3:n3|Add1~19
E1L20 = CARRY((!E1L18) # (!J4_r_data_out[-2]));


--E1L21 is neuron_l1_n3:n3|Add1~20
E1L21 = (J4_r_data_out[-1] & (E1L20 $ (GND))) # (!J4_r_data_out[-1] & (!E1L20 & VCC));

--E1L22 is neuron_l1_n3:n3|Add1~21
E1L22 = CARRY((J4_r_data_out[-1] & !E1L20));


--E1L23 is neuron_l1_n3:n3|Add1~22
E1L23 = (J4_r_data_out[0] & (!E1L22)) # (!J4_r_data_out[0] & ((E1L22) # (GND)));

--E1L24 is neuron_l1_n3:n3|Add1~23
E1L24 = CARRY((!E1L22) # (!J4_r_data_out[0]));


--E1L25 is neuron_l1_n3:n3|Add1~24
E1L25 = (J4_r_data_out[1] & (E1L24 $ (GND))) # (!J4_r_data_out[1] & (!E1L24 & VCC));

--E1L26 is neuron_l1_n3:n3|Add1~25
E1L26 = CARRY((J4_r_data_out[1] & !E1L24));


--E1L27 is neuron_l1_n3:n3|Add1~26
E1L27 = (J4_r_data_out[2] & (!E1L26)) # (!J4_r_data_out[2] & ((E1L26) # (GND)));

--E1L28 is neuron_l1_n3:n3|Add1~27
E1L28 = CARRY((!E1L26) # (!J4_r_data_out[2]));


--E1L29 is neuron_l1_n3:n3|Add1~28
E1L29 = (J4_r_data_out[3] & (E1L28 $ (GND))) # (!J4_r_data_out[3] & (!E1L28 & VCC));

--E1L30 is neuron_l1_n3:n3|Add1~29
E1L30 = CARRY((J4_r_data_out[3] & !E1L28));


--E1L31 is neuron_l1_n3:n3|Add1~30
E1L31 = (J4_r_data_out[4] & (!E1L30)) # (!J4_r_data_out[4] & ((E1L30) # (GND)));

--E1L32 is neuron_l1_n3:n3|Add1~31
E1L32 = CARRY((!E1L30) # (!J4_r_data_out[4]));


--E1L33 is neuron_l1_n3:n3|Add1~32
E1L33 = J4_r_data_out[4] $ (E1L32);


--F1L1 is neuron_l1_n4:n4|Add1~0
F1L1 = J5_r_data_out[-11] $ (VCC);

--F1L2 is neuron_l1_n4:n4|Add1~1
F1L2 = CARRY(J5_r_data_out[-11]);


--F1L3 is neuron_l1_n4:n4|Add1~2
F1L3 = (J5_r_data_out[-10] & (F1L2 & VCC)) # (!J5_r_data_out[-10] & (!F1L2));

--F1L4 is neuron_l1_n4:n4|Add1~3
F1L4 = CARRY((!J5_r_data_out[-10] & !F1L2));


--F1L5 is neuron_l1_n4:n4|Add1~4
F1L5 = (J5_r_data_out[-9] & ((GND) # (!F1L4))) # (!J5_r_data_out[-9] & (F1L4 $ (GND)));

--F1L6 is neuron_l1_n4:n4|Add1~5
F1L6 = CARRY((J5_r_data_out[-9]) # (!F1L4));


--F1L7 is neuron_l1_n4:n4|Add1~6
F1L7 = (J5_r_data_out[-8] & (F1L6 & VCC)) # (!J5_r_data_out[-8] & (!F1L6));

--F1L8 is neuron_l1_n4:n4|Add1~7
F1L8 = CARRY((!J5_r_data_out[-8] & !F1L6));


--F1L9 is neuron_l1_n4:n4|Add1~8
F1L9 = (J5_r_data_out[-7] & ((GND) # (!F1L8))) # (!J5_r_data_out[-7] & (F1L8 $ (GND)));

--F1L10 is neuron_l1_n4:n4|Add1~9
F1L10 = CARRY((J5_r_data_out[-7]) # (!F1L8));


--F1L11 is neuron_l1_n4:n4|Add1~10
F1L11 = (J5_r_data_out[-6] & (!F1L10)) # (!J5_r_data_out[-6] & ((F1L10) # (GND)));

--F1L12 is neuron_l1_n4:n4|Add1~11
F1L12 = CARRY((!F1L10) # (!J5_r_data_out[-6]));


--F1L13 is neuron_l1_n4:n4|Add1~12
F1L13 = (J5_r_data_out[-5] & ((GND) # (!F1L12))) # (!J5_r_data_out[-5] & (F1L12 $ (GND)));

--F1L14 is neuron_l1_n4:n4|Add1~13
F1L14 = CARRY((J5_r_data_out[-5]) # (!F1L12));


--F1L15 is neuron_l1_n4:n4|Add1~14
F1L15 = (J5_r_data_out[-4] & (F1L14 & VCC)) # (!J5_r_data_out[-4] & (!F1L14));

--F1L16 is neuron_l1_n4:n4|Add1~15
F1L16 = CARRY((!J5_r_data_out[-4] & !F1L14));


--F1L17 is neuron_l1_n4:n4|Add1~16
F1L17 = (J5_r_data_out[-3] & (F1L16 $ (GND))) # (!J5_r_data_out[-3] & (!F1L16 & VCC));

--F1L18 is neuron_l1_n4:n4|Add1~17
F1L18 = CARRY((J5_r_data_out[-3] & !F1L16));


--F1L19 is neuron_l1_n4:n4|Add1~18
F1L19 = (J5_r_data_out[-2] & (!F1L18)) # (!J5_r_data_out[-2] & ((F1L18) # (GND)));

--F1L20 is neuron_l1_n4:n4|Add1~19
F1L20 = CARRY((!F1L18) # (!J5_r_data_out[-2]));


--F1L21 is neuron_l1_n4:n4|Add1~20
F1L21 = (J5_r_data_out[-1] & (F1L20 $ (GND))) # (!J5_r_data_out[-1] & (!F1L20 & VCC));

--F1L22 is neuron_l1_n4:n4|Add1~21
F1L22 = CARRY((J5_r_data_out[-1] & !F1L20));


--F1L23 is neuron_l1_n4:n4|Add1~22
F1L23 = (J5_r_data_out[0] & (!F1L22)) # (!J5_r_data_out[0] & ((F1L22) # (GND)));

--F1L24 is neuron_l1_n4:n4|Add1~23
F1L24 = CARRY((!F1L22) # (!J5_r_data_out[0]));


--F1L25 is neuron_l1_n4:n4|Add1~24
F1L25 = (J5_r_data_out[1] & (F1L24 $ (GND))) # (!J5_r_data_out[1] & (!F1L24 & VCC));

--F1L26 is neuron_l1_n4:n4|Add1~25
F1L26 = CARRY((J5_r_data_out[1] & !F1L24));


--F1L27 is neuron_l1_n4:n4|Add1~26
F1L27 = (J5_r_data_out[2] & (!F1L26)) # (!J5_r_data_out[2] & ((F1L26) # (GND)));

--F1L28 is neuron_l1_n4:n4|Add1~27
F1L28 = CARRY((!F1L26) # (!J5_r_data_out[2]));


--F1L29 is neuron_l1_n4:n4|Add1~28
F1L29 = (J5_r_data_out[3] & (F1L28 $ (GND))) # (!J5_r_data_out[3] & (!F1L28 & VCC));

--F1L30 is neuron_l1_n4:n4|Add1~29
F1L30 = CARRY((J5_r_data_out[3] & !F1L28));


--F1L31 is neuron_l1_n4:n4|Add1~30
F1L31 = (J5_r_data_out[4] & (!F1L30)) # (!J5_r_data_out[4] & ((F1L30) # (GND)));

--F1L32 is neuron_l1_n4:n4|Add1~31
F1L32 = CARRY((!F1L30) # (!J5_r_data_out[4]));


--F1L33 is neuron_l1_n4:n4|Add1~32
F1L33 = J5_r_data_out[4] $ (F1L32);


--G1L1 is neuron_l1_n5:n5|Add1~0
G1L1 = J6_r_data_out[-11] $ (VCC);

--G1L2 is neuron_l1_n5:n5|Add1~1
G1L2 = CARRY(J6_r_data_out[-11]);


--G1L3 is neuron_l1_n5:n5|Add1~2
G1L3 = (J6_r_data_out[-10] & (!G1L2)) # (!J6_r_data_out[-10] & ((G1L2) # (GND)));

--G1L4 is neuron_l1_n5:n5|Add1~3
G1L4 = CARRY((!G1L2) # (!J6_r_data_out[-10]));


--G1L5 is neuron_l1_n5:n5|Add1~4
G1L5 = (J6_r_data_out[-9] & ((GND) # (!G1L4))) # (!J6_r_data_out[-9] & (G1L4 $ (GND)));

--G1L6 is neuron_l1_n5:n5|Add1~5
G1L6 = CARRY((J6_r_data_out[-9]) # (!G1L4));


--G1L7 is neuron_l1_n5:n5|Add1~6
G1L7 = (J6_r_data_out[-8] & (G1L6 & VCC)) # (!J6_r_data_out[-8] & (!G1L6));

--G1L8 is neuron_l1_n5:n5|Add1~7
G1L8 = CARRY((!J6_r_data_out[-8] & !G1L6));


--G1L9 is neuron_l1_n5:n5|Add1~8
G1L9 = (J6_r_data_out[-7] & ((GND) # (!G1L8))) # (!J6_r_data_out[-7] & (G1L8 $ (GND)));

--G1L10 is neuron_l1_n5:n5|Add1~9
G1L10 = CARRY((J6_r_data_out[-7]) # (!G1L8));


--G1L11 is neuron_l1_n5:n5|Add1~10
G1L11 = (J6_r_data_out[-6] & (G1L10 & VCC)) # (!J6_r_data_out[-6] & (!G1L10));

--G1L12 is neuron_l1_n5:n5|Add1~11
G1L12 = CARRY((!J6_r_data_out[-6] & !G1L10));


--G1L13 is neuron_l1_n5:n5|Add1~12
G1L13 = (J6_r_data_out[-5] & (G1L12 $ (GND))) # (!J6_r_data_out[-5] & (!G1L12 & VCC));

--G1L14 is neuron_l1_n5:n5|Add1~13
G1L14 = CARRY((J6_r_data_out[-5] & !G1L12));


--G1L15 is neuron_l1_n5:n5|Add1~14
G1L15 = (J6_r_data_out[-4] & (G1L14 & VCC)) # (!J6_r_data_out[-4] & (!G1L14));

--G1L16 is neuron_l1_n5:n5|Add1~15
G1L16 = CARRY((!J6_r_data_out[-4] & !G1L14));


--G1L17 is neuron_l1_n5:n5|Add1~16
G1L17 = (J6_r_data_out[-3] & (G1L16 $ (GND))) # (!J6_r_data_out[-3] & (!G1L16 & VCC));

--G1L18 is neuron_l1_n5:n5|Add1~17
G1L18 = CARRY((J6_r_data_out[-3] & !G1L16));


--G1L19 is neuron_l1_n5:n5|Add1~18
G1L19 = (J6_r_data_out[-2] & (!G1L18)) # (!J6_r_data_out[-2] & ((G1L18) # (GND)));

--G1L20 is neuron_l1_n5:n5|Add1~19
G1L20 = CARRY((!G1L18) # (!J6_r_data_out[-2]));


--G1L21 is neuron_l1_n5:n5|Add1~20
G1L21 = (J6_r_data_out[-1] & (G1L20 $ (GND))) # (!J6_r_data_out[-1] & (!G1L20 & VCC));

--G1L22 is neuron_l1_n5:n5|Add1~21
G1L22 = CARRY((J6_r_data_out[-1] & !G1L20));


--G1L23 is neuron_l1_n5:n5|Add1~22
G1L23 = (J6_r_data_out[0] & (!G1L22)) # (!J6_r_data_out[0] & ((G1L22) # (GND)));

--G1L24 is neuron_l1_n5:n5|Add1~23
G1L24 = CARRY((!G1L22) # (!J6_r_data_out[0]));


--G1L25 is neuron_l1_n5:n5|Add1~24
G1L25 = (J6_r_data_out[1] & (G1L24 $ (GND))) # (!J6_r_data_out[1] & (!G1L24 & VCC));

--G1L26 is neuron_l1_n5:n5|Add1~25
G1L26 = CARRY((J6_r_data_out[1] & !G1L24));


--G1L27 is neuron_l1_n5:n5|Add1~26
G1L27 = (J6_r_data_out[2] & (!G1L26)) # (!J6_r_data_out[2] & ((G1L26) # (GND)));

--G1L28 is neuron_l1_n5:n5|Add1~27
G1L28 = CARRY((!G1L26) # (!J6_r_data_out[2]));


--G1L29 is neuron_l1_n5:n5|Add1~28
G1L29 = (J6_r_data_out[3] & (G1L28 $ (GND))) # (!J6_r_data_out[3] & (!G1L28 & VCC));

--G1L30 is neuron_l1_n5:n5|Add1~29
G1L30 = CARRY((J6_r_data_out[3] & !G1L28));


--G1L31 is neuron_l1_n5:n5|Add1~30
G1L31 = (J6_r_data_out[4] & (!G1L30)) # (!J6_r_data_out[4] & ((G1L30) # (GND)));

--G1L32 is neuron_l1_n5:n5|Add1~31
G1L32 = CARRY((!G1L30) # (!J6_r_data_out[4]));


--G1L33 is neuron_l1_n5:n5|Add1~32
G1L33 = J6_r_data_out[4] $ (G1L32);


--M1_mac_out2 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2
--DSP Block Operation Mode: Simple Multiplier (18-bit)
M1_mac_out2 = M1_mac_mult1;

--M1L34 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT1
M1L34 = M1L2;

--M1L35 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT2
M1L35 = M1L3;

--M1L36 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT3
M1L36 = M1L4;

--M1L37 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT4
M1L37 = M1L5;

--M1L38 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT5
M1L38 = M1L6;

--M1L39 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT6
M1L39 = M1L7;

--M1L40 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT7
M1L40 = M1L8;

--M1L41 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT8
M1L41 = M1L9;

--M1L42 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT9
M1L42 = M1L10;

--M1L43 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT10
M1L43 = M1L11;

--M1L44 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT11
M1L44 = M1L12;

--M1L45 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT12
M1L45 = M1L13;

--M1L46 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT13
M1L46 = M1L14;

--M1L47 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT14
M1L47 = M1L15;

--M1L48 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT15
M1L48 = M1L16;

--M1L49 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT16
M1L49 = M1L17;

--M1L50 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT17
M1L50 = M1L18;

--M1L51 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT18
M1L51 = M1L19;

--M1L52 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT19
M1L52 = M1L20;

--M1L53 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT20
M1L53 = M1L21;

--M1L54 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT21
M1L54 = M1L22;

--M1L55 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT22
M1L55 = M1L23;

--M1L56 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT23
M1L56 = M1L24;

--M1L57 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT24
M1L57 = M1L25;

--M1L58 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT25
M1L58 = M1L26;

--M1L59 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT26
M1L59 = M1L27;

--M1L60 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT27
M1L60 = M1L28;

--M1L61 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT28
M1L61 = M1L29;

--M1L62 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT29
M1L62 = M1L30;

--M1L63 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT30
M1L63 = M1L31;

--M1L64 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT31
M1L64 = M1L32;


--J1L35 is neuron_l1_n0:n0|mac:mac_n1|Add1~0
J1L35 = J1L124 $ (VCC);

--J1L36 is neuron_l1_n0:n0|mac:mac_n1|Add1~1
J1L36 = CARRY(J1L124);


--J1L37 is neuron_l1_n0:n0|mac:mac_n1|Add1~2
J1L37 = (J1L138 & (!J1L36)) # (!J1L138 & ((J1L36) # (GND)));

--J1L38 is neuron_l1_n0:n0|mac:mac_n1|Add1~3
J1L38 = CARRY((!J1L36) # (!J1L138));


--J1L39 is neuron_l1_n0:n0|mac:mac_n1|Add1~4
J1L39 = (J1L137 & (J1L38 $ (GND))) # (!J1L137 & (!J1L38 & VCC));

--J1L40 is neuron_l1_n0:n0|mac:mac_n1|Add1~5
J1L40 = CARRY((J1L137 & !J1L38));


--J1L41 is neuron_l1_n0:n0|mac:mac_n1|Add1~6
J1L41 = (J1L136 & (!J1L40)) # (!J1L136 & ((J1L40) # (GND)));

--J1L42 is neuron_l1_n0:n0|mac:mac_n1|Add1~7
J1L42 = CARRY((!J1L40) # (!J1L136));


--J1L43 is neuron_l1_n0:n0|mac:mac_n1|Add1~8
J1L43 = (J1L135 & (J1L42 $ (GND))) # (!J1L135 & (!J1L42 & VCC));

--J1L44 is neuron_l1_n0:n0|mac:mac_n1|Add1~9
J1L44 = CARRY((J1L135 & !J1L42));


--J1L45 is neuron_l1_n0:n0|mac:mac_n1|Add1~10
J1L45 = (J1L134 & (!J1L44)) # (!J1L134 & ((J1L44) # (GND)));

--J1L46 is neuron_l1_n0:n0|mac:mac_n1|Add1~11
J1L46 = CARRY((!J1L44) # (!J1L134));


--J1L47 is neuron_l1_n0:n0|mac:mac_n1|Add1~12
J1L47 = (J1L133 & (J1L46 $ (GND))) # (!J1L133 & (!J1L46 & VCC));

--J1L48 is neuron_l1_n0:n0|mac:mac_n1|Add1~13
J1L48 = CARRY((J1L133 & !J1L46));


--J1L49 is neuron_l1_n0:n0|mac:mac_n1|Add1~14
J1L49 = (J1L132 & (!J1L48)) # (!J1L132 & ((J1L48) # (GND)));

--J1L50 is neuron_l1_n0:n0|mac:mac_n1|Add1~15
J1L50 = CARRY((!J1L48) # (!J1L132));


--J1L51 is neuron_l1_n0:n0|mac:mac_n1|Add1~16
J1L51 = (J1L131 & (J1L50 $ (GND))) # (!J1L131 & (!J1L50 & VCC));

--J1L52 is neuron_l1_n0:n0|mac:mac_n1|Add1~17
J1L52 = CARRY((J1L131 & !J1L50));


--J1L53 is neuron_l1_n0:n0|mac:mac_n1|Add1~18
J1L53 = (J1L130 & (!J1L52)) # (!J1L130 & ((J1L52) # (GND)));

--J1L54 is neuron_l1_n0:n0|mac:mac_n1|Add1~19
J1L54 = CARRY((!J1L52) # (!J1L130));


--J1L55 is neuron_l1_n0:n0|mac:mac_n1|Add1~20
J1L55 = (J1L129 & (J1L54 $ (GND))) # (!J1L129 & (!J1L54 & VCC));

--J1L56 is neuron_l1_n0:n0|mac:mac_n1|Add1~21
J1L56 = CARRY((J1L129 & !J1L54));


--J1L57 is neuron_l1_n0:n0|mac:mac_n1|Add1~22
J1L57 = (J1L128 & (!J1L56)) # (!J1L128 & ((J1L56) # (GND)));

--J1L58 is neuron_l1_n0:n0|mac:mac_n1|Add1~23
J1L58 = CARRY((!J1L56) # (!J1L128));


--J1L59 is neuron_l1_n0:n0|mac:mac_n1|Add1~24
J1L59 = (J1L127 & (J1L58 $ (GND))) # (!J1L127 & (!J1L58 & VCC));

--J1L60 is neuron_l1_n0:n0|mac:mac_n1|Add1~25
J1L60 = CARRY((J1L127 & !J1L58));


--J1L61 is neuron_l1_n0:n0|mac:mac_n1|Add1~26
J1L61 = (J1L126 & (!J1L60)) # (!J1L126 & ((J1L60) # (GND)));

--J1L62 is neuron_l1_n0:n0|mac:mac_n1|Add1~27
J1L62 = CARRY((!J1L60) # (!J1L126));


--J1L63 is neuron_l1_n0:n0|mac:mac_n1|Add1~28
J1L63 = (J1L125 & (J1L62 $ (GND))) # (!J1L125 & (!J1L62 & VCC));

--J1L64 is neuron_l1_n0:n0|mac:mac_n1|Add1~29
J1L64 = CARRY((J1L125 & !J1L62));


--J1L65 is neuron_l1_n0:n0|mac:mac_n1|Add1~30
J1L65 = (M1L64 & (!J1L64)) # (!M1L64 & ((J1L64) # (GND)));

--J1L66 is neuron_l1_n0:n0|mac:mac_n1|Add1~31
J1L66 = CARRY((!J1L64) # (!M1L64));


--J1L67 is neuron_l1_n0:n0|mac:mac_n1|Add1~32
J1L67 = M1L64 $ (!J1L66);


--J1L1 is neuron_l1_n0:n0|mac:mac_n1|Add0~0
J1L1 = (J1L109 & (J1_r_data_out[-11] $ (VCC))) # (!J1L109 & (J1_r_data_out[-11] & VCC));

--J1L2 is neuron_l1_n0:n0|mac:mac_n1|Add0~1
J1L2 = CARRY((J1L109 & J1_r_data_out[-11]));


--J1L3 is neuron_l1_n0:n0|mac:mac_n1|Add0~2
J1L3 = (J1L107 & ((J1_r_data_out[-10] & (J1L2 & VCC)) # (!J1_r_data_out[-10] & (!J1L2)))) # (!J1L107 & ((J1_r_data_out[-10] & (!J1L2)) # (!J1_r_data_out[-10] & ((J1L2) # (GND)))));

--J1L4 is neuron_l1_n0:n0|mac:mac_n1|Add0~3
J1L4 = CARRY((J1L107 & (!J1_r_data_out[-10] & !J1L2)) # (!J1L107 & ((!J1L2) # (!J1_r_data_out[-10]))));


--J1L5 is neuron_l1_n0:n0|mac:mac_n1|Add0~4
J1L5 = ((J1L105 $ (J1_r_data_out[-9] $ (!J1L4)))) # (GND);

--J1L6 is neuron_l1_n0:n0|mac:mac_n1|Add0~5
J1L6 = CARRY((J1L105 & ((J1_r_data_out[-9]) # (!J1L4))) # (!J1L105 & (J1_r_data_out[-9] & !J1L4)));


--J1L7 is neuron_l1_n0:n0|mac:mac_n1|Add0~6
J1L7 = (J1L103 & ((J1_r_data_out[-8] & (J1L6 & VCC)) # (!J1_r_data_out[-8] & (!J1L6)))) # (!J1L103 & ((J1_r_data_out[-8] & (!J1L6)) # (!J1_r_data_out[-8] & ((J1L6) # (GND)))));

--J1L8 is neuron_l1_n0:n0|mac:mac_n1|Add0~7
J1L8 = CARRY((J1L103 & (!J1_r_data_out[-8] & !J1L6)) # (!J1L103 & ((!J1L6) # (!J1_r_data_out[-8]))));


--J1L9 is neuron_l1_n0:n0|mac:mac_n1|Add0~8
J1L9 = ((J1L101 $ (J1_r_data_out[-7] $ (!J1L8)))) # (GND);

--J1L10 is neuron_l1_n0:n0|mac:mac_n1|Add0~9
J1L10 = CARRY((J1L101 & ((J1_r_data_out[-7]) # (!J1L8))) # (!J1L101 & (J1_r_data_out[-7] & !J1L8)));


--J1L11 is neuron_l1_n0:n0|mac:mac_n1|Add0~10
J1L11 = (J1L99 & ((J1_r_data_out[-6] & (J1L10 & VCC)) # (!J1_r_data_out[-6] & (!J1L10)))) # (!J1L99 & ((J1_r_data_out[-6] & (!J1L10)) # (!J1_r_data_out[-6] & ((J1L10) # (GND)))));

--J1L12 is neuron_l1_n0:n0|mac:mac_n1|Add0~11
J1L12 = CARRY((J1L99 & (!J1_r_data_out[-6] & !J1L10)) # (!J1L99 & ((!J1L10) # (!J1_r_data_out[-6]))));


--J1L13 is neuron_l1_n0:n0|mac:mac_n1|Add0~12
J1L13 = ((J1L97 $ (J1_r_data_out[-5] $ (!J1L12)))) # (GND);

--J1L14 is neuron_l1_n0:n0|mac:mac_n1|Add0~13
J1L14 = CARRY((J1L97 & ((J1_r_data_out[-5]) # (!J1L12))) # (!J1L97 & (J1_r_data_out[-5] & !J1L12)));


--J1L15 is neuron_l1_n0:n0|mac:mac_n1|Add0~14
J1L15 = (J1L95 & ((J1_r_data_out[-4] & (J1L14 & VCC)) # (!J1_r_data_out[-4] & (!J1L14)))) # (!J1L95 & ((J1_r_data_out[-4] & (!J1L14)) # (!J1_r_data_out[-4] & ((J1L14) # (GND)))));

--J1L16 is neuron_l1_n0:n0|mac:mac_n1|Add0~15
J1L16 = CARRY((J1L95 & (!J1_r_data_out[-4] & !J1L14)) # (!J1L95 & ((!J1L14) # (!J1_r_data_out[-4]))));


--J1L17 is neuron_l1_n0:n0|mac:mac_n1|Add0~16
J1L17 = ((J1L93 $ (J1_r_data_out[-3] $ (!J1L16)))) # (GND);

--J1L18 is neuron_l1_n0:n0|mac:mac_n1|Add0~17
J1L18 = CARRY((J1L93 & ((J1_r_data_out[-3]) # (!J1L16))) # (!J1L93 & (J1_r_data_out[-3] & !J1L16)));


--J1L19 is neuron_l1_n0:n0|mac:mac_n1|Add0~18
J1L19 = (J1L91 & ((J1_r_data_out[-2] & (J1L18 & VCC)) # (!J1_r_data_out[-2] & (!J1L18)))) # (!J1L91 & ((J1_r_data_out[-2] & (!J1L18)) # (!J1_r_data_out[-2] & ((J1L18) # (GND)))));

--J1L20 is neuron_l1_n0:n0|mac:mac_n1|Add0~19
J1L20 = CARRY((J1L91 & (!J1_r_data_out[-2] & !J1L18)) # (!J1L91 & ((!J1L18) # (!J1_r_data_out[-2]))));


--J1L21 is neuron_l1_n0:n0|mac:mac_n1|Add0~20
J1L21 = ((J1L89 $ (J1_r_data_out[-1] $ (!J1L20)))) # (GND);

--J1L22 is neuron_l1_n0:n0|mac:mac_n1|Add0~21
J1L22 = CARRY((J1L89 & ((J1_r_data_out[-1]) # (!J1L20))) # (!J1L89 & (J1_r_data_out[-1] & !J1L20)));


--J1L23 is neuron_l1_n0:n0|mac:mac_n1|Add0~22
J1L23 = (J1L111 & ((J1_r_data_out[0] & (J1L22 & VCC)) # (!J1_r_data_out[0] & (!J1L22)))) # (!J1L111 & ((J1_r_data_out[0] & (!J1L22)) # (!J1_r_data_out[0] & ((J1L22) # (GND)))));

--J1L24 is neuron_l1_n0:n0|mac:mac_n1|Add0~23
J1L24 = CARRY((J1L111 & (!J1_r_data_out[0] & !J1L22)) # (!J1L111 & ((!J1L22) # (!J1_r_data_out[0]))));


--J1L25 is neuron_l1_n0:n0|mac:mac_n1|Add0~24
J1L25 = ((J1L113 $ (J1_r_data_out[1] $ (!J1L24)))) # (GND);

--J1L26 is neuron_l1_n0:n0|mac:mac_n1|Add0~25
J1L26 = CARRY((J1L113 & ((J1_r_data_out[1]) # (!J1L24))) # (!J1L113 & (J1_r_data_out[1] & !J1L24)));


--J1L27 is neuron_l1_n0:n0|mac:mac_n1|Add0~26
J1L27 = (J1L115 & ((J1_r_data_out[2] & (J1L26 & VCC)) # (!J1_r_data_out[2] & (!J1L26)))) # (!J1L115 & ((J1_r_data_out[2] & (!J1L26)) # (!J1_r_data_out[2] & ((J1L26) # (GND)))));

--J1L28 is neuron_l1_n0:n0|mac:mac_n1|Add0~27
J1L28 = CARRY((J1L115 & (!J1_r_data_out[2] & !J1L26)) # (!J1L115 & ((!J1L26) # (!J1_r_data_out[2]))));


--J1L29 is neuron_l1_n0:n0|mac:mac_n1|Add0~28
J1L29 = ((J1L119 $ (J1_r_data_out[3] $ (!J1L28)))) # (GND);

--J1L30 is neuron_l1_n0:n0|mac:mac_n1|Add0~29
J1L30 = CARRY((J1L119 & ((J1_r_data_out[3]) # (!J1L28))) # (!J1L119 & (J1_r_data_out[3] & !J1L28)));


--J1L31 is neuron_l1_n0:n0|mac:mac_n1|Add0~30
J1L31 = (J1L120 & ((J1_r_data_out[4] & (J1L30 & VCC)) # (!J1_r_data_out[4] & (!J1L30)))) # (!J1L120 & ((J1_r_data_out[4] & (!J1L30)) # (!J1_r_data_out[4] & ((J1L30) # (GND)))));

--J1L32 is neuron_l1_n0:n0|mac:mac_n1|Add0~31
J1L32 = CARRY((J1L120 & (!J1_r_data_out[4] & !J1L30)) # (!J1L120 & ((!J1L30) # (!J1_r_data_out[4]))));


--J1L33 is neuron_l1_n0:n0|mac:mac_n1|Add0~32
J1L33 = J1L120 $ (J1_r_data_out[4] $ (J1L32));


--B1_r_sinapse_count[17] is neuron_l1_n0:n0|r_sinapse_count[17]
--register power-up is low

B1_r_sinapse_count[17] = DFFEAS(B1L142, i_clk,  ,  , r_enable_n0, B1L229,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[18] is neuron_l1_n0:n0|r_sinapse_count[18]
--register power-up is low

B1_r_sinapse_count[18] = DFFEAS(B1L145, i_clk,  ,  , r_enable_n0, B1L228,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[19] is neuron_l1_n0:n0|r_sinapse_count[19]
--register power-up is low

B1_r_sinapse_count[19] = DFFEAS(B1L148, i_clk,  ,  , r_enable_n0, B1L227,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[20] is neuron_l1_n0:n0|r_sinapse_count[20]
--register power-up is low

B1_r_sinapse_count[20] = DFFEAS(B1L151, i_clk,  ,  , r_enable_n0, B1L226,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[31] is neuron_l1_n0:n0|r_sinapse_count[31]
--register power-up is low

B1_r_sinapse_count[31] = DFFEAS(B1L184, i_clk,  ,  , r_enable_n0, B1L215,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[1] is neuron_l1_n0:n0|r_sinapse_count[1]
--register power-up is low

B1_r_sinapse_count[1] = DFFEAS(B1L94, i_clk,  ,  , r_enable_n0, B1L245,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[2] is neuron_l1_n0:n0|r_sinapse_count[2]
--register power-up is low

B1_r_sinapse_count[2] = DFFEAS(B1L97, i_clk,  ,  , r_enable_n0, B1L244,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[3] is neuron_l1_n0:n0|r_sinapse_count[3]
--register power-up is low

B1_r_sinapse_count[3] = DFFEAS(B1L100, i_clk,  ,  , r_enable_n0, B1L243,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[4] is neuron_l1_n0:n0|r_sinapse_count[4]
--register power-up is low

B1_r_sinapse_count[4] = DFFEAS(B1L103, i_clk,  ,  , r_enable_n0, B1L242,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[5] is neuron_l1_n0:n0|r_sinapse_count[5]
--register power-up is low

B1_r_sinapse_count[5] = DFFEAS(B1L106, i_clk,  ,  , r_enable_n0, B1L241,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[6] is neuron_l1_n0:n0|r_sinapse_count[6]
--register power-up is low

B1_r_sinapse_count[6] = DFFEAS(B1L109, i_clk,  ,  , r_enable_n0, B1L240,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[7] is neuron_l1_n0:n0|r_sinapse_count[7]
--register power-up is low

B1_r_sinapse_count[7] = DFFEAS(B1L112, i_clk,  ,  , r_enable_n0, B1L239,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[8] is neuron_l1_n0:n0|r_sinapse_count[8]
--register power-up is low

B1_r_sinapse_count[8] = DFFEAS(B1L115, i_clk,  ,  , r_enable_n0, B1L238,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[9] is neuron_l1_n0:n0|r_sinapse_count[9]
--register power-up is low

B1_r_sinapse_count[9] = DFFEAS(B1L118, i_clk,  ,  , r_enable_n0, B1L237,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[10] is neuron_l1_n0:n0|r_sinapse_count[10]
--register power-up is low

B1_r_sinapse_count[10] = DFFEAS(B1L121, i_clk,  ,  , r_enable_n0, B1L236,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[11] is neuron_l1_n0:n0|r_sinapse_count[11]
--register power-up is low

B1_r_sinapse_count[11] = DFFEAS(B1L124, i_clk,  ,  , r_enable_n0, B1L235,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[12] is neuron_l1_n0:n0|r_sinapse_count[12]
--register power-up is low

B1_r_sinapse_count[12] = DFFEAS(B1L127, i_clk,  ,  , r_enable_n0, B1L234,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[13] is neuron_l1_n0:n0|r_sinapse_count[13]
--register power-up is low

B1_r_sinapse_count[13] = DFFEAS(B1L130, i_clk,  ,  , r_enable_n0, B1L233,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[14] is neuron_l1_n0:n0|r_sinapse_count[14]
--register power-up is low

B1_r_sinapse_count[14] = DFFEAS(B1L133, i_clk,  ,  , r_enable_n0, B1L232,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[15] is neuron_l1_n0:n0|r_sinapse_count[15]
--register power-up is low

B1_r_sinapse_count[15] = DFFEAS(B1L136, i_clk,  ,  , r_enable_n0, B1L231,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[16] is neuron_l1_n0:n0|r_sinapse_count[16]
--register power-up is low

B1_r_sinapse_count[16] = DFFEAS(B1L139, i_clk,  ,  , r_enable_n0, B1L230,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[21] is neuron_l1_n0:n0|r_sinapse_count[21]
--register power-up is low

B1_r_sinapse_count[21] = DFFEAS(B1L154, i_clk,  ,  , r_enable_n0, B1L225,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[22] is neuron_l1_n0:n0|r_sinapse_count[22]
--register power-up is low

B1_r_sinapse_count[22] = DFFEAS(B1L157, i_clk,  ,  , r_enable_n0, B1L224,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[23] is neuron_l1_n0:n0|r_sinapse_count[23]
--register power-up is low

B1_r_sinapse_count[23] = DFFEAS(B1L160, i_clk,  ,  , r_enable_n0, B1L223,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[24] is neuron_l1_n0:n0|r_sinapse_count[24]
--register power-up is low

B1_r_sinapse_count[24] = DFFEAS(B1L163, i_clk,  ,  , r_enable_n0, B1L222,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[25] is neuron_l1_n0:n0|r_sinapse_count[25]
--register power-up is low

B1_r_sinapse_count[25] = DFFEAS(B1L166, i_clk,  ,  , r_enable_n0, B1L221,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[26] is neuron_l1_n0:n0|r_sinapse_count[26]
--register power-up is low

B1_r_sinapse_count[26] = DFFEAS(B1L169, i_clk,  ,  , r_enable_n0, B1L220,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[27] is neuron_l1_n0:n0|r_sinapse_count[27]
--register power-up is low

B1_r_sinapse_count[27] = DFFEAS(B1L172, i_clk,  ,  , r_enable_n0, B1L219,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[28] is neuron_l1_n0:n0|r_sinapse_count[28]
--register power-up is low

B1_r_sinapse_count[28] = DFFEAS(B1L175, i_clk,  ,  , r_enable_n0, B1L218,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[29] is neuron_l1_n0:n0|r_sinapse_count[29]
--register power-up is low

B1_r_sinapse_count[29] = DFFEAS(B1L178, i_clk,  ,  , r_enable_n0, B1L217,  ,  , !B1_r_sm.s_get_weight);


--B1_r_sinapse_count[30] is neuron_l1_n0:n0|r_sinapse_count[30]
--register power-up is low

B1_r_sinapse_count[30] = DFFEAS(B1L181, i_clk,  ,  , r_enable_n0, B1L216,  ,  , !B1_r_sm.s_get_weight);


--M2_mac_out2 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2
--DSP Block Operation Mode: Simple Multiplier (18-bit)
M2_mac_out2 = M2_mac_mult1;

--M2L34 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT1
M2L34 = M2L2;

--M2L35 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT2
M2L35 = M2L3;

--M2L36 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT3
M2L36 = M2L4;

--M2L37 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT4
M2L37 = M2L5;

--M2L38 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT5
M2L38 = M2L6;

--M2L39 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT6
M2L39 = M2L7;

--M2L40 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT7
M2L40 = M2L8;

--M2L41 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT8
M2L41 = M2L9;

--M2L42 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT9
M2L42 = M2L10;

--M2L43 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT10
M2L43 = M2L11;

--M2L44 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT11
M2L44 = M2L12;

--M2L45 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT12
M2L45 = M2L13;

--M2L46 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT13
M2L46 = M2L14;

--M2L47 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT14
M2L47 = M2L15;

--M2L48 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT15
M2L48 = M2L16;

--M2L49 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT16
M2L49 = M2L17;

--M2L50 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT17
M2L50 = M2L18;

--M2L51 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT18
M2L51 = M2L19;

--M2L52 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT19
M2L52 = M2L20;

--M2L53 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT20
M2L53 = M2L21;

--M2L54 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT21
M2L54 = M2L22;

--M2L55 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT22
M2L55 = M2L23;

--M2L56 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT23
M2L56 = M2L24;

--M2L57 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT24
M2L57 = M2L25;

--M2L58 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT25
M2L58 = M2L26;

--M2L59 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT26
M2L59 = M2L27;

--M2L60 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT27
M2L60 = M2L28;

--M2L61 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT28
M2L61 = M2L29;

--M2L62 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT29
M2L62 = M2L30;

--M2L63 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT30
M2L63 = M2L31;

--M2L64 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT31
M2L64 = M2L32;


--J2L35 is neuron_l1_n1:n1|mac:mac_n1|Add1~0
J2L35 = J2L123 $ (VCC);

--J2L36 is neuron_l1_n1:n1|mac:mac_n1|Add1~1
J2L36 = CARRY(J2L123);


--J2L37 is neuron_l1_n1:n1|mac:mac_n1|Add1~2
J2L37 = (J2L137 & (!J2L36)) # (!J2L137 & ((J2L36) # (GND)));

--J2L38 is neuron_l1_n1:n1|mac:mac_n1|Add1~3
J2L38 = CARRY((!J2L36) # (!J2L137));


--J2L39 is neuron_l1_n1:n1|mac:mac_n1|Add1~4
J2L39 = (J2L136 & (J2L38 $ (GND))) # (!J2L136 & (!J2L38 & VCC));

--J2L40 is neuron_l1_n1:n1|mac:mac_n1|Add1~5
J2L40 = CARRY((J2L136 & !J2L38));


--J2L41 is neuron_l1_n1:n1|mac:mac_n1|Add1~6
J2L41 = (J2L135 & (!J2L40)) # (!J2L135 & ((J2L40) # (GND)));

--J2L42 is neuron_l1_n1:n1|mac:mac_n1|Add1~7
J2L42 = CARRY((!J2L40) # (!J2L135));


--J2L43 is neuron_l1_n1:n1|mac:mac_n1|Add1~8
J2L43 = (J2L134 & (J2L42 $ (GND))) # (!J2L134 & (!J2L42 & VCC));

--J2L44 is neuron_l1_n1:n1|mac:mac_n1|Add1~9
J2L44 = CARRY((J2L134 & !J2L42));


--J2L45 is neuron_l1_n1:n1|mac:mac_n1|Add1~10
J2L45 = (J2L133 & (!J2L44)) # (!J2L133 & ((J2L44) # (GND)));

--J2L46 is neuron_l1_n1:n1|mac:mac_n1|Add1~11
J2L46 = CARRY((!J2L44) # (!J2L133));


--J2L47 is neuron_l1_n1:n1|mac:mac_n1|Add1~12
J2L47 = (J2L132 & (J2L46 $ (GND))) # (!J2L132 & (!J2L46 & VCC));

--J2L48 is neuron_l1_n1:n1|mac:mac_n1|Add1~13
J2L48 = CARRY((J2L132 & !J2L46));


--J2L49 is neuron_l1_n1:n1|mac:mac_n1|Add1~14
J2L49 = (J2L131 & (!J2L48)) # (!J2L131 & ((J2L48) # (GND)));

--J2L50 is neuron_l1_n1:n1|mac:mac_n1|Add1~15
J2L50 = CARRY((!J2L48) # (!J2L131));


--J2L51 is neuron_l1_n1:n1|mac:mac_n1|Add1~16
J2L51 = (J2L130 & (J2L50 $ (GND))) # (!J2L130 & (!J2L50 & VCC));

--J2L52 is neuron_l1_n1:n1|mac:mac_n1|Add1~17
J2L52 = CARRY((J2L130 & !J2L50));


--J2L53 is neuron_l1_n1:n1|mac:mac_n1|Add1~18
J2L53 = (J2L129 & (!J2L52)) # (!J2L129 & ((J2L52) # (GND)));

--J2L54 is neuron_l1_n1:n1|mac:mac_n1|Add1~19
J2L54 = CARRY((!J2L52) # (!J2L129));


--J2L55 is neuron_l1_n1:n1|mac:mac_n1|Add1~20
J2L55 = (J2L128 & (J2L54 $ (GND))) # (!J2L128 & (!J2L54 & VCC));

--J2L56 is neuron_l1_n1:n1|mac:mac_n1|Add1~21
J2L56 = CARRY((J2L128 & !J2L54));


--J2L57 is neuron_l1_n1:n1|mac:mac_n1|Add1~22
J2L57 = (J2L127 & (!J2L56)) # (!J2L127 & ((J2L56) # (GND)));

--J2L58 is neuron_l1_n1:n1|mac:mac_n1|Add1~23
J2L58 = CARRY((!J2L56) # (!J2L127));


--J2L59 is neuron_l1_n1:n1|mac:mac_n1|Add1~24
J2L59 = (J2L126 & (J2L58 $ (GND))) # (!J2L126 & (!J2L58 & VCC));

--J2L60 is neuron_l1_n1:n1|mac:mac_n1|Add1~25
J2L60 = CARRY((J2L126 & !J2L58));


--J2L61 is neuron_l1_n1:n1|mac:mac_n1|Add1~26
J2L61 = (J2L125 & (!J2L60)) # (!J2L125 & ((J2L60) # (GND)));

--J2L62 is neuron_l1_n1:n1|mac:mac_n1|Add1~27
J2L62 = CARRY((!J2L60) # (!J2L125));


--J2L63 is neuron_l1_n1:n1|mac:mac_n1|Add1~28
J2L63 = (J2L124 & (J2L62 $ (GND))) # (!J2L124 & (!J2L62 & VCC));

--J2L64 is neuron_l1_n1:n1|mac:mac_n1|Add1~29
J2L64 = CARRY((J2L124 & !J2L62));


--J2L65 is neuron_l1_n1:n1|mac:mac_n1|Add1~30
J2L65 = (M2L64 & (!J2L64)) # (!M2L64 & ((J2L64) # (GND)));

--J2L66 is neuron_l1_n1:n1|mac:mac_n1|Add1~31
J2L66 = CARRY((!J2L64) # (!M2L64));


--J2L67 is neuron_l1_n1:n1|mac:mac_n1|Add1~32
J2L67 = M2L64 $ (!J2L66);


--J2L1 is neuron_l1_n1:n1|mac:mac_n1|Add0~0
J2L1 = (J2L108 & (J2_r_data_out[-11] $ (VCC))) # (!J2L108 & (J2_r_data_out[-11] & VCC));

--J2L2 is neuron_l1_n1:n1|mac:mac_n1|Add0~1
J2L2 = CARRY((J2L108 & J2_r_data_out[-11]));


--J2L3 is neuron_l1_n1:n1|mac:mac_n1|Add0~2
J2L3 = (J2L106 & ((J2_r_data_out[-10] & (J2L2 & VCC)) # (!J2_r_data_out[-10] & (!J2L2)))) # (!J2L106 & ((J2_r_data_out[-10] & (!J2L2)) # (!J2_r_data_out[-10] & ((J2L2) # (GND)))));

--J2L4 is neuron_l1_n1:n1|mac:mac_n1|Add0~3
J2L4 = CARRY((J2L106 & (!J2_r_data_out[-10] & !J2L2)) # (!J2L106 & ((!J2L2) # (!J2_r_data_out[-10]))));


--J2L5 is neuron_l1_n1:n1|mac:mac_n1|Add0~4
J2L5 = ((J2L104 $ (J2_r_data_out[-9] $ (!J2L4)))) # (GND);

--J2L6 is neuron_l1_n1:n1|mac:mac_n1|Add0~5
J2L6 = CARRY((J2L104 & ((J2_r_data_out[-9]) # (!J2L4))) # (!J2L104 & (J2_r_data_out[-9] & !J2L4)));


--J2L7 is neuron_l1_n1:n1|mac:mac_n1|Add0~6
J2L7 = (J2L102 & ((J2_r_data_out[-8] & (J2L6 & VCC)) # (!J2_r_data_out[-8] & (!J2L6)))) # (!J2L102 & ((J2_r_data_out[-8] & (!J2L6)) # (!J2_r_data_out[-8] & ((J2L6) # (GND)))));

--J2L8 is neuron_l1_n1:n1|mac:mac_n1|Add0~7
J2L8 = CARRY((J2L102 & (!J2_r_data_out[-8] & !J2L6)) # (!J2L102 & ((!J2L6) # (!J2_r_data_out[-8]))));


--J2L9 is neuron_l1_n1:n1|mac:mac_n1|Add0~8
J2L9 = ((J2L100 $ (J2_r_data_out[-7] $ (!J2L8)))) # (GND);

--J2L10 is neuron_l1_n1:n1|mac:mac_n1|Add0~9
J2L10 = CARRY((J2L100 & ((J2_r_data_out[-7]) # (!J2L8))) # (!J2L100 & (J2_r_data_out[-7] & !J2L8)));


--J2L11 is neuron_l1_n1:n1|mac:mac_n1|Add0~10
J2L11 = (J2L98 & ((J2_r_data_out[-6] & (J2L10 & VCC)) # (!J2_r_data_out[-6] & (!J2L10)))) # (!J2L98 & ((J2_r_data_out[-6] & (!J2L10)) # (!J2_r_data_out[-6] & ((J2L10) # (GND)))));

--J2L12 is neuron_l1_n1:n1|mac:mac_n1|Add0~11
J2L12 = CARRY((J2L98 & (!J2_r_data_out[-6] & !J2L10)) # (!J2L98 & ((!J2L10) # (!J2_r_data_out[-6]))));


--J2L13 is neuron_l1_n1:n1|mac:mac_n1|Add0~12
J2L13 = ((J2L96 $ (J2_r_data_out[-5] $ (!J2L12)))) # (GND);

--J2L14 is neuron_l1_n1:n1|mac:mac_n1|Add0~13
J2L14 = CARRY((J2L96 & ((J2_r_data_out[-5]) # (!J2L12))) # (!J2L96 & (J2_r_data_out[-5] & !J2L12)));


--J2L15 is neuron_l1_n1:n1|mac:mac_n1|Add0~14
J2L15 = (J2L94 & ((J2_r_data_out[-4] & (J2L14 & VCC)) # (!J2_r_data_out[-4] & (!J2L14)))) # (!J2L94 & ((J2_r_data_out[-4] & (!J2L14)) # (!J2_r_data_out[-4] & ((J2L14) # (GND)))));

--J2L16 is neuron_l1_n1:n1|mac:mac_n1|Add0~15
J2L16 = CARRY((J2L94 & (!J2_r_data_out[-4] & !J2L14)) # (!J2L94 & ((!J2L14) # (!J2_r_data_out[-4]))));


--J2L17 is neuron_l1_n1:n1|mac:mac_n1|Add0~16
J2L17 = ((J2L92 $ (J2_r_data_out[-3] $ (!J2L16)))) # (GND);

--J2L18 is neuron_l1_n1:n1|mac:mac_n1|Add0~17
J2L18 = CARRY((J2L92 & ((J2_r_data_out[-3]) # (!J2L16))) # (!J2L92 & (J2_r_data_out[-3] & !J2L16)));


--J2L19 is neuron_l1_n1:n1|mac:mac_n1|Add0~18
J2L19 = (J2L90 & ((J2_r_data_out[-2] & (J2L18 & VCC)) # (!J2_r_data_out[-2] & (!J2L18)))) # (!J2L90 & ((J2_r_data_out[-2] & (!J2L18)) # (!J2_r_data_out[-2] & ((J2L18) # (GND)))));

--J2L20 is neuron_l1_n1:n1|mac:mac_n1|Add0~19
J2L20 = CARRY((J2L90 & (!J2_r_data_out[-2] & !J2L18)) # (!J2L90 & ((!J2L18) # (!J2_r_data_out[-2]))));


--J2L21 is neuron_l1_n1:n1|mac:mac_n1|Add0~20
J2L21 = ((J2L88 $ (J2_r_data_out[-1] $ (!J2L20)))) # (GND);

--J2L22 is neuron_l1_n1:n1|mac:mac_n1|Add0~21
J2L22 = CARRY((J2L88 & ((J2_r_data_out[-1]) # (!J2L20))) # (!J2L88 & (J2_r_data_out[-1] & !J2L20)));


--J2L23 is neuron_l1_n1:n1|mac:mac_n1|Add0~22
J2L23 = (J2L110 & ((J2_r_data_out[0] & (J2L22 & VCC)) # (!J2_r_data_out[0] & (!J2L22)))) # (!J2L110 & ((J2_r_data_out[0] & (!J2L22)) # (!J2_r_data_out[0] & ((J2L22) # (GND)))));

--J2L24 is neuron_l1_n1:n1|mac:mac_n1|Add0~23
J2L24 = CARRY((J2L110 & (!J2_r_data_out[0] & !J2L22)) # (!J2L110 & ((!J2L22) # (!J2_r_data_out[0]))));


--J2L25 is neuron_l1_n1:n1|mac:mac_n1|Add0~24
J2L25 = ((J2L112 $ (J2_r_data_out[1] $ (!J2L24)))) # (GND);

--J2L26 is neuron_l1_n1:n1|mac:mac_n1|Add0~25
J2L26 = CARRY((J2L112 & ((J2_r_data_out[1]) # (!J2L24))) # (!J2L112 & (J2_r_data_out[1] & !J2L24)));


--J2L27 is neuron_l1_n1:n1|mac:mac_n1|Add0~26
J2L27 = (J2L114 & ((J2_r_data_out[2] & (J2L26 & VCC)) # (!J2_r_data_out[2] & (!J2L26)))) # (!J2L114 & ((J2_r_data_out[2] & (!J2L26)) # (!J2_r_data_out[2] & ((J2L26) # (GND)))));

--J2L28 is neuron_l1_n1:n1|mac:mac_n1|Add0~27
J2L28 = CARRY((J2L114 & (!J2_r_data_out[2] & !J2L26)) # (!J2L114 & ((!J2L26) # (!J2_r_data_out[2]))));


--J2L29 is neuron_l1_n1:n1|mac:mac_n1|Add0~28
J2L29 = ((J2L118 $ (J2_r_data_out[3] $ (!J2L28)))) # (GND);

--J2L30 is neuron_l1_n1:n1|mac:mac_n1|Add0~29
J2L30 = CARRY((J2L118 & ((J2_r_data_out[3]) # (!J2L28))) # (!J2L118 & (J2_r_data_out[3] & !J2L28)));


--J2L31 is neuron_l1_n1:n1|mac:mac_n1|Add0~30
J2L31 = (J2L119 & ((J2_r_data_out[4] & (J2L30 & VCC)) # (!J2_r_data_out[4] & (!J2L30)))) # (!J2L119 & ((J2_r_data_out[4] & (!J2L30)) # (!J2_r_data_out[4] & ((J2L30) # (GND)))));

--J2L32 is neuron_l1_n1:n1|mac:mac_n1|Add0~31
J2L32 = CARRY((J2L119 & (!J2_r_data_out[4] & !J2L30)) # (!J2L119 & ((!J2L30) # (!J2_r_data_out[4]))));


--J2L33 is neuron_l1_n1:n1|mac:mac_n1|Add0~32
J2L33 = J2L119 $ (J2_r_data_out[4] $ (J2L32));


--M3_mac_out2 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2
--DSP Block Operation Mode: Simple Multiplier (18-bit)
M3_mac_out2 = M3_mac_mult1;

--M3L34 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT1
M3L34 = M3L2;

--M3L35 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT2
M3L35 = M3L3;

--M3L36 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT3
M3L36 = M3L4;

--M3L37 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT4
M3L37 = M3L5;

--M3L38 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT5
M3L38 = M3L6;

--M3L39 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT6
M3L39 = M3L7;

--M3L40 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT7
M3L40 = M3L8;

--M3L41 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT8
M3L41 = M3L9;

--M3L42 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT9
M3L42 = M3L10;

--M3L43 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT10
M3L43 = M3L11;

--M3L44 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT11
M3L44 = M3L12;

--M3L45 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT12
M3L45 = M3L13;

--M3L46 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT13
M3L46 = M3L14;

--M3L47 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT14
M3L47 = M3L15;

--M3L48 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT15
M3L48 = M3L16;

--M3L49 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT16
M3L49 = M3L17;

--M3L50 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT17
M3L50 = M3L18;

--M3L51 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT18
M3L51 = M3L19;

--M3L52 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT19
M3L52 = M3L20;

--M3L53 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT20
M3L53 = M3L21;

--M3L54 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT21
M3L54 = M3L22;

--M3L55 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT22
M3L55 = M3L23;

--M3L56 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT23
M3L56 = M3L24;

--M3L57 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT24
M3L57 = M3L25;

--M3L58 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT25
M3L58 = M3L26;

--M3L59 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT26
M3L59 = M3L27;

--M3L60 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT27
M3L60 = M3L28;

--M3L61 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT28
M3L61 = M3L29;

--M3L62 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT29
M3L62 = M3L30;

--M3L63 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT30
M3L63 = M3L31;

--M3L64 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT31
M3L64 = M3L32;


--J3L35 is neuron_l1_n2:n2|mac:mac_n1|Add1~0
J3L35 = J3L123 $ (VCC);

--J3L36 is neuron_l1_n2:n2|mac:mac_n1|Add1~1
J3L36 = CARRY(J3L123);


--J3L37 is neuron_l1_n2:n2|mac:mac_n1|Add1~2
J3L37 = (J3L137 & (!J3L36)) # (!J3L137 & ((J3L36) # (GND)));

--J3L38 is neuron_l1_n2:n2|mac:mac_n1|Add1~3
J3L38 = CARRY((!J3L36) # (!J3L137));


--J3L39 is neuron_l1_n2:n2|mac:mac_n1|Add1~4
J3L39 = (J3L136 & (J3L38 $ (GND))) # (!J3L136 & (!J3L38 & VCC));

--J3L40 is neuron_l1_n2:n2|mac:mac_n1|Add1~5
J3L40 = CARRY((J3L136 & !J3L38));


--J3L41 is neuron_l1_n2:n2|mac:mac_n1|Add1~6
J3L41 = (J3L135 & (!J3L40)) # (!J3L135 & ((J3L40) # (GND)));

--J3L42 is neuron_l1_n2:n2|mac:mac_n1|Add1~7
J3L42 = CARRY((!J3L40) # (!J3L135));


--J3L43 is neuron_l1_n2:n2|mac:mac_n1|Add1~8
J3L43 = (J3L134 & (J3L42 $ (GND))) # (!J3L134 & (!J3L42 & VCC));

--J3L44 is neuron_l1_n2:n2|mac:mac_n1|Add1~9
J3L44 = CARRY((J3L134 & !J3L42));


--J3L45 is neuron_l1_n2:n2|mac:mac_n1|Add1~10
J3L45 = (J3L133 & (!J3L44)) # (!J3L133 & ((J3L44) # (GND)));

--J3L46 is neuron_l1_n2:n2|mac:mac_n1|Add1~11
J3L46 = CARRY((!J3L44) # (!J3L133));


--J3L47 is neuron_l1_n2:n2|mac:mac_n1|Add1~12
J3L47 = (J3L132 & (J3L46 $ (GND))) # (!J3L132 & (!J3L46 & VCC));

--J3L48 is neuron_l1_n2:n2|mac:mac_n1|Add1~13
J3L48 = CARRY((J3L132 & !J3L46));


--J3L49 is neuron_l1_n2:n2|mac:mac_n1|Add1~14
J3L49 = (J3L131 & (!J3L48)) # (!J3L131 & ((J3L48) # (GND)));

--J3L50 is neuron_l1_n2:n2|mac:mac_n1|Add1~15
J3L50 = CARRY((!J3L48) # (!J3L131));


--J3L51 is neuron_l1_n2:n2|mac:mac_n1|Add1~16
J3L51 = (J3L130 & (J3L50 $ (GND))) # (!J3L130 & (!J3L50 & VCC));

--J3L52 is neuron_l1_n2:n2|mac:mac_n1|Add1~17
J3L52 = CARRY((J3L130 & !J3L50));


--J3L53 is neuron_l1_n2:n2|mac:mac_n1|Add1~18
J3L53 = (J3L129 & (!J3L52)) # (!J3L129 & ((J3L52) # (GND)));

--J3L54 is neuron_l1_n2:n2|mac:mac_n1|Add1~19
J3L54 = CARRY((!J3L52) # (!J3L129));


--J3L55 is neuron_l1_n2:n2|mac:mac_n1|Add1~20
J3L55 = (J3L128 & (J3L54 $ (GND))) # (!J3L128 & (!J3L54 & VCC));

--J3L56 is neuron_l1_n2:n2|mac:mac_n1|Add1~21
J3L56 = CARRY((J3L128 & !J3L54));


--J3L57 is neuron_l1_n2:n2|mac:mac_n1|Add1~22
J3L57 = (J3L127 & (!J3L56)) # (!J3L127 & ((J3L56) # (GND)));

--J3L58 is neuron_l1_n2:n2|mac:mac_n1|Add1~23
J3L58 = CARRY((!J3L56) # (!J3L127));


--J3L59 is neuron_l1_n2:n2|mac:mac_n1|Add1~24
J3L59 = (J3L126 & (J3L58 $ (GND))) # (!J3L126 & (!J3L58 & VCC));

--J3L60 is neuron_l1_n2:n2|mac:mac_n1|Add1~25
J3L60 = CARRY((J3L126 & !J3L58));


--J3L61 is neuron_l1_n2:n2|mac:mac_n1|Add1~26
J3L61 = (J3L125 & (!J3L60)) # (!J3L125 & ((J3L60) # (GND)));

--J3L62 is neuron_l1_n2:n2|mac:mac_n1|Add1~27
J3L62 = CARRY((!J3L60) # (!J3L125));


--J3L63 is neuron_l1_n2:n2|mac:mac_n1|Add1~28
J3L63 = (J3L124 & (J3L62 $ (GND))) # (!J3L124 & (!J3L62 & VCC));

--J3L64 is neuron_l1_n2:n2|mac:mac_n1|Add1~29
J3L64 = CARRY((J3L124 & !J3L62));


--J3L65 is neuron_l1_n2:n2|mac:mac_n1|Add1~30
J3L65 = (M3L64 & (!J3L64)) # (!M3L64 & ((J3L64) # (GND)));

--J3L66 is neuron_l1_n2:n2|mac:mac_n1|Add1~31
J3L66 = CARRY((!J3L64) # (!M3L64));


--J3L67 is neuron_l1_n2:n2|mac:mac_n1|Add1~32
J3L67 = M3L64 $ (!J3L66);


--J3L1 is neuron_l1_n2:n2|mac:mac_n1|Add0~0
J3L1 = (J3L108 & (J3_r_data_out[-11] $ (VCC))) # (!J3L108 & (J3_r_data_out[-11] & VCC));

--J3L2 is neuron_l1_n2:n2|mac:mac_n1|Add0~1
J3L2 = CARRY((J3L108 & J3_r_data_out[-11]));


--J3L3 is neuron_l1_n2:n2|mac:mac_n1|Add0~2
J3L3 = (J3L106 & ((J3_r_data_out[-10] & (J3L2 & VCC)) # (!J3_r_data_out[-10] & (!J3L2)))) # (!J3L106 & ((J3_r_data_out[-10] & (!J3L2)) # (!J3_r_data_out[-10] & ((J3L2) # (GND)))));

--J3L4 is neuron_l1_n2:n2|mac:mac_n1|Add0~3
J3L4 = CARRY((J3L106 & (!J3_r_data_out[-10] & !J3L2)) # (!J3L106 & ((!J3L2) # (!J3_r_data_out[-10]))));


--J3L5 is neuron_l1_n2:n2|mac:mac_n1|Add0~4
J3L5 = ((J3L104 $ (J3_r_data_out[-9] $ (!J3L4)))) # (GND);

--J3L6 is neuron_l1_n2:n2|mac:mac_n1|Add0~5
J3L6 = CARRY((J3L104 & ((J3_r_data_out[-9]) # (!J3L4))) # (!J3L104 & (J3_r_data_out[-9] & !J3L4)));


--J3L7 is neuron_l1_n2:n2|mac:mac_n1|Add0~6
J3L7 = (J3L102 & ((J3_r_data_out[-8] & (J3L6 & VCC)) # (!J3_r_data_out[-8] & (!J3L6)))) # (!J3L102 & ((J3_r_data_out[-8] & (!J3L6)) # (!J3_r_data_out[-8] & ((J3L6) # (GND)))));

--J3L8 is neuron_l1_n2:n2|mac:mac_n1|Add0~7
J3L8 = CARRY((J3L102 & (!J3_r_data_out[-8] & !J3L6)) # (!J3L102 & ((!J3L6) # (!J3_r_data_out[-8]))));


--J3L9 is neuron_l1_n2:n2|mac:mac_n1|Add0~8
J3L9 = ((J3L100 $ (J3_r_data_out[-7] $ (!J3L8)))) # (GND);

--J3L10 is neuron_l1_n2:n2|mac:mac_n1|Add0~9
J3L10 = CARRY((J3L100 & ((J3_r_data_out[-7]) # (!J3L8))) # (!J3L100 & (J3_r_data_out[-7] & !J3L8)));


--J3L11 is neuron_l1_n2:n2|mac:mac_n1|Add0~10
J3L11 = (J3L98 & ((J3_r_data_out[-6] & (J3L10 & VCC)) # (!J3_r_data_out[-6] & (!J3L10)))) # (!J3L98 & ((J3_r_data_out[-6] & (!J3L10)) # (!J3_r_data_out[-6] & ((J3L10) # (GND)))));

--J3L12 is neuron_l1_n2:n2|mac:mac_n1|Add0~11
J3L12 = CARRY((J3L98 & (!J3_r_data_out[-6] & !J3L10)) # (!J3L98 & ((!J3L10) # (!J3_r_data_out[-6]))));


--J3L13 is neuron_l1_n2:n2|mac:mac_n1|Add0~12
J3L13 = ((J3L96 $ (J3_r_data_out[-5] $ (!J3L12)))) # (GND);

--J3L14 is neuron_l1_n2:n2|mac:mac_n1|Add0~13
J3L14 = CARRY((J3L96 & ((J3_r_data_out[-5]) # (!J3L12))) # (!J3L96 & (J3_r_data_out[-5] & !J3L12)));


--J3L15 is neuron_l1_n2:n2|mac:mac_n1|Add0~14
J3L15 = (J3L94 & ((J3_r_data_out[-4] & (J3L14 & VCC)) # (!J3_r_data_out[-4] & (!J3L14)))) # (!J3L94 & ((J3_r_data_out[-4] & (!J3L14)) # (!J3_r_data_out[-4] & ((J3L14) # (GND)))));

--J3L16 is neuron_l1_n2:n2|mac:mac_n1|Add0~15
J3L16 = CARRY((J3L94 & (!J3_r_data_out[-4] & !J3L14)) # (!J3L94 & ((!J3L14) # (!J3_r_data_out[-4]))));


--J3L17 is neuron_l1_n2:n2|mac:mac_n1|Add0~16
J3L17 = ((J3L92 $ (J3_r_data_out[-3] $ (!J3L16)))) # (GND);

--J3L18 is neuron_l1_n2:n2|mac:mac_n1|Add0~17
J3L18 = CARRY((J3L92 & ((J3_r_data_out[-3]) # (!J3L16))) # (!J3L92 & (J3_r_data_out[-3] & !J3L16)));


--J3L19 is neuron_l1_n2:n2|mac:mac_n1|Add0~18
J3L19 = (J3L90 & ((J3_r_data_out[-2] & (J3L18 & VCC)) # (!J3_r_data_out[-2] & (!J3L18)))) # (!J3L90 & ((J3_r_data_out[-2] & (!J3L18)) # (!J3_r_data_out[-2] & ((J3L18) # (GND)))));

--J3L20 is neuron_l1_n2:n2|mac:mac_n1|Add0~19
J3L20 = CARRY((J3L90 & (!J3_r_data_out[-2] & !J3L18)) # (!J3L90 & ((!J3L18) # (!J3_r_data_out[-2]))));


--J3L21 is neuron_l1_n2:n2|mac:mac_n1|Add0~20
J3L21 = ((J3L88 $ (J3_r_data_out[-1] $ (!J3L20)))) # (GND);

--J3L22 is neuron_l1_n2:n2|mac:mac_n1|Add0~21
J3L22 = CARRY((J3L88 & ((J3_r_data_out[-1]) # (!J3L20))) # (!J3L88 & (J3_r_data_out[-1] & !J3L20)));


--J3L23 is neuron_l1_n2:n2|mac:mac_n1|Add0~22
J3L23 = (J3L110 & ((J3_r_data_out[0] & (J3L22 & VCC)) # (!J3_r_data_out[0] & (!J3L22)))) # (!J3L110 & ((J3_r_data_out[0] & (!J3L22)) # (!J3_r_data_out[0] & ((J3L22) # (GND)))));

--J3L24 is neuron_l1_n2:n2|mac:mac_n1|Add0~23
J3L24 = CARRY((J3L110 & (!J3_r_data_out[0] & !J3L22)) # (!J3L110 & ((!J3L22) # (!J3_r_data_out[0]))));


--J3L25 is neuron_l1_n2:n2|mac:mac_n1|Add0~24
J3L25 = ((J3L112 $ (J3_r_data_out[1] $ (!J3L24)))) # (GND);

--J3L26 is neuron_l1_n2:n2|mac:mac_n1|Add0~25
J3L26 = CARRY((J3L112 & ((J3_r_data_out[1]) # (!J3L24))) # (!J3L112 & (J3_r_data_out[1] & !J3L24)));


--J3L27 is neuron_l1_n2:n2|mac:mac_n1|Add0~26
J3L27 = (J3L114 & ((J3_r_data_out[2] & (J3L26 & VCC)) # (!J3_r_data_out[2] & (!J3L26)))) # (!J3L114 & ((J3_r_data_out[2] & (!J3L26)) # (!J3_r_data_out[2] & ((J3L26) # (GND)))));

--J3L28 is neuron_l1_n2:n2|mac:mac_n1|Add0~27
J3L28 = CARRY((J3L114 & (!J3_r_data_out[2] & !J3L26)) # (!J3L114 & ((!J3L26) # (!J3_r_data_out[2]))));


--J3L29 is neuron_l1_n2:n2|mac:mac_n1|Add0~28
J3L29 = ((J3L118 $ (J3_r_data_out[3] $ (!J3L28)))) # (GND);

--J3L30 is neuron_l1_n2:n2|mac:mac_n1|Add0~29
J3L30 = CARRY((J3L118 & ((J3_r_data_out[3]) # (!J3L28))) # (!J3L118 & (J3_r_data_out[3] & !J3L28)));


--J3L31 is neuron_l1_n2:n2|mac:mac_n1|Add0~30
J3L31 = (J3L119 & ((J3_r_data_out[4] & (J3L30 & VCC)) # (!J3_r_data_out[4] & (!J3L30)))) # (!J3L119 & ((J3_r_data_out[4] & (!J3L30)) # (!J3_r_data_out[4] & ((J3L30) # (GND)))));

--J3L32 is neuron_l1_n2:n2|mac:mac_n1|Add0~31
J3L32 = CARRY((J3L119 & (!J3_r_data_out[4] & !J3L30)) # (!J3L119 & ((!J3L30) # (!J3_r_data_out[4]))));


--J3L33 is neuron_l1_n2:n2|mac:mac_n1|Add0~32
J3L33 = J3L119 $ (J3_r_data_out[4] $ (J3L32));


--M4_mac_out2 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2
--DSP Block Operation Mode: Simple Multiplier (18-bit)
M4_mac_out2 = M4_mac_mult1;

--M4L34 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT1
M4L34 = M4L2;

--M4L35 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT2
M4L35 = M4L3;

--M4L36 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT3
M4L36 = M4L4;

--M4L37 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT4
M4L37 = M4L5;

--M4L38 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT5
M4L38 = M4L6;

--M4L39 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT6
M4L39 = M4L7;

--M4L40 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT7
M4L40 = M4L8;

--M4L41 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT8
M4L41 = M4L9;

--M4L42 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT9
M4L42 = M4L10;

--M4L43 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT10
M4L43 = M4L11;

--M4L44 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT11
M4L44 = M4L12;

--M4L45 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT12
M4L45 = M4L13;

--M4L46 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT13
M4L46 = M4L14;

--M4L47 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT14
M4L47 = M4L15;

--M4L48 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT15
M4L48 = M4L16;

--M4L49 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT16
M4L49 = M4L17;

--M4L50 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT17
M4L50 = M4L18;

--M4L51 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT18
M4L51 = M4L19;

--M4L52 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT19
M4L52 = M4L20;

--M4L53 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT20
M4L53 = M4L21;

--M4L54 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT21
M4L54 = M4L22;

--M4L55 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT22
M4L55 = M4L23;

--M4L56 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT23
M4L56 = M4L24;

--M4L57 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT24
M4L57 = M4L25;

--M4L58 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT25
M4L58 = M4L26;

--M4L59 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT26
M4L59 = M4L27;

--M4L60 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT27
M4L60 = M4L28;

--M4L61 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT28
M4L61 = M4L29;

--M4L62 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT29
M4L62 = M4L30;

--M4L63 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT30
M4L63 = M4L31;

--M4L64 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT31
M4L64 = M4L32;


--J4L35 is neuron_l1_n3:n3|mac:mac_n1|Add1~0
J4L35 = J4L123 $ (VCC);

--J4L36 is neuron_l1_n3:n3|mac:mac_n1|Add1~1
J4L36 = CARRY(J4L123);


--J4L37 is neuron_l1_n3:n3|mac:mac_n1|Add1~2
J4L37 = (J4L137 & (!J4L36)) # (!J4L137 & ((J4L36) # (GND)));

--J4L38 is neuron_l1_n3:n3|mac:mac_n1|Add1~3
J4L38 = CARRY((!J4L36) # (!J4L137));


--J4L39 is neuron_l1_n3:n3|mac:mac_n1|Add1~4
J4L39 = (J4L136 & (J4L38 $ (GND))) # (!J4L136 & (!J4L38 & VCC));

--J4L40 is neuron_l1_n3:n3|mac:mac_n1|Add1~5
J4L40 = CARRY((J4L136 & !J4L38));


--J4L41 is neuron_l1_n3:n3|mac:mac_n1|Add1~6
J4L41 = (J4L135 & (!J4L40)) # (!J4L135 & ((J4L40) # (GND)));

--J4L42 is neuron_l1_n3:n3|mac:mac_n1|Add1~7
J4L42 = CARRY((!J4L40) # (!J4L135));


--J4L43 is neuron_l1_n3:n3|mac:mac_n1|Add1~8
J4L43 = (J4L134 & (J4L42 $ (GND))) # (!J4L134 & (!J4L42 & VCC));

--J4L44 is neuron_l1_n3:n3|mac:mac_n1|Add1~9
J4L44 = CARRY((J4L134 & !J4L42));


--J4L45 is neuron_l1_n3:n3|mac:mac_n1|Add1~10
J4L45 = (J4L133 & (!J4L44)) # (!J4L133 & ((J4L44) # (GND)));

--J4L46 is neuron_l1_n3:n3|mac:mac_n1|Add1~11
J4L46 = CARRY((!J4L44) # (!J4L133));


--J4L47 is neuron_l1_n3:n3|mac:mac_n1|Add1~12
J4L47 = (J4L132 & (J4L46 $ (GND))) # (!J4L132 & (!J4L46 & VCC));

--J4L48 is neuron_l1_n3:n3|mac:mac_n1|Add1~13
J4L48 = CARRY((J4L132 & !J4L46));


--J4L49 is neuron_l1_n3:n3|mac:mac_n1|Add1~14
J4L49 = (J4L131 & (!J4L48)) # (!J4L131 & ((J4L48) # (GND)));

--J4L50 is neuron_l1_n3:n3|mac:mac_n1|Add1~15
J4L50 = CARRY((!J4L48) # (!J4L131));


--J4L51 is neuron_l1_n3:n3|mac:mac_n1|Add1~16
J4L51 = (J4L130 & (J4L50 $ (GND))) # (!J4L130 & (!J4L50 & VCC));

--J4L52 is neuron_l1_n3:n3|mac:mac_n1|Add1~17
J4L52 = CARRY((J4L130 & !J4L50));


--J4L53 is neuron_l1_n3:n3|mac:mac_n1|Add1~18
J4L53 = (J4L129 & (!J4L52)) # (!J4L129 & ((J4L52) # (GND)));

--J4L54 is neuron_l1_n3:n3|mac:mac_n1|Add1~19
J4L54 = CARRY((!J4L52) # (!J4L129));


--J4L55 is neuron_l1_n3:n3|mac:mac_n1|Add1~20
J4L55 = (J4L128 & (J4L54 $ (GND))) # (!J4L128 & (!J4L54 & VCC));

--J4L56 is neuron_l1_n3:n3|mac:mac_n1|Add1~21
J4L56 = CARRY((J4L128 & !J4L54));


--J4L57 is neuron_l1_n3:n3|mac:mac_n1|Add1~22
J4L57 = (J4L127 & (!J4L56)) # (!J4L127 & ((J4L56) # (GND)));

--J4L58 is neuron_l1_n3:n3|mac:mac_n1|Add1~23
J4L58 = CARRY((!J4L56) # (!J4L127));


--J4L59 is neuron_l1_n3:n3|mac:mac_n1|Add1~24
J4L59 = (J4L126 & (J4L58 $ (GND))) # (!J4L126 & (!J4L58 & VCC));

--J4L60 is neuron_l1_n3:n3|mac:mac_n1|Add1~25
J4L60 = CARRY((J4L126 & !J4L58));


--J4L61 is neuron_l1_n3:n3|mac:mac_n1|Add1~26
J4L61 = (J4L125 & (!J4L60)) # (!J4L125 & ((J4L60) # (GND)));

--J4L62 is neuron_l1_n3:n3|mac:mac_n1|Add1~27
J4L62 = CARRY((!J4L60) # (!J4L125));


--J4L63 is neuron_l1_n3:n3|mac:mac_n1|Add1~28
J4L63 = (J4L124 & (J4L62 $ (GND))) # (!J4L124 & (!J4L62 & VCC));

--J4L64 is neuron_l1_n3:n3|mac:mac_n1|Add1~29
J4L64 = CARRY((J4L124 & !J4L62));


--J4L65 is neuron_l1_n3:n3|mac:mac_n1|Add1~30
J4L65 = (M4L64 & (!J4L64)) # (!M4L64 & ((J4L64) # (GND)));

--J4L66 is neuron_l1_n3:n3|mac:mac_n1|Add1~31
J4L66 = CARRY((!J4L64) # (!M4L64));


--J4L67 is neuron_l1_n3:n3|mac:mac_n1|Add1~32
J4L67 = M4L64 $ (!J4L66);


--J4L1 is neuron_l1_n3:n3|mac:mac_n1|Add0~0
J4L1 = (J4L108 & (J4_r_data_out[-11] $ (VCC))) # (!J4L108 & (J4_r_data_out[-11] & VCC));

--J4L2 is neuron_l1_n3:n3|mac:mac_n1|Add0~1
J4L2 = CARRY((J4L108 & J4_r_data_out[-11]));


--J4L3 is neuron_l1_n3:n3|mac:mac_n1|Add0~2
J4L3 = (J4L106 & ((J4_r_data_out[-10] & (J4L2 & VCC)) # (!J4_r_data_out[-10] & (!J4L2)))) # (!J4L106 & ((J4_r_data_out[-10] & (!J4L2)) # (!J4_r_data_out[-10] & ((J4L2) # (GND)))));

--J4L4 is neuron_l1_n3:n3|mac:mac_n1|Add0~3
J4L4 = CARRY((J4L106 & (!J4_r_data_out[-10] & !J4L2)) # (!J4L106 & ((!J4L2) # (!J4_r_data_out[-10]))));


--J4L5 is neuron_l1_n3:n3|mac:mac_n1|Add0~4
J4L5 = ((J4L104 $ (J4_r_data_out[-9] $ (!J4L4)))) # (GND);

--J4L6 is neuron_l1_n3:n3|mac:mac_n1|Add0~5
J4L6 = CARRY((J4L104 & ((J4_r_data_out[-9]) # (!J4L4))) # (!J4L104 & (J4_r_data_out[-9] & !J4L4)));


--J4L7 is neuron_l1_n3:n3|mac:mac_n1|Add0~6
J4L7 = (J4L102 & ((J4_r_data_out[-8] & (J4L6 & VCC)) # (!J4_r_data_out[-8] & (!J4L6)))) # (!J4L102 & ((J4_r_data_out[-8] & (!J4L6)) # (!J4_r_data_out[-8] & ((J4L6) # (GND)))));

--J4L8 is neuron_l1_n3:n3|mac:mac_n1|Add0~7
J4L8 = CARRY((J4L102 & (!J4_r_data_out[-8] & !J4L6)) # (!J4L102 & ((!J4L6) # (!J4_r_data_out[-8]))));


--J4L9 is neuron_l1_n3:n3|mac:mac_n1|Add0~8
J4L9 = ((J4L100 $ (J4_r_data_out[-7] $ (!J4L8)))) # (GND);

--J4L10 is neuron_l1_n3:n3|mac:mac_n1|Add0~9
J4L10 = CARRY((J4L100 & ((J4_r_data_out[-7]) # (!J4L8))) # (!J4L100 & (J4_r_data_out[-7] & !J4L8)));


--J4L11 is neuron_l1_n3:n3|mac:mac_n1|Add0~10
J4L11 = (J4L98 & ((J4_r_data_out[-6] & (J4L10 & VCC)) # (!J4_r_data_out[-6] & (!J4L10)))) # (!J4L98 & ((J4_r_data_out[-6] & (!J4L10)) # (!J4_r_data_out[-6] & ((J4L10) # (GND)))));

--J4L12 is neuron_l1_n3:n3|mac:mac_n1|Add0~11
J4L12 = CARRY((J4L98 & (!J4_r_data_out[-6] & !J4L10)) # (!J4L98 & ((!J4L10) # (!J4_r_data_out[-6]))));


--J4L13 is neuron_l1_n3:n3|mac:mac_n1|Add0~12
J4L13 = ((J4L96 $ (J4_r_data_out[-5] $ (!J4L12)))) # (GND);

--J4L14 is neuron_l1_n3:n3|mac:mac_n1|Add0~13
J4L14 = CARRY((J4L96 & ((J4_r_data_out[-5]) # (!J4L12))) # (!J4L96 & (J4_r_data_out[-5] & !J4L12)));


--J4L15 is neuron_l1_n3:n3|mac:mac_n1|Add0~14
J4L15 = (J4L94 & ((J4_r_data_out[-4] & (J4L14 & VCC)) # (!J4_r_data_out[-4] & (!J4L14)))) # (!J4L94 & ((J4_r_data_out[-4] & (!J4L14)) # (!J4_r_data_out[-4] & ((J4L14) # (GND)))));

--J4L16 is neuron_l1_n3:n3|mac:mac_n1|Add0~15
J4L16 = CARRY((J4L94 & (!J4_r_data_out[-4] & !J4L14)) # (!J4L94 & ((!J4L14) # (!J4_r_data_out[-4]))));


--J4L17 is neuron_l1_n3:n3|mac:mac_n1|Add0~16
J4L17 = ((J4L92 $ (J4_r_data_out[-3] $ (!J4L16)))) # (GND);

--J4L18 is neuron_l1_n3:n3|mac:mac_n1|Add0~17
J4L18 = CARRY((J4L92 & ((J4_r_data_out[-3]) # (!J4L16))) # (!J4L92 & (J4_r_data_out[-3] & !J4L16)));


--J4L19 is neuron_l1_n3:n3|mac:mac_n1|Add0~18
J4L19 = (J4L90 & ((J4_r_data_out[-2] & (J4L18 & VCC)) # (!J4_r_data_out[-2] & (!J4L18)))) # (!J4L90 & ((J4_r_data_out[-2] & (!J4L18)) # (!J4_r_data_out[-2] & ((J4L18) # (GND)))));

--J4L20 is neuron_l1_n3:n3|mac:mac_n1|Add0~19
J4L20 = CARRY((J4L90 & (!J4_r_data_out[-2] & !J4L18)) # (!J4L90 & ((!J4L18) # (!J4_r_data_out[-2]))));


--J4L21 is neuron_l1_n3:n3|mac:mac_n1|Add0~20
J4L21 = ((J4L88 $ (J4_r_data_out[-1] $ (!J4L20)))) # (GND);

--J4L22 is neuron_l1_n3:n3|mac:mac_n1|Add0~21
J4L22 = CARRY((J4L88 & ((J4_r_data_out[-1]) # (!J4L20))) # (!J4L88 & (J4_r_data_out[-1] & !J4L20)));


--J4L23 is neuron_l1_n3:n3|mac:mac_n1|Add0~22
J4L23 = (J4L110 & ((J4_r_data_out[0] & (J4L22 & VCC)) # (!J4_r_data_out[0] & (!J4L22)))) # (!J4L110 & ((J4_r_data_out[0] & (!J4L22)) # (!J4_r_data_out[0] & ((J4L22) # (GND)))));

--J4L24 is neuron_l1_n3:n3|mac:mac_n1|Add0~23
J4L24 = CARRY((J4L110 & (!J4_r_data_out[0] & !J4L22)) # (!J4L110 & ((!J4L22) # (!J4_r_data_out[0]))));


--J4L25 is neuron_l1_n3:n3|mac:mac_n1|Add0~24
J4L25 = ((J4L112 $ (J4_r_data_out[1] $ (!J4L24)))) # (GND);

--J4L26 is neuron_l1_n3:n3|mac:mac_n1|Add0~25
J4L26 = CARRY((J4L112 & ((J4_r_data_out[1]) # (!J4L24))) # (!J4L112 & (J4_r_data_out[1] & !J4L24)));


--J4L27 is neuron_l1_n3:n3|mac:mac_n1|Add0~26
J4L27 = (J4L114 & ((J4_r_data_out[2] & (J4L26 & VCC)) # (!J4_r_data_out[2] & (!J4L26)))) # (!J4L114 & ((J4_r_data_out[2] & (!J4L26)) # (!J4_r_data_out[2] & ((J4L26) # (GND)))));

--J4L28 is neuron_l1_n3:n3|mac:mac_n1|Add0~27
J4L28 = CARRY((J4L114 & (!J4_r_data_out[2] & !J4L26)) # (!J4L114 & ((!J4L26) # (!J4_r_data_out[2]))));


--J4L29 is neuron_l1_n3:n3|mac:mac_n1|Add0~28
J4L29 = ((J4L118 $ (J4_r_data_out[3] $ (!J4L28)))) # (GND);

--J4L30 is neuron_l1_n3:n3|mac:mac_n1|Add0~29
J4L30 = CARRY((J4L118 & ((J4_r_data_out[3]) # (!J4L28))) # (!J4L118 & (J4_r_data_out[3] & !J4L28)));


--J4L31 is neuron_l1_n3:n3|mac:mac_n1|Add0~30
J4L31 = (J4L119 & ((J4_r_data_out[4] & (J4L30 & VCC)) # (!J4_r_data_out[4] & (!J4L30)))) # (!J4L119 & ((J4_r_data_out[4] & (!J4L30)) # (!J4_r_data_out[4] & ((J4L30) # (GND)))));

--J4L32 is neuron_l1_n3:n3|mac:mac_n1|Add0~31
J4L32 = CARRY((J4L119 & (!J4_r_data_out[4] & !J4L30)) # (!J4L119 & ((!J4L30) # (!J4_r_data_out[4]))));


--J4L33 is neuron_l1_n3:n3|mac:mac_n1|Add0~32
J4L33 = J4L119 $ (J4_r_data_out[4] $ (J4L32));


--M5_mac_out2 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2
--DSP Block Operation Mode: Simple Multiplier (18-bit)
M5_mac_out2 = M5_mac_mult1;

--M5L34 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT1
M5L34 = M5L2;

--M5L35 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT2
M5L35 = M5L3;

--M5L36 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT3
M5L36 = M5L4;

--M5L37 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT4
M5L37 = M5L5;

--M5L38 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT5
M5L38 = M5L6;

--M5L39 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT6
M5L39 = M5L7;

--M5L40 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT7
M5L40 = M5L8;

--M5L41 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT8
M5L41 = M5L9;

--M5L42 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT9
M5L42 = M5L10;

--M5L43 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT10
M5L43 = M5L11;

--M5L44 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT11
M5L44 = M5L12;

--M5L45 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT12
M5L45 = M5L13;

--M5L46 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT13
M5L46 = M5L14;

--M5L47 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT14
M5L47 = M5L15;

--M5L48 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT15
M5L48 = M5L16;

--M5L49 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT16
M5L49 = M5L17;

--M5L50 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT17
M5L50 = M5L18;

--M5L51 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT18
M5L51 = M5L19;

--M5L52 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT19
M5L52 = M5L20;

--M5L53 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT20
M5L53 = M5L21;

--M5L54 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT21
M5L54 = M5L22;

--M5L55 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT22
M5L55 = M5L23;

--M5L56 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT23
M5L56 = M5L24;

--M5L57 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT24
M5L57 = M5L25;

--M5L58 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT25
M5L58 = M5L26;

--M5L59 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT26
M5L59 = M5L27;

--M5L60 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT27
M5L60 = M5L28;

--M5L61 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT28
M5L61 = M5L29;

--M5L62 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT29
M5L62 = M5L30;

--M5L63 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT30
M5L63 = M5L31;

--M5L64 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT31
M5L64 = M5L32;


--J5L35 is neuron_l1_n4:n4|mac:mac_n1|Add1~0
J5L35 = J5L123 $ (VCC);

--J5L36 is neuron_l1_n4:n4|mac:mac_n1|Add1~1
J5L36 = CARRY(J5L123);


--J5L37 is neuron_l1_n4:n4|mac:mac_n1|Add1~2
J5L37 = (J5L137 & (!J5L36)) # (!J5L137 & ((J5L36) # (GND)));

--J5L38 is neuron_l1_n4:n4|mac:mac_n1|Add1~3
J5L38 = CARRY((!J5L36) # (!J5L137));


--J5L39 is neuron_l1_n4:n4|mac:mac_n1|Add1~4
J5L39 = (J5L136 & (J5L38 $ (GND))) # (!J5L136 & (!J5L38 & VCC));

--J5L40 is neuron_l1_n4:n4|mac:mac_n1|Add1~5
J5L40 = CARRY((J5L136 & !J5L38));


--J5L41 is neuron_l1_n4:n4|mac:mac_n1|Add1~6
J5L41 = (J5L135 & (!J5L40)) # (!J5L135 & ((J5L40) # (GND)));

--J5L42 is neuron_l1_n4:n4|mac:mac_n1|Add1~7
J5L42 = CARRY((!J5L40) # (!J5L135));


--J5L43 is neuron_l1_n4:n4|mac:mac_n1|Add1~8
J5L43 = (J5L134 & (J5L42 $ (GND))) # (!J5L134 & (!J5L42 & VCC));

--J5L44 is neuron_l1_n4:n4|mac:mac_n1|Add1~9
J5L44 = CARRY((J5L134 & !J5L42));


--J5L45 is neuron_l1_n4:n4|mac:mac_n1|Add1~10
J5L45 = (J5L133 & (!J5L44)) # (!J5L133 & ((J5L44) # (GND)));

--J5L46 is neuron_l1_n4:n4|mac:mac_n1|Add1~11
J5L46 = CARRY((!J5L44) # (!J5L133));


--J5L47 is neuron_l1_n4:n4|mac:mac_n1|Add1~12
J5L47 = (J5L132 & (J5L46 $ (GND))) # (!J5L132 & (!J5L46 & VCC));

--J5L48 is neuron_l1_n4:n4|mac:mac_n1|Add1~13
J5L48 = CARRY((J5L132 & !J5L46));


--J5L49 is neuron_l1_n4:n4|mac:mac_n1|Add1~14
J5L49 = (J5L131 & (!J5L48)) # (!J5L131 & ((J5L48) # (GND)));

--J5L50 is neuron_l1_n4:n4|mac:mac_n1|Add1~15
J5L50 = CARRY((!J5L48) # (!J5L131));


--J5L51 is neuron_l1_n4:n4|mac:mac_n1|Add1~16
J5L51 = (J5L130 & (J5L50 $ (GND))) # (!J5L130 & (!J5L50 & VCC));

--J5L52 is neuron_l1_n4:n4|mac:mac_n1|Add1~17
J5L52 = CARRY((J5L130 & !J5L50));


--J5L53 is neuron_l1_n4:n4|mac:mac_n1|Add1~18
J5L53 = (J5L129 & (!J5L52)) # (!J5L129 & ((J5L52) # (GND)));

--J5L54 is neuron_l1_n4:n4|mac:mac_n1|Add1~19
J5L54 = CARRY((!J5L52) # (!J5L129));


--J5L55 is neuron_l1_n4:n4|mac:mac_n1|Add1~20
J5L55 = (J5L128 & (J5L54 $ (GND))) # (!J5L128 & (!J5L54 & VCC));

--J5L56 is neuron_l1_n4:n4|mac:mac_n1|Add1~21
J5L56 = CARRY((J5L128 & !J5L54));


--J5L57 is neuron_l1_n4:n4|mac:mac_n1|Add1~22
J5L57 = (J5L127 & (!J5L56)) # (!J5L127 & ((J5L56) # (GND)));

--J5L58 is neuron_l1_n4:n4|mac:mac_n1|Add1~23
J5L58 = CARRY((!J5L56) # (!J5L127));


--J5L59 is neuron_l1_n4:n4|mac:mac_n1|Add1~24
J5L59 = (J5L126 & (J5L58 $ (GND))) # (!J5L126 & (!J5L58 & VCC));

--J5L60 is neuron_l1_n4:n4|mac:mac_n1|Add1~25
J5L60 = CARRY((J5L126 & !J5L58));


--J5L61 is neuron_l1_n4:n4|mac:mac_n1|Add1~26
J5L61 = (J5L125 & (!J5L60)) # (!J5L125 & ((J5L60) # (GND)));

--J5L62 is neuron_l1_n4:n4|mac:mac_n1|Add1~27
J5L62 = CARRY((!J5L60) # (!J5L125));


--J5L63 is neuron_l1_n4:n4|mac:mac_n1|Add1~28
J5L63 = (J5L124 & (J5L62 $ (GND))) # (!J5L124 & (!J5L62 & VCC));

--J5L64 is neuron_l1_n4:n4|mac:mac_n1|Add1~29
J5L64 = CARRY((J5L124 & !J5L62));


--J5L65 is neuron_l1_n4:n4|mac:mac_n1|Add1~30
J5L65 = (M5L64 & (!J5L64)) # (!M5L64 & ((J5L64) # (GND)));

--J5L66 is neuron_l1_n4:n4|mac:mac_n1|Add1~31
J5L66 = CARRY((!J5L64) # (!M5L64));


--J5L67 is neuron_l1_n4:n4|mac:mac_n1|Add1~32
J5L67 = M5L64 $ (!J5L66);


--J5L1 is neuron_l1_n4:n4|mac:mac_n1|Add0~0
J5L1 = (J5L108 & (J5_r_data_out[-11] $ (VCC))) # (!J5L108 & (J5_r_data_out[-11] & VCC));

--J5L2 is neuron_l1_n4:n4|mac:mac_n1|Add0~1
J5L2 = CARRY((J5L108 & J5_r_data_out[-11]));


--J5L3 is neuron_l1_n4:n4|mac:mac_n1|Add0~2
J5L3 = (J5L106 & ((J5_r_data_out[-10] & (J5L2 & VCC)) # (!J5_r_data_out[-10] & (!J5L2)))) # (!J5L106 & ((J5_r_data_out[-10] & (!J5L2)) # (!J5_r_data_out[-10] & ((J5L2) # (GND)))));

--J5L4 is neuron_l1_n4:n4|mac:mac_n1|Add0~3
J5L4 = CARRY((J5L106 & (!J5_r_data_out[-10] & !J5L2)) # (!J5L106 & ((!J5L2) # (!J5_r_data_out[-10]))));


--J5L5 is neuron_l1_n4:n4|mac:mac_n1|Add0~4
J5L5 = ((J5L104 $ (J5_r_data_out[-9] $ (!J5L4)))) # (GND);

--J5L6 is neuron_l1_n4:n4|mac:mac_n1|Add0~5
J5L6 = CARRY((J5L104 & ((J5_r_data_out[-9]) # (!J5L4))) # (!J5L104 & (J5_r_data_out[-9] & !J5L4)));


--J5L7 is neuron_l1_n4:n4|mac:mac_n1|Add0~6
J5L7 = (J5L102 & ((J5_r_data_out[-8] & (J5L6 & VCC)) # (!J5_r_data_out[-8] & (!J5L6)))) # (!J5L102 & ((J5_r_data_out[-8] & (!J5L6)) # (!J5_r_data_out[-8] & ((J5L6) # (GND)))));

--J5L8 is neuron_l1_n4:n4|mac:mac_n1|Add0~7
J5L8 = CARRY((J5L102 & (!J5_r_data_out[-8] & !J5L6)) # (!J5L102 & ((!J5L6) # (!J5_r_data_out[-8]))));


--J5L9 is neuron_l1_n4:n4|mac:mac_n1|Add0~8
J5L9 = ((J5L100 $ (J5_r_data_out[-7] $ (!J5L8)))) # (GND);

--J5L10 is neuron_l1_n4:n4|mac:mac_n1|Add0~9
J5L10 = CARRY((J5L100 & ((J5_r_data_out[-7]) # (!J5L8))) # (!J5L100 & (J5_r_data_out[-7] & !J5L8)));


--J5L11 is neuron_l1_n4:n4|mac:mac_n1|Add0~10
J5L11 = (J5L98 & ((J5_r_data_out[-6] & (J5L10 & VCC)) # (!J5_r_data_out[-6] & (!J5L10)))) # (!J5L98 & ((J5_r_data_out[-6] & (!J5L10)) # (!J5_r_data_out[-6] & ((J5L10) # (GND)))));

--J5L12 is neuron_l1_n4:n4|mac:mac_n1|Add0~11
J5L12 = CARRY((J5L98 & (!J5_r_data_out[-6] & !J5L10)) # (!J5L98 & ((!J5L10) # (!J5_r_data_out[-6]))));


--J5L13 is neuron_l1_n4:n4|mac:mac_n1|Add0~12
J5L13 = ((J5L96 $ (J5_r_data_out[-5] $ (!J5L12)))) # (GND);

--J5L14 is neuron_l1_n4:n4|mac:mac_n1|Add0~13
J5L14 = CARRY((J5L96 & ((J5_r_data_out[-5]) # (!J5L12))) # (!J5L96 & (J5_r_data_out[-5] & !J5L12)));


--J5L15 is neuron_l1_n4:n4|mac:mac_n1|Add0~14
J5L15 = (J5L94 & ((J5_r_data_out[-4] & (J5L14 & VCC)) # (!J5_r_data_out[-4] & (!J5L14)))) # (!J5L94 & ((J5_r_data_out[-4] & (!J5L14)) # (!J5_r_data_out[-4] & ((J5L14) # (GND)))));

--J5L16 is neuron_l1_n4:n4|mac:mac_n1|Add0~15
J5L16 = CARRY((J5L94 & (!J5_r_data_out[-4] & !J5L14)) # (!J5L94 & ((!J5L14) # (!J5_r_data_out[-4]))));


--J5L17 is neuron_l1_n4:n4|mac:mac_n1|Add0~16
J5L17 = ((J5L92 $ (J5_r_data_out[-3] $ (!J5L16)))) # (GND);

--J5L18 is neuron_l1_n4:n4|mac:mac_n1|Add0~17
J5L18 = CARRY((J5L92 & ((J5_r_data_out[-3]) # (!J5L16))) # (!J5L92 & (J5_r_data_out[-3] & !J5L16)));


--J5L19 is neuron_l1_n4:n4|mac:mac_n1|Add0~18
J5L19 = (J5L90 & ((J5_r_data_out[-2] & (J5L18 & VCC)) # (!J5_r_data_out[-2] & (!J5L18)))) # (!J5L90 & ((J5_r_data_out[-2] & (!J5L18)) # (!J5_r_data_out[-2] & ((J5L18) # (GND)))));

--J5L20 is neuron_l1_n4:n4|mac:mac_n1|Add0~19
J5L20 = CARRY((J5L90 & (!J5_r_data_out[-2] & !J5L18)) # (!J5L90 & ((!J5L18) # (!J5_r_data_out[-2]))));


--J5L21 is neuron_l1_n4:n4|mac:mac_n1|Add0~20
J5L21 = ((J5L88 $ (J5_r_data_out[-1] $ (!J5L20)))) # (GND);

--J5L22 is neuron_l1_n4:n4|mac:mac_n1|Add0~21
J5L22 = CARRY((J5L88 & ((J5_r_data_out[-1]) # (!J5L20))) # (!J5L88 & (J5_r_data_out[-1] & !J5L20)));


--J5L23 is neuron_l1_n4:n4|mac:mac_n1|Add0~22
J5L23 = (J5L110 & ((J5_r_data_out[0] & (J5L22 & VCC)) # (!J5_r_data_out[0] & (!J5L22)))) # (!J5L110 & ((J5_r_data_out[0] & (!J5L22)) # (!J5_r_data_out[0] & ((J5L22) # (GND)))));

--J5L24 is neuron_l1_n4:n4|mac:mac_n1|Add0~23
J5L24 = CARRY((J5L110 & (!J5_r_data_out[0] & !J5L22)) # (!J5L110 & ((!J5L22) # (!J5_r_data_out[0]))));


--J5L25 is neuron_l1_n4:n4|mac:mac_n1|Add0~24
J5L25 = ((J5L112 $ (J5_r_data_out[1] $ (!J5L24)))) # (GND);

--J5L26 is neuron_l1_n4:n4|mac:mac_n1|Add0~25
J5L26 = CARRY((J5L112 & ((J5_r_data_out[1]) # (!J5L24))) # (!J5L112 & (J5_r_data_out[1] & !J5L24)));


--J5L27 is neuron_l1_n4:n4|mac:mac_n1|Add0~26
J5L27 = (J5L114 & ((J5_r_data_out[2] & (J5L26 & VCC)) # (!J5_r_data_out[2] & (!J5L26)))) # (!J5L114 & ((J5_r_data_out[2] & (!J5L26)) # (!J5_r_data_out[2] & ((J5L26) # (GND)))));

--J5L28 is neuron_l1_n4:n4|mac:mac_n1|Add0~27
J5L28 = CARRY((J5L114 & (!J5_r_data_out[2] & !J5L26)) # (!J5L114 & ((!J5L26) # (!J5_r_data_out[2]))));


--J5L29 is neuron_l1_n4:n4|mac:mac_n1|Add0~28
J5L29 = ((J5L118 $ (J5_r_data_out[3] $ (!J5L28)))) # (GND);

--J5L30 is neuron_l1_n4:n4|mac:mac_n1|Add0~29
J5L30 = CARRY((J5L118 & ((J5_r_data_out[3]) # (!J5L28))) # (!J5L118 & (J5_r_data_out[3] & !J5L28)));


--J5L31 is neuron_l1_n4:n4|mac:mac_n1|Add0~30
J5L31 = (J5L119 & ((J5_r_data_out[4] & (J5L30 & VCC)) # (!J5_r_data_out[4] & (!J5L30)))) # (!J5L119 & ((J5_r_data_out[4] & (!J5L30)) # (!J5_r_data_out[4] & ((J5L30) # (GND)))));

--J5L32 is neuron_l1_n4:n4|mac:mac_n1|Add0~31
J5L32 = CARRY((J5L119 & (!J5_r_data_out[4] & !J5L30)) # (!J5L119 & ((!J5L30) # (!J5_r_data_out[4]))));


--J5L33 is neuron_l1_n4:n4|mac:mac_n1|Add0~32
J5L33 = J5L119 $ (J5_r_data_out[4] $ (J5L32));


--M6_mac_out2 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2
--DSP Block Operation Mode: Simple Multiplier (18-bit)
M6_mac_out2 = M6_mac_mult1;

--M6L34 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT1
M6L34 = M6L2;

--M6L35 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT2
M6L35 = M6L3;

--M6L36 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT3
M6L36 = M6L4;

--M6L37 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT4
M6L37 = M6L5;

--M6L38 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT5
M6L38 = M6L6;

--M6L39 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT6
M6L39 = M6L7;

--M6L40 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT7
M6L40 = M6L8;

--M6L41 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT8
M6L41 = M6L9;

--M6L42 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT9
M6L42 = M6L10;

--M6L43 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT10
M6L43 = M6L11;

--M6L44 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT11
M6L44 = M6L12;

--M6L45 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT12
M6L45 = M6L13;

--M6L46 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT13
M6L46 = M6L14;

--M6L47 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT14
M6L47 = M6L15;

--M6L48 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT15
M6L48 = M6L16;

--M6L49 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT16
M6L49 = M6L17;

--M6L50 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT17
M6L50 = M6L18;

--M6L51 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT18
M6L51 = M6L19;

--M6L52 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT19
M6L52 = M6L20;

--M6L53 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT20
M6L53 = M6L21;

--M6L54 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT21
M6L54 = M6L22;

--M6L55 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT22
M6L55 = M6L23;

--M6L56 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT23
M6L56 = M6L24;

--M6L57 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT24
M6L57 = M6L25;

--M6L58 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT25
M6L58 = M6L26;

--M6L59 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT26
M6L59 = M6L27;

--M6L60 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT27
M6L60 = M6L28;

--M6L61 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT28
M6L61 = M6L29;

--M6L62 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT29
M6L62 = M6L30;

--M6L63 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT30
M6L63 = M6L31;

--M6L64 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_out2~DATAOUT31
M6L64 = M6L32;


--J6L35 is neuron_l1_n5:n5|mac:mac_n1|Add1~0
J6L35 = J6L124 $ (VCC);

--J6L36 is neuron_l1_n5:n5|mac:mac_n1|Add1~1
J6L36 = CARRY(J6L124);


--J6L37 is neuron_l1_n5:n5|mac:mac_n1|Add1~2
J6L37 = (J6L138 & (!J6L36)) # (!J6L138 & ((J6L36) # (GND)));

--J6L38 is neuron_l1_n5:n5|mac:mac_n1|Add1~3
J6L38 = CARRY((!J6L36) # (!J6L138));


--J6L39 is neuron_l1_n5:n5|mac:mac_n1|Add1~4
J6L39 = (J6L137 & (J6L38 $ (GND))) # (!J6L137 & (!J6L38 & VCC));

--J6L40 is neuron_l1_n5:n5|mac:mac_n1|Add1~5
J6L40 = CARRY((J6L137 & !J6L38));


--J6L41 is neuron_l1_n5:n5|mac:mac_n1|Add1~6
J6L41 = (J6L136 & (!J6L40)) # (!J6L136 & ((J6L40) # (GND)));

--J6L42 is neuron_l1_n5:n5|mac:mac_n1|Add1~7
J6L42 = CARRY((!J6L40) # (!J6L136));


--J6L43 is neuron_l1_n5:n5|mac:mac_n1|Add1~8
J6L43 = (J6L135 & (J6L42 $ (GND))) # (!J6L135 & (!J6L42 & VCC));

--J6L44 is neuron_l1_n5:n5|mac:mac_n1|Add1~9
J6L44 = CARRY((J6L135 & !J6L42));


--J6L45 is neuron_l1_n5:n5|mac:mac_n1|Add1~10
J6L45 = (J6L134 & (!J6L44)) # (!J6L134 & ((J6L44) # (GND)));

--J6L46 is neuron_l1_n5:n5|mac:mac_n1|Add1~11
J6L46 = CARRY((!J6L44) # (!J6L134));


--J6L47 is neuron_l1_n5:n5|mac:mac_n1|Add1~12
J6L47 = (J6L133 & (J6L46 $ (GND))) # (!J6L133 & (!J6L46 & VCC));

--J6L48 is neuron_l1_n5:n5|mac:mac_n1|Add1~13
J6L48 = CARRY((J6L133 & !J6L46));


--J6L49 is neuron_l1_n5:n5|mac:mac_n1|Add1~14
J6L49 = (J6L132 & (!J6L48)) # (!J6L132 & ((J6L48) # (GND)));

--J6L50 is neuron_l1_n5:n5|mac:mac_n1|Add1~15
J6L50 = CARRY((!J6L48) # (!J6L132));


--J6L51 is neuron_l1_n5:n5|mac:mac_n1|Add1~16
J6L51 = (J6L131 & (J6L50 $ (GND))) # (!J6L131 & (!J6L50 & VCC));

--J6L52 is neuron_l1_n5:n5|mac:mac_n1|Add1~17
J6L52 = CARRY((J6L131 & !J6L50));


--J6L53 is neuron_l1_n5:n5|mac:mac_n1|Add1~18
J6L53 = (J6L130 & (!J6L52)) # (!J6L130 & ((J6L52) # (GND)));

--J6L54 is neuron_l1_n5:n5|mac:mac_n1|Add1~19
J6L54 = CARRY((!J6L52) # (!J6L130));


--J6L55 is neuron_l1_n5:n5|mac:mac_n1|Add1~20
J6L55 = (J6L129 & (J6L54 $ (GND))) # (!J6L129 & (!J6L54 & VCC));

--J6L56 is neuron_l1_n5:n5|mac:mac_n1|Add1~21
J6L56 = CARRY((J6L129 & !J6L54));


--J6L57 is neuron_l1_n5:n5|mac:mac_n1|Add1~22
J6L57 = (J6L128 & (!J6L56)) # (!J6L128 & ((J6L56) # (GND)));

--J6L58 is neuron_l1_n5:n5|mac:mac_n1|Add1~23
J6L58 = CARRY((!J6L56) # (!J6L128));


--J6L59 is neuron_l1_n5:n5|mac:mac_n1|Add1~24
J6L59 = (J6L127 & (J6L58 $ (GND))) # (!J6L127 & (!J6L58 & VCC));

--J6L60 is neuron_l1_n5:n5|mac:mac_n1|Add1~25
J6L60 = CARRY((J6L127 & !J6L58));


--J6L61 is neuron_l1_n5:n5|mac:mac_n1|Add1~26
J6L61 = (J6L126 & (!J6L60)) # (!J6L126 & ((J6L60) # (GND)));

--J6L62 is neuron_l1_n5:n5|mac:mac_n1|Add1~27
J6L62 = CARRY((!J6L60) # (!J6L126));


--J6L63 is neuron_l1_n5:n5|mac:mac_n1|Add1~28
J6L63 = (J6L125 & (J6L62 $ (GND))) # (!J6L125 & (!J6L62 & VCC));

--J6L64 is neuron_l1_n5:n5|mac:mac_n1|Add1~29
J6L64 = CARRY((J6L125 & !J6L62));


--J6L65 is neuron_l1_n5:n5|mac:mac_n1|Add1~30
J6L65 = (M6L64 & (!J6L64)) # (!M6L64 & ((J6L64) # (GND)));

--J6L66 is neuron_l1_n5:n5|mac:mac_n1|Add1~31
J6L66 = CARRY((!J6L64) # (!M6L64));


--J6L67 is neuron_l1_n5:n5|mac:mac_n1|Add1~32
J6L67 = M6L64 $ (!J6L66);


--J6L1 is neuron_l1_n5:n5|mac:mac_n1|Add0~0
J6L1 = (J6L109 & (J6_r_data_out[-11] $ (VCC))) # (!J6L109 & (J6_r_data_out[-11] & VCC));

--J6L2 is neuron_l1_n5:n5|mac:mac_n1|Add0~1
J6L2 = CARRY((J6L109 & J6_r_data_out[-11]));


--J6L3 is neuron_l1_n5:n5|mac:mac_n1|Add0~2
J6L3 = (J6L107 & ((J6_r_data_out[-10] & (J6L2 & VCC)) # (!J6_r_data_out[-10] & (!J6L2)))) # (!J6L107 & ((J6_r_data_out[-10] & (!J6L2)) # (!J6_r_data_out[-10] & ((J6L2) # (GND)))));

--J6L4 is neuron_l1_n5:n5|mac:mac_n1|Add0~3
J6L4 = CARRY((J6L107 & (!J6_r_data_out[-10] & !J6L2)) # (!J6L107 & ((!J6L2) # (!J6_r_data_out[-10]))));


--J6L5 is neuron_l1_n5:n5|mac:mac_n1|Add0~4
J6L5 = ((J6L105 $ (J6_r_data_out[-9] $ (!J6L4)))) # (GND);

--J6L6 is neuron_l1_n5:n5|mac:mac_n1|Add0~5
J6L6 = CARRY((J6L105 & ((J6_r_data_out[-9]) # (!J6L4))) # (!J6L105 & (J6_r_data_out[-9] & !J6L4)));


--J6L7 is neuron_l1_n5:n5|mac:mac_n1|Add0~6
J6L7 = (J6L103 & ((J6_r_data_out[-8] & (J6L6 & VCC)) # (!J6_r_data_out[-8] & (!J6L6)))) # (!J6L103 & ((J6_r_data_out[-8] & (!J6L6)) # (!J6_r_data_out[-8] & ((J6L6) # (GND)))));

--J6L8 is neuron_l1_n5:n5|mac:mac_n1|Add0~7
J6L8 = CARRY((J6L103 & (!J6_r_data_out[-8] & !J6L6)) # (!J6L103 & ((!J6L6) # (!J6_r_data_out[-8]))));


--J6L9 is neuron_l1_n5:n5|mac:mac_n1|Add0~8
J6L9 = ((J6L101 $ (J6_r_data_out[-7] $ (!J6L8)))) # (GND);

--J6L10 is neuron_l1_n5:n5|mac:mac_n1|Add0~9
J6L10 = CARRY((J6L101 & ((J6_r_data_out[-7]) # (!J6L8))) # (!J6L101 & (J6_r_data_out[-7] & !J6L8)));


--J6L11 is neuron_l1_n5:n5|mac:mac_n1|Add0~10
J6L11 = (J6L99 & ((J6_r_data_out[-6] & (J6L10 & VCC)) # (!J6_r_data_out[-6] & (!J6L10)))) # (!J6L99 & ((J6_r_data_out[-6] & (!J6L10)) # (!J6_r_data_out[-6] & ((J6L10) # (GND)))));

--J6L12 is neuron_l1_n5:n5|mac:mac_n1|Add0~11
J6L12 = CARRY((J6L99 & (!J6_r_data_out[-6] & !J6L10)) # (!J6L99 & ((!J6L10) # (!J6_r_data_out[-6]))));


--J6L13 is neuron_l1_n5:n5|mac:mac_n1|Add0~12
J6L13 = ((J6L97 $ (J6_r_data_out[-5] $ (!J6L12)))) # (GND);

--J6L14 is neuron_l1_n5:n5|mac:mac_n1|Add0~13
J6L14 = CARRY((J6L97 & ((J6_r_data_out[-5]) # (!J6L12))) # (!J6L97 & (J6_r_data_out[-5] & !J6L12)));


--J6L15 is neuron_l1_n5:n5|mac:mac_n1|Add0~14
J6L15 = (J6L95 & ((J6_r_data_out[-4] & (J6L14 & VCC)) # (!J6_r_data_out[-4] & (!J6L14)))) # (!J6L95 & ((J6_r_data_out[-4] & (!J6L14)) # (!J6_r_data_out[-4] & ((J6L14) # (GND)))));

--J6L16 is neuron_l1_n5:n5|mac:mac_n1|Add0~15
J6L16 = CARRY((J6L95 & (!J6_r_data_out[-4] & !J6L14)) # (!J6L95 & ((!J6L14) # (!J6_r_data_out[-4]))));


--J6L17 is neuron_l1_n5:n5|mac:mac_n1|Add0~16
J6L17 = ((J6L93 $ (J6_r_data_out[-3] $ (!J6L16)))) # (GND);

--J6L18 is neuron_l1_n5:n5|mac:mac_n1|Add0~17
J6L18 = CARRY((J6L93 & ((J6_r_data_out[-3]) # (!J6L16))) # (!J6L93 & (J6_r_data_out[-3] & !J6L16)));


--J6L19 is neuron_l1_n5:n5|mac:mac_n1|Add0~18
J6L19 = (J6L91 & ((J6_r_data_out[-2] & (J6L18 & VCC)) # (!J6_r_data_out[-2] & (!J6L18)))) # (!J6L91 & ((J6_r_data_out[-2] & (!J6L18)) # (!J6_r_data_out[-2] & ((J6L18) # (GND)))));

--J6L20 is neuron_l1_n5:n5|mac:mac_n1|Add0~19
J6L20 = CARRY((J6L91 & (!J6_r_data_out[-2] & !J6L18)) # (!J6L91 & ((!J6L18) # (!J6_r_data_out[-2]))));


--J6L21 is neuron_l1_n5:n5|mac:mac_n1|Add0~20
J6L21 = ((J6L89 $ (J6_r_data_out[-1] $ (!J6L20)))) # (GND);

--J6L22 is neuron_l1_n5:n5|mac:mac_n1|Add0~21
J6L22 = CARRY((J6L89 & ((J6_r_data_out[-1]) # (!J6L20))) # (!J6L89 & (J6_r_data_out[-1] & !J6L20)));


--J6L23 is neuron_l1_n5:n5|mac:mac_n1|Add0~22
J6L23 = (J6L111 & ((J6_r_data_out[0] & (J6L22 & VCC)) # (!J6_r_data_out[0] & (!J6L22)))) # (!J6L111 & ((J6_r_data_out[0] & (!J6L22)) # (!J6_r_data_out[0] & ((J6L22) # (GND)))));

--J6L24 is neuron_l1_n5:n5|mac:mac_n1|Add0~23
J6L24 = CARRY((J6L111 & (!J6_r_data_out[0] & !J6L22)) # (!J6L111 & ((!J6L22) # (!J6_r_data_out[0]))));


--J6L25 is neuron_l1_n5:n5|mac:mac_n1|Add0~24
J6L25 = ((J6L113 $ (J6_r_data_out[1] $ (!J6L24)))) # (GND);

--J6L26 is neuron_l1_n5:n5|mac:mac_n1|Add0~25
J6L26 = CARRY((J6L113 & ((J6_r_data_out[1]) # (!J6L24))) # (!J6L113 & (J6_r_data_out[1] & !J6L24)));


--J6L27 is neuron_l1_n5:n5|mac:mac_n1|Add0~26
J6L27 = (J6L115 & ((J6_r_data_out[2] & (J6L26 & VCC)) # (!J6_r_data_out[2] & (!J6L26)))) # (!J6L115 & ((J6_r_data_out[2] & (!J6L26)) # (!J6_r_data_out[2] & ((J6L26) # (GND)))));

--J6L28 is neuron_l1_n5:n5|mac:mac_n1|Add0~27
J6L28 = CARRY((J6L115 & (!J6_r_data_out[2] & !J6L26)) # (!J6L115 & ((!J6L26) # (!J6_r_data_out[2]))));


--J6L29 is neuron_l1_n5:n5|mac:mac_n1|Add0~28
J6L29 = ((J6L119 $ (J6_r_data_out[3] $ (!J6L28)))) # (GND);

--J6L30 is neuron_l1_n5:n5|mac:mac_n1|Add0~29
J6L30 = CARRY((J6L119 & ((J6_r_data_out[3]) # (!J6L28))) # (!J6L119 & (J6_r_data_out[3] & !J6L28)));


--J6L31 is neuron_l1_n5:n5|mac:mac_n1|Add0~30
J6L31 = (J6L120 & ((J6_r_data_out[4] & (J6L30 & VCC)) # (!J6_r_data_out[4] & (!J6L30)))) # (!J6L120 & ((J6_r_data_out[4] & (!J6L30)) # (!J6_r_data_out[4] & ((J6L30) # (GND)))));

--J6L32 is neuron_l1_n5:n5|mac:mac_n1|Add0~31
J6L32 = CARRY((J6L120 & (!J6_r_data_out[4] & !J6L30)) # (!J6L120 & ((!J6L30) # (!J6_r_data_out[4]))));


--J6L33 is neuron_l1_n5:n5|mac:mac_n1|Add0~32
J6L33 = J6L120 $ (J6_r_data_out[4] $ (J6L32));


--M1_mac_mult1 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1
--DSP Block Multiplier Base Width: 18-bits
M1_mac_mult1_a_data = DATA(P1_ram_block1a15, P1_ram_block1a14, P1_ram_block1a13, P1_ram_block1a12, P1_ram_block1a11, P1_ram_block1a10, P1_ram_block1a9, P1_ram_block1a8, P1_ram_block1a7, P1_ram_block1a6, P1_ram_block1a5, P1_ram_block1a4, P1_ram_block1a3, P1_ram_block1a2, P1_ram_block1a1, P1_ram_block1a0);
M1_mac_mult1_a_rep = SIGNED(M1_mac_mult1_a_data);
M1_mac_mult1_b_data = DATA(i_fxp[15], i_fxp[14], i_fxp[13], i_fxp[12], i_fxp[11], i_fxp[10], i_fxp[9], i_fxp[8], i_fxp[7], i_fxp[6], i_fxp[5], i_fxp[4], i_fxp[3], i_fxp[2], i_fxp[1], i_fxp[0]);
M1_mac_mult1_b_rep = SIGNED(M1_mac_mult1_b_data);
M1_mac_mult1_result = M1_mac_mult1_a_rep * M1_mac_mult1_b_rep;
M1_mac_mult1 = M1_mac_mult1_result[0];

--M1L2 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT1
M1L2 = M1_mac_mult1_result[1];

--M1L3 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT2
M1L3 = M1_mac_mult1_result[2];

--M1L4 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT3
M1L4 = M1_mac_mult1_result[3];

--M1L5 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT4
M1L5 = M1_mac_mult1_result[4];

--M1L6 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT5
M1L6 = M1_mac_mult1_result[5];

--M1L7 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT6
M1L7 = M1_mac_mult1_result[6];

--M1L8 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT7
M1L8 = M1_mac_mult1_result[7];

--M1L9 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT8
M1L9 = M1_mac_mult1_result[8];

--M1L10 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT9
M1L10 = M1_mac_mult1_result[9];

--M1L11 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT10
M1L11 = M1_mac_mult1_result[10];

--M1L12 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT11
M1L12 = M1_mac_mult1_result[11];

--M1L13 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT12
M1L13 = M1_mac_mult1_result[12];

--M1L14 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT13
M1L14 = M1_mac_mult1_result[13];

--M1L15 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT14
M1L15 = M1_mac_mult1_result[14];

--M1L16 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT15
M1L16 = M1_mac_mult1_result[15];

--M1L17 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT16
M1L17 = M1_mac_mult1_result[16];

--M1L18 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT17
M1L18 = M1_mac_mult1_result[17];

--M1L19 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT18
M1L19 = M1_mac_mult1_result[18];

--M1L20 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT19
M1L20 = M1_mac_mult1_result[19];

--M1L21 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT20
M1L21 = M1_mac_mult1_result[20];

--M1L22 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT21
M1L22 = M1_mac_mult1_result[21];

--M1L23 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT22
M1L23 = M1_mac_mult1_result[22];

--M1L24 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT23
M1L24 = M1_mac_mult1_result[23];

--M1L25 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT24
M1L25 = M1_mac_mult1_result[24];

--M1L26 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT25
M1L26 = M1_mac_mult1_result[25];

--M1L27 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT26
M1L27 = M1_mac_mult1_result[26];

--M1L28 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT27
M1L28 = M1_mac_mult1_result[27];

--M1L29 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT28
M1L29 = M1_mac_mult1_result[28];

--M1L30 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT29
M1L30 = M1_mac_mult1_result[29];

--M1L31 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT30
M1L31 = M1_mac_mult1_result[30];

--M1L32 is neuron_l1_n0:n0|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT31
M1L32 = M1_mac_mult1_result[31];


--B1_r_sinapse_count[0] is neuron_l1_n0:n0|r_sinapse_count[0]
--register power-up is low

B1_r_sinapse_count[0] = DFFEAS(B1L91, i_clk,  ,  , r_enable_n0, B1L246,  ,  , !B1_r_sm.s_get_weight);


--B1L91 is neuron_l1_n0:n0|r_sinapse_count[0]~32
B1L91 = B1_r_sinapse_count[0] $ (VCC);

--B1L92 is neuron_l1_n0:n0|r_sinapse_count[0]~33
B1L92 = CARRY(B1_r_sinapse_count[0]);


--B1L94 is neuron_l1_n0:n0|r_sinapse_count[1]~34
B1L94 = (B1_r_sinapse_count[1] & (!B1L92)) # (!B1_r_sinapse_count[1] & ((B1L92) # (GND)));

--B1L95 is neuron_l1_n0:n0|r_sinapse_count[1]~35
B1L95 = CARRY((!B1L92) # (!B1_r_sinapse_count[1]));


--B1L97 is neuron_l1_n0:n0|r_sinapse_count[2]~36
B1L97 = (B1_r_sinapse_count[2] & (B1L95 $ (GND))) # (!B1_r_sinapse_count[2] & (!B1L95 & VCC));

--B1L98 is neuron_l1_n0:n0|r_sinapse_count[2]~37
B1L98 = CARRY((B1_r_sinapse_count[2] & !B1L95));


--B1L100 is neuron_l1_n0:n0|r_sinapse_count[3]~38
B1L100 = (B1_r_sinapse_count[3] & (!B1L98)) # (!B1_r_sinapse_count[3] & ((B1L98) # (GND)));

--B1L101 is neuron_l1_n0:n0|r_sinapse_count[3]~39
B1L101 = CARRY((!B1L98) # (!B1_r_sinapse_count[3]));


--B1L103 is neuron_l1_n0:n0|r_sinapse_count[4]~40
B1L103 = (B1_r_sinapse_count[4] & (B1L101 $ (GND))) # (!B1_r_sinapse_count[4] & (!B1L101 & VCC));

--B1L104 is neuron_l1_n0:n0|r_sinapse_count[4]~41
B1L104 = CARRY((B1_r_sinapse_count[4] & !B1L101));


--B1L106 is neuron_l1_n0:n0|r_sinapse_count[5]~42
B1L106 = (B1_r_sinapse_count[5] & (!B1L104)) # (!B1_r_sinapse_count[5] & ((B1L104) # (GND)));

--B1L107 is neuron_l1_n0:n0|r_sinapse_count[5]~43
B1L107 = CARRY((!B1L104) # (!B1_r_sinapse_count[5]));


--B1L109 is neuron_l1_n0:n0|r_sinapse_count[6]~44
B1L109 = (B1_r_sinapse_count[6] & (B1L107 $ (GND))) # (!B1_r_sinapse_count[6] & (!B1L107 & VCC));

--B1L110 is neuron_l1_n0:n0|r_sinapse_count[6]~45
B1L110 = CARRY((B1_r_sinapse_count[6] & !B1L107));


--B1L112 is neuron_l1_n0:n0|r_sinapse_count[7]~46
B1L112 = (B1_r_sinapse_count[7] & (!B1L110)) # (!B1_r_sinapse_count[7] & ((B1L110) # (GND)));

--B1L113 is neuron_l1_n0:n0|r_sinapse_count[7]~47
B1L113 = CARRY((!B1L110) # (!B1_r_sinapse_count[7]));


--B1L115 is neuron_l1_n0:n0|r_sinapse_count[8]~48
B1L115 = (B1_r_sinapse_count[8] & (B1L113 $ (GND))) # (!B1_r_sinapse_count[8] & (!B1L113 & VCC));

--B1L116 is neuron_l1_n0:n0|r_sinapse_count[8]~49
B1L116 = CARRY((B1_r_sinapse_count[8] & !B1L113));


--B1L118 is neuron_l1_n0:n0|r_sinapse_count[9]~50
B1L118 = (B1_r_sinapse_count[9] & (!B1L116)) # (!B1_r_sinapse_count[9] & ((B1L116) # (GND)));

--B1L119 is neuron_l1_n0:n0|r_sinapse_count[9]~51
B1L119 = CARRY((!B1L116) # (!B1_r_sinapse_count[9]));


--B1L121 is neuron_l1_n0:n0|r_sinapse_count[10]~52
B1L121 = (B1_r_sinapse_count[10] & (B1L119 $ (GND))) # (!B1_r_sinapse_count[10] & (!B1L119 & VCC));

--B1L122 is neuron_l1_n0:n0|r_sinapse_count[10]~53
B1L122 = CARRY((B1_r_sinapse_count[10] & !B1L119));


--B1L124 is neuron_l1_n0:n0|r_sinapse_count[11]~54
B1L124 = (B1_r_sinapse_count[11] & (!B1L122)) # (!B1_r_sinapse_count[11] & ((B1L122) # (GND)));

--B1L125 is neuron_l1_n0:n0|r_sinapse_count[11]~55
B1L125 = CARRY((!B1L122) # (!B1_r_sinapse_count[11]));


--B1L127 is neuron_l1_n0:n0|r_sinapse_count[12]~56
B1L127 = (B1_r_sinapse_count[12] & (B1L125 $ (GND))) # (!B1_r_sinapse_count[12] & (!B1L125 & VCC));

--B1L128 is neuron_l1_n0:n0|r_sinapse_count[12]~57
B1L128 = CARRY((B1_r_sinapse_count[12] & !B1L125));


--B1L130 is neuron_l1_n0:n0|r_sinapse_count[13]~58
B1L130 = (B1_r_sinapse_count[13] & (!B1L128)) # (!B1_r_sinapse_count[13] & ((B1L128) # (GND)));

--B1L131 is neuron_l1_n0:n0|r_sinapse_count[13]~59
B1L131 = CARRY((!B1L128) # (!B1_r_sinapse_count[13]));


--B1L133 is neuron_l1_n0:n0|r_sinapse_count[14]~60
B1L133 = (B1_r_sinapse_count[14] & (B1L131 $ (GND))) # (!B1_r_sinapse_count[14] & (!B1L131 & VCC));

--B1L134 is neuron_l1_n0:n0|r_sinapse_count[14]~61
B1L134 = CARRY((B1_r_sinapse_count[14] & !B1L131));


--B1L136 is neuron_l1_n0:n0|r_sinapse_count[15]~62
B1L136 = (B1_r_sinapse_count[15] & (!B1L134)) # (!B1_r_sinapse_count[15] & ((B1L134) # (GND)));

--B1L137 is neuron_l1_n0:n0|r_sinapse_count[15]~63
B1L137 = CARRY((!B1L134) # (!B1_r_sinapse_count[15]));


--B1L139 is neuron_l1_n0:n0|r_sinapse_count[16]~64
B1L139 = (B1_r_sinapse_count[16] & (B1L137 $ (GND))) # (!B1_r_sinapse_count[16] & (!B1L137 & VCC));

--B1L140 is neuron_l1_n0:n0|r_sinapse_count[16]~65
B1L140 = CARRY((B1_r_sinapse_count[16] & !B1L137));


--B1L142 is neuron_l1_n0:n0|r_sinapse_count[17]~66
B1L142 = (B1_r_sinapse_count[17] & (!B1L140)) # (!B1_r_sinapse_count[17] & ((B1L140) # (GND)));

--B1L143 is neuron_l1_n0:n0|r_sinapse_count[17]~67
B1L143 = CARRY((!B1L140) # (!B1_r_sinapse_count[17]));


--B1L145 is neuron_l1_n0:n0|r_sinapse_count[18]~68
B1L145 = (B1_r_sinapse_count[18] & (B1L143 $ (GND))) # (!B1_r_sinapse_count[18] & (!B1L143 & VCC));

--B1L146 is neuron_l1_n0:n0|r_sinapse_count[18]~69
B1L146 = CARRY((B1_r_sinapse_count[18] & !B1L143));


--B1L148 is neuron_l1_n0:n0|r_sinapse_count[19]~70
B1L148 = (B1_r_sinapse_count[19] & (!B1L146)) # (!B1_r_sinapse_count[19] & ((B1L146) # (GND)));

--B1L149 is neuron_l1_n0:n0|r_sinapse_count[19]~71
B1L149 = CARRY((!B1L146) # (!B1_r_sinapse_count[19]));


--B1L151 is neuron_l1_n0:n0|r_sinapse_count[20]~72
B1L151 = (B1_r_sinapse_count[20] & (B1L149 $ (GND))) # (!B1_r_sinapse_count[20] & (!B1L149 & VCC));

--B1L152 is neuron_l1_n0:n0|r_sinapse_count[20]~73
B1L152 = CARRY((B1_r_sinapse_count[20] & !B1L149));


--B1L154 is neuron_l1_n0:n0|r_sinapse_count[21]~74
B1L154 = (B1_r_sinapse_count[21] & (!B1L152)) # (!B1_r_sinapse_count[21] & ((B1L152) # (GND)));

--B1L155 is neuron_l1_n0:n0|r_sinapse_count[21]~75
B1L155 = CARRY((!B1L152) # (!B1_r_sinapse_count[21]));


--B1L157 is neuron_l1_n0:n0|r_sinapse_count[22]~76
B1L157 = (B1_r_sinapse_count[22] & (B1L155 $ (GND))) # (!B1_r_sinapse_count[22] & (!B1L155 & VCC));

--B1L158 is neuron_l1_n0:n0|r_sinapse_count[22]~77
B1L158 = CARRY((B1_r_sinapse_count[22] & !B1L155));


--B1L160 is neuron_l1_n0:n0|r_sinapse_count[23]~78
B1L160 = (B1_r_sinapse_count[23] & (!B1L158)) # (!B1_r_sinapse_count[23] & ((B1L158) # (GND)));

--B1L161 is neuron_l1_n0:n0|r_sinapse_count[23]~79
B1L161 = CARRY((!B1L158) # (!B1_r_sinapse_count[23]));


--B1L163 is neuron_l1_n0:n0|r_sinapse_count[24]~80
B1L163 = (B1_r_sinapse_count[24] & (B1L161 $ (GND))) # (!B1_r_sinapse_count[24] & (!B1L161 & VCC));

--B1L164 is neuron_l1_n0:n0|r_sinapse_count[24]~81
B1L164 = CARRY((B1_r_sinapse_count[24] & !B1L161));


--B1L166 is neuron_l1_n0:n0|r_sinapse_count[25]~82
B1L166 = (B1_r_sinapse_count[25] & (!B1L164)) # (!B1_r_sinapse_count[25] & ((B1L164) # (GND)));

--B1L167 is neuron_l1_n0:n0|r_sinapse_count[25]~83
B1L167 = CARRY((!B1L164) # (!B1_r_sinapse_count[25]));


--B1L169 is neuron_l1_n0:n0|r_sinapse_count[26]~84
B1L169 = (B1_r_sinapse_count[26] & (B1L167 $ (GND))) # (!B1_r_sinapse_count[26] & (!B1L167 & VCC));

--B1L170 is neuron_l1_n0:n0|r_sinapse_count[26]~85
B1L170 = CARRY((B1_r_sinapse_count[26] & !B1L167));


--B1L172 is neuron_l1_n0:n0|r_sinapse_count[27]~86
B1L172 = (B1_r_sinapse_count[27] & (!B1L170)) # (!B1_r_sinapse_count[27] & ((B1L170) # (GND)));

--B1L173 is neuron_l1_n0:n0|r_sinapse_count[27]~87
B1L173 = CARRY((!B1L170) # (!B1_r_sinapse_count[27]));


--B1L175 is neuron_l1_n0:n0|r_sinapse_count[28]~88
B1L175 = (B1_r_sinapse_count[28] & (B1L173 $ (GND))) # (!B1_r_sinapse_count[28] & (!B1L173 & VCC));

--B1L176 is neuron_l1_n0:n0|r_sinapse_count[28]~89
B1L176 = CARRY((B1_r_sinapse_count[28] & !B1L173));


--B1L178 is neuron_l1_n0:n0|r_sinapse_count[29]~90
B1L178 = (B1_r_sinapse_count[29] & (!B1L176)) # (!B1_r_sinapse_count[29] & ((B1L176) # (GND)));

--B1L179 is neuron_l1_n0:n0|r_sinapse_count[29]~91
B1L179 = CARRY((!B1L176) # (!B1_r_sinapse_count[29]));


--B1L181 is neuron_l1_n0:n0|r_sinapse_count[30]~92
B1L181 = (B1_r_sinapse_count[30] & (B1L179 $ (GND))) # (!B1_r_sinapse_count[30] & (!B1L179 & VCC));

--B1L182 is neuron_l1_n0:n0|r_sinapse_count[30]~93
B1L182 = CARRY((B1_r_sinapse_count[30] & !B1L179));


--B1L184 is neuron_l1_n0:n0|r_sinapse_count[31]~94
B1L184 = B1_r_sinapse_count[31] $ (B1L182);


--M2_mac_mult1 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1
--DSP Block Multiplier Base Width: 18-bits
M2_mac_mult1_a_data = DATA(R1_ram_block1a15, R1_ram_block1a14, R1_ram_block1a13, R1_ram_block1a12, R1_ram_block1a11, R1_ram_block1a10, R1_ram_block1a9, R1_ram_block1a8, R1_ram_block1a7, R1_ram_block1a6, R1_ram_block1a5, R1_ram_block1a4, R1_ram_block1a3, R1_ram_block1a2, R1_ram_block1a1, R1_ram_block1a0);
M2_mac_mult1_a_rep = SIGNED(M2_mac_mult1_a_data);
M2_mac_mult1_b_data = DATA(i_fxp[15], i_fxp[14], i_fxp[13], i_fxp[12], i_fxp[11], i_fxp[10], i_fxp[9], i_fxp[8], i_fxp[7], i_fxp[6], i_fxp[5], i_fxp[4], i_fxp[3], i_fxp[2], i_fxp[1], i_fxp[0]);
M2_mac_mult1_b_rep = SIGNED(M2_mac_mult1_b_data);
M2_mac_mult1_result = M2_mac_mult1_a_rep * M2_mac_mult1_b_rep;
M2_mac_mult1 = M2_mac_mult1_result[0];

--M2L2 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT1
M2L2 = M2_mac_mult1_result[1];

--M2L3 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT2
M2L3 = M2_mac_mult1_result[2];

--M2L4 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT3
M2L4 = M2_mac_mult1_result[3];

--M2L5 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT4
M2L5 = M2_mac_mult1_result[4];

--M2L6 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT5
M2L6 = M2_mac_mult1_result[5];

--M2L7 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT6
M2L7 = M2_mac_mult1_result[6];

--M2L8 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT7
M2L8 = M2_mac_mult1_result[7];

--M2L9 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT8
M2L9 = M2_mac_mult1_result[8];

--M2L10 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT9
M2L10 = M2_mac_mult1_result[9];

--M2L11 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT10
M2L11 = M2_mac_mult1_result[10];

--M2L12 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT11
M2L12 = M2_mac_mult1_result[11];

--M2L13 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT12
M2L13 = M2_mac_mult1_result[12];

--M2L14 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT13
M2L14 = M2_mac_mult1_result[13];

--M2L15 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT14
M2L15 = M2_mac_mult1_result[14];

--M2L16 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT15
M2L16 = M2_mac_mult1_result[15];

--M2L17 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT16
M2L17 = M2_mac_mult1_result[16];

--M2L18 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT17
M2L18 = M2_mac_mult1_result[17];

--M2L19 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT18
M2L19 = M2_mac_mult1_result[18];

--M2L20 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT19
M2L20 = M2_mac_mult1_result[19];

--M2L21 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT20
M2L21 = M2_mac_mult1_result[20];

--M2L22 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT21
M2L22 = M2_mac_mult1_result[21];

--M2L23 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT22
M2L23 = M2_mac_mult1_result[22];

--M2L24 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT23
M2L24 = M2_mac_mult1_result[23];

--M2L25 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT24
M2L25 = M2_mac_mult1_result[24];

--M2L26 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT25
M2L26 = M2_mac_mult1_result[25];

--M2L27 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT26
M2L27 = M2_mac_mult1_result[26];

--M2L28 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT27
M2L28 = M2_mac_mult1_result[27];

--M2L29 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT28
M2L29 = M2_mac_mult1_result[28];

--M2L30 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT29
M2L30 = M2_mac_mult1_result[29];

--M2L31 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT30
M2L31 = M2_mac_mult1_result[30];

--M2L32 is neuron_l1_n1:n1|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT31
M2L32 = M2_mac_mult1_result[31];


--M3_mac_mult1 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1
--DSP Block Multiplier Base Width: 18-bits
M3_mac_mult1_a_data = DATA(T1_ram_block1a15, T1_ram_block1a14, T1_ram_block1a13, T1_ram_block1a12, T1_ram_block1a11, T1_ram_block1a10, T1_ram_block1a9, T1_ram_block1a8, T1_ram_block1a7, T1_ram_block1a6, T1_ram_block1a5, T1_ram_block1a4, T1_ram_block1a3, T1_ram_block1a2, T1_ram_block1a1, T1_ram_block1a0);
M3_mac_mult1_a_rep = SIGNED(M3_mac_mult1_a_data);
M3_mac_mult1_b_data = DATA(i_fxp[15], i_fxp[14], i_fxp[13], i_fxp[12], i_fxp[11], i_fxp[10], i_fxp[9], i_fxp[8], i_fxp[7], i_fxp[6], i_fxp[5], i_fxp[4], i_fxp[3], i_fxp[2], i_fxp[1], i_fxp[0]);
M3_mac_mult1_b_rep = SIGNED(M3_mac_mult1_b_data);
M3_mac_mult1_result = M3_mac_mult1_a_rep * M3_mac_mult1_b_rep;
M3_mac_mult1 = M3_mac_mult1_result[0];

--M3L2 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT1
M3L2 = M3_mac_mult1_result[1];

--M3L3 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT2
M3L3 = M3_mac_mult1_result[2];

--M3L4 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT3
M3L4 = M3_mac_mult1_result[3];

--M3L5 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT4
M3L5 = M3_mac_mult1_result[4];

--M3L6 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT5
M3L6 = M3_mac_mult1_result[5];

--M3L7 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT6
M3L7 = M3_mac_mult1_result[6];

--M3L8 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT7
M3L8 = M3_mac_mult1_result[7];

--M3L9 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT8
M3L9 = M3_mac_mult1_result[8];

--M3L10 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT9
M3L10 = M3_mac_mult1_result[9];

--M3L11 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT10
M3L11 = M3_mac_mult1_result[10];

--M3L12 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT11
M3L12 = M3_mac_mult1_result[11];

--M3L13 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT12
M3L13 = M3_mac_mult1_result[12];

--M3L14 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT13
M3L14 = M3_mac_mult1_result[13];

--M3L15 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT14
M3L15 = M3_mac_mult1_result[14];

--M3L16 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT15
M3L16 = M3_mac_mult1_result[15];

--M3L17 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT16
M3L17 = M3_mac_mult1_result[16];

--M3L18 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT17
M3L18 = M3_mac_mult1_result[17];

--M3L19 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT18
M3L19 = M3_mac_mult1_result[18];

--M3L20 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT19
M3L20 = M3_mac_mult1_result[19];

--M3L21 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT20
M3L21 = M3_mac_mult1_result[20];

--M3L22 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT21
M3L22 = M3_mac_mult1_result[21];

--M3L23 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT22
M3L23 = M3_mac_mult1_result[22];

--M3L24 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT23
M3L24 = M3_mac_mult1_result[23];

--M3L25 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT24
M3L25 = M3_mac_mult1_result[24];

--M3L26 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT25
M3L26 = M3_mac_mult1_result[25];

--M3L27 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT26
M3L27 = M3_mac_mult1_result[26];

--M3L28 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT27
M3L28 = M3_mac_mult1_result[27];

--M3L29 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT28
M3L29 = M3_mac_mult1_result[28];

--M3L30 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT29
M3L30 = M3_mac_mult1_result[29];

--M3L31 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT30
M3L31 = M3_mac_mult1_result[30];

--M3L32 is neuron_l1_n2:n2|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT31
M3L32 = M3_mac_mult1_result[31];


--M4_mac_mult1 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1
--DSP Block Multiplier Base Width: 18-bits
M4_mac_mult1_a_data = DATA(V1_ram_block1a15, V1_ram_block1a14, V1_ram_block1a13, V1_ram_block1a12, V1_ram_block1a11, V1_ram_block1a10, V1_ram_block1a9, V1_ram_block1a8, V1_ram_block1a7, V1_ram_block1a6, V1_ram_block1a5, V1_ram_block1a4, V1_ram_block1a3, V1_ram_block1a2, V1_ram_block1a1, V1_ram_block1a0);
M4_mac_mult1_a_rep = SIGNED(M4_mac_mult1_a_data);
M4_mac_mult1_b_data = DATA(i_fxp[15], i_fxp[14], i_fxp[13], i_fxp[12], i_fxp[11], i_fxp[10], i_fxp[9], i_fxp[8], i_fxp[7], i_fxp[6], i_fxp[5], i_fxp[4], i_fxp[3], i_fxp[2], i_fxp[1], i_fxp[0]);
M4_mac_mult1_b_rep = SIGNED(M4_mac_mult1_b_data);
M4_mac_mult1_result = M4_mac_mult1_a_rep * M4_mac_mult1_b_rep;
M4_mac_mult1 = M4_mac_mult1_result[0];

--M4L2 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT1
M4L2 = M4_mac_mult1_result[1];

--M4L3 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT2
M4L3 = M4_mac_mult1_result[2];

--M4L4 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT3
M4L4 = M4_mac_mult1_result[3];

--M4L5 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT4
M4L5 = M4_mac_mult1_result[4];

--M4L6 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT5
M4L6 = M4_mac_mult1_result[5];

--M4L7 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT6
M4L7 = M4_mac_mult1_result[6];

--M4L8 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT7
M4L8 = M4_mac_mult1_result[7];

--M4L9 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT8
M4L9 = M4_mac_mult1_result[8];

--M4L10 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT9
M4L10 = M4_mac_mult1_result[9];

--M4L11 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT10
M4L11 = M4_mac_mult1_result[10];

--M4L12 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT11
M4L12 = M4_mac_mult1_result[11];

--M4L13 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT12
M4L13 = M4_mac_mult1_result[12];

--M4L14 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT13
M4L14 = M4_mac_mult1_result[13];

--M4L15 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT14
M4L15 = M4_mac_mult1_result[14];

--M4L16 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT15
M4L16 = M4_mac_mult1_result[15];

--M4L17 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT16
M4L17 = M4_mac_mult1_result[16];

--M4L18 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT17
M4L18 = M4_mac_mult1_result[17];

--M4L19 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT18
M4L19 = M4_mac_mult1_result[18];

--M4L20 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT19
M4L20 = M4_mac_mult1_result[19];

--M4L21 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT20
M4L21 = M4_mac_mult1_result[20];

--M4L22 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT21
M4L22 = M4_mac_mult1_result[21];

--M4L23 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT22
M4L23 = M4_mac_mult1_result[22];

--M4L24 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT23
M4L24 = M4_mac_mult1_result[23];

--M4L25 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT24
M4L25 = M4_mac_mult1_result[24];

--M4L26 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT25
M4L26 = M4_mac_mult1_result[25];

--M4L27 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT26
M4L27 = M4_mac_mult1_result[26];

--M4L28 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT27
M4L28 = M4_mac_mult1_result[27];

--M4L29 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT28
M4L29 = M4_mac_mult1_result[28];

--M4L30 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT29
M4L30 = M4_mac_mult1_result[29];

--M4L31 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT30
M4L31 = M4_mac_mult1_result[30];

--M4L32 is neuron_l1_n3:n3|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT31
M4L32 = M4_mac_mult1_result[31];


--M5_mac_mult1 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1
--DSP Block Multiplier Base Width: 18-bits
M5_mac_mult1_a_data = DATA(X1_ram_block1a15, X1_ram_block1a14, X1_ram_block1a13, X1_ram_block1a12, X1_ram_block1a11, X1_ram_block1a10, X1_ram_block1a9, X1_ram_block1a8, X1_ram_block1a7, X1_ram_block1a6, X1_ram_block1a5, X1_ram_block1a4, X1_ram_block1a3, X1_ram_block1a2, X1_ram_block1a1, X1_ram_block1a0);
M5_mac_mult1_a_rep = SIGNED(M5_mac_mult1_a_data);
M5_mac_mult1_b_data = DATA(i_fxp[15], i_fxp[14], i_fxp[13], i_fxp[12], i_fxp[11], i_fxp[10], i_fxp[9], i_fxp[8], i_fxp[7], i_fxp[6], i_fxp[5], i_fxp[4], i_fxp[3], i_fxp[2], i_fxp[1], i_fxp[0]);
M5_mac_mult1_b_rep = SIGNED(M5_mac_mult1_b_data);
M5_mac_mult1_result = M5_mac_mult1_a_rep * M5_mac_mult1_b_rep;
M5_mac_mult1 = M5_mac_mult1_result[0];

--M5L2 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT1
M5L2 = M5_mac_mult1_result[1];

--M5L3 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT2
M5L3 = M5_mac_mult1_result[2];

--M5L4 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT3
M5L4 = M5_mac_mult1_result[3];

--M5L5 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT4
M5L5 = M5_mac_mult1_result[4];

--M5L6 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT5
M5L6 = M5_mac_mult1_result[5];

--M5L7 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT6
M5L7 = M5_mac_mult1_result[6];

--M5L8 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT7
M5L8 = M5_mac_mult1_result[7];

--M5L9 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT8
M5L9 = M5_mac_mult1_result[8];

--M5L10 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT9
M5L10 = M5_mac_mult1_result[9];

--M5L11 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT10
M5L11 = M5_mac_mult1_result[10];

--M5L12 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT11
M5L12 = M5_mac_mult1_result[11];

--M5L13 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT12
M5L13 = M5_mac_mult1_result[12];

--M5L14 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT13
M5L14 = M5_mac_mult1_result[13];

--M5L15 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT14
M5L15 = M5_mac_mult1_result[14];

--M5L16 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT15
M5L16 = M5_mac_mult1_result[15];

--M5L17 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT16
M5L17 = M5_mac_mult1_result[16];

--M5L18 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT17
M5L18 = M5_mac_mult1_result[17];

--M5L19 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT18
M5L19 = M5_mac_mult1_result[18];

--M5L20 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT19
M5L20 = M5_mac_mult1_result[19];

--M5L21 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT20
M5L21 = M5_mac_mult1_result[20];

--M5L22 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT21
M5L22 = M5_mac_mult1_result[21];

--M5L23 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT22
M5L23 = M5_mac_mult1_result[22];

--M5L24 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT23
M5L24 = M5_mac_mult1_result[23];

--M5L25 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT24
M5L25 = M5_mac_mult1_result[24];

--M5L26 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT25
M5L26 = M5_mac_mult1_result[25];

--M5L27 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT26
M5L27 = M5_mac_mult1_result[26];

--M5L28 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT27
M5L28 = M5_mac_mult1_result[27];

--M5L29 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT28
M5L29 = M5_mac_mult1_result[28];

--M5L30 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT29
M5L30 = M5_mac_mult1_result[29];

--M5L31 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT30
M5L31 = M5_mac_mult1_result[30];

--M5L32 is neuron_l1_n4:n4|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT31
M5L32 = M5_mac_mult1_result[31];


--M6_mac_mult1 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1
--DSP Block Multiplier Base Width: 18-bits
M6_mac_mult1_a_data = DATA(Z1_ram_block1a15, Z1_ram_block1a14, Z1_ram_block1a13, Z1_ram_block1a12, Z1_ram_block1a11, Z1_ram_block1a10, Z1_ram_block1a9, Z1_ram_block1a8, Z1_ram_block1a7, Z1_ram_block1a6, Z1_ram_block1a5, Z1_ram_block1a4, Z1_ram_block1a3, Z1_ram_block1a2, Z1_ram_block1a1, Z1_ram_block1a0);
M6_mac_mult1_a_rep = SIGNED(M6_mac_mult1_a_data);
M6_mac_mult1_b_data = DATA(i_fxp[15], i_fxp[14], i_fxp[13], i_fxp[12], i_fxp[11], i_fxp[10], i_fxp[9], i_fxp[8], i_fxp[7], i_fxp[6], i_fxp[5], i_fxp[4], i_fxp[3], i_fxp[2], i_fxp[1], i_fxp[0]);
M6_mac_mult1_b_rep = SIGNED(M6_mac_mult1_b_data);
M6_mac_mult1_result = M6_mac_mult1_a_rep * M6_mac_mult1_b_rep;
M6_mac_mult1 = M6_mac_mult1_result[0];

--M6L2 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT1
M6L2 = M6_mac_mult1_result[1];

--M6L3 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT2
M6L3 = M6_mac_mult1_result[2];

--M6L4 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT3
M6L4 = M6_mac_mult1_result[3];

--M6L5 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT4
M6L5 = M6_mac_mult1_result[4];

--M6L6 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT5
M6L6 = M6_mac_mult1_result[5];

--M6L7 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT6
M6L7 = M6_mac_mult1_result[6];

--M6L8 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT7
M6L8 = M6_mac_mult1_result[7];

--M6L9 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT8
M6L9 = M6_mac_mult1_result[8];

--M6L10 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT9
M6L10 = M6_mac_mult1_result[9];

--M6L11 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT10
M6L11 = M6_mac_mult1_result[10];

--M6L12 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT11
M6L12 = M6_mac_mult1_result[11];

--M6L13 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT12
M6L13 = M6_mac_mult1_result[12];

--M6L14 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT13
M6L14 = M6_mac_mult1_result[13];

--M6L15 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT14
M6L15 = M6_mac_mult1_result[14];

--M6L16 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT15
M6L16 = M6_mac_mult1_result[15];

--M6L17 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT16
M6L17 = M6_mac_mult1_result[16];

--M6L18 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT17
M6L18 = M6_mac_mult1_result[17];

--M6L19 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT18
M6L19 = M6_mac_mult1_result[18];

--M6L20 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT19
M6L20 = M6_mac_mult1_result[19];

--M6L21 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT20
M6L21 = M6_mac_mult1_result[20];

--M6L22 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT21
M6L22 = M6_mac_mult1_result[21];

--M6L23 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT22
M6L23 = M6_mac_mult1_result[22];

--M6L24 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT23
M6L24 = M6_mac_mult1_result[23];

--M6L25 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT24
M6L25 = M6_mac_mult1_result[24];

--M6L26 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT25
M6L26 = M6_mac_mult1_result[25];

--M6L27 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT26
M6L27 = M6_mac_mult1_result[26];

--M6L28 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT27
M6L28 = M6_mac_mult1_result[27];

--M6L29 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT28
M6L29 = M6_mac_mult1_result[28];

--M6L30 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT29
M6L30 = M6_mac_mult1_result[29];

--M6L31 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT30
M6L31 = M6_mac_mult1_result[30];

--M6L32 is neuron_l1_n5:n5|mac:mac_n1|lpm_mult:Mult0|mult_36t:auto_generated|mac_mult1~DATAOUT31
M6L32 = M6_mac_mult1_result[31];


--P1_ram_block1a0 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a0
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a0_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a0_PORT_A_address_reg = DFFE(P1_ram_block1a0_PORT_A_address, P1_ram_block1a0_clock_0, , , );
P1_ram_block1a0_PORT_A_read_enable = VCC;
P1_ram_block1a0_PORT_A_read_enable_reg = DFFE(P1_ram_block1a0_PORT_A_read_enable, P1_ram_block1a0_clock_0, , , );
P1_ram_block1a0_clock_0 = i_clk;
P1_ram_block1a0_PORT_A_data_out = MEMORY(, , P1_ram_block1a0_PORT_A_address_reg, , , P1_ram_block1a0_PORT_A_read_enable_reg, , , , , P1_ram_block1a0_clock_0, , , , , , , );
P1_ram_block1a0 = P1_ram_block1a0_PORT_A_data_out[0];


--P1_ram_block1a1 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a1
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a1_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a1_PORT_A_address_reg = DFFE(P1_ram_block1a1_PORT_A_address, P1_ram_block1a1_clock_0, , , );
P1_ram_block1a1_PORT_A_read_enable = VCC;
P1_ram_block1a1_PORT_A_read_enable_reg = DFFE(P1_ram_block1a1_PORT_A_read_enable, P1_ram_block1a1_clock_0, , , );
P1_ram_block1a1_clock_0 = i_clk;
P1_ram_block1a1_PORT_A_data_out = MEMORY(, , P1_ram_block1a1_PORT_A_address_reg, , , P1_ram_block1a1_PORT_A_read_enable_reg, , , , , P1_ram_block1a1_clock_0, , , , , , , );
P1_ram_block1a1 = P1_ram_block1a1_PORT_A_data_out[0];


--P1_ram_block1a2 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a2
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a2_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a2_PORT_A_address_reg = DFFE(P1_ram_block1a2_PORT_A_address, P1_ram_block1a2_clock_0, , , );
P1_ram_block1a2_PORT_A_read_enable = VCC;
P1_ram_block1a2_PORT_A_read_enable_reg = DFFE(P1_ram_block1a2_PORT_A_read_enable, P1_ram_block1a2_clock_0, , , );
P1_ram_block1a2_clock_0 = i_clk;
P1_ram_block1a2_PORT_A_data_out = MEMORY(, , P1_ram_block1a2_PORT_A_address_reg, , , P1_ram_block1a2_PORT_A_read_enable_reg, , , , , P1_ram_block1a2_clock_0, , , , , , , );
P1_ram_block1a2 = P1_ram_block1a2_PORT_A_data_out[0];


--P1_ram_block1a3 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a3
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a3_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a3_PORT_A_address_reg = DFFE(P1_ram_block1a3_PORT_A_address, P1_ram_block1a3_clock_0, , , );
P1_ram_block1a3_PORT_A_read_enable = VCC;
P1_ram_block1a3_PORT_A_read_enable_reg = DFFE(P1_ram_block1a3_PORT_A_read_enable, P1_ram_block1a3_clock_0, , , );
P1_ram_block1a3_clock_0 = i_clk;
P1_ram_block1a3_PORT_A_data_out = MEMORY(, , P1_ram_block1a3_PORT_A_address_reg, , , P1_ram_block1a3_PORT_A_read_enable_reg, , , , , P1_ram_block1a3_clock_0, , , , , , , );
P1_ram_block1a3 = P1_ram_block1a3_PORT_A_data_out[0];


--P1_ram_block1a4 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a4
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a4_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a4_PORT_A_address_reg = DFFE(P1_ram_block1a4_PORT_A_address, P1_ram_block1a4_clock_0, , , );
P1_ram_block1a4_PORT_A_read_enable = VCC;
P1_ram_block1a4_PORT_A_read_enable_reg = DFFE(P1_ram_block1a4_PORT_A_read_enable, P1_ram_block1a4_clock_0, , , );
P1_ram_block1a4_clock_0 = i_clk;
P1_ram_block1a4_PORT_A_data_out = MEMORY(, , P1_ram_block1a4_PORT_A_address_reg, , , P1_ram_block1a4_PORT_A_read_enable_reg, , , , , P1_ram_block1a4_clock_0, , , , , , , );
P1_ram_block1a4 = P1_ram_block1a4_PORT_A_data_out[0];


--P1_ram_block1a5 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a5
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a5_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a5_PORT_A_address_reg = DFFE(P1_ram_block1a5_PORT_A_address, P1_ram_block1a5_clock_0, , , );
P1_ram_block1a5_PORT_A_read_enable = VCC;
P1_ram_block1a5_PORT_A_read_enable_reg = DFFE(P1_ram_block1a5_PORT_A_read_enable, P1_ram_block1a5_clock_0, , , );
P1_ram_block1a5_clock_0 = i_clk;
P1_ram_block1a5_PORT_A_data_out = MEMORY(, , P1_ram_block1a5_PORT_A_address_reg, , , P1_ram_block1a5_PORT_A_read_enable_reg, , , , , P1_ram_block1a5_clock_0, , , , , , , );
P1_ram_block1a5 = P1_ram_block1a5_PORT_A_data_out[0];


--P1_ram_block1a6 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a6
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a6_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a6_PORT_A_address_reg = DFFE(P1_ram_block1a6_PORT_A_address, P1_ram_block1a6_clock_0, , , );
P1_ram_block1a6_PORT_A_read_enable = VCC;
P1_ram_block1a6_PORT_A_read_enable_reg = DFFE(P1_ram_block1a6_PORT_A_read_enable, P1_ram_block1a6_clock_0, , , );
P1_ram_block1a6_clock_0 = i_clk;
P1_ram_block1a6_PORT_A_data_out = MEMORY(, , P1_ram_block1a6_PORT_A_address_reg, , , P1_ram_block1a6_PORT_A_read_enable_reg, , , , , P1_ram_block1a6_clock_0, , , , , , , );
P1_ram_block1a6 = P1_ram_block1a6_PORT_A_data_out[0];


--P1_ram_block1a7 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a7
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a7_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a7_PORT_A_address_reg = DFFE(P1_ram_block1a7_PORT_A_address, P1_ram_block1a7_clock_0, , , );
P1_ram_block1a7_PORT_A_read_enable = VCC;
P1_ram_block1a7_PORT_A_read_enable_reg = DFFE(P1_ram_block1a7_PORT_A_read_enable, P1_ram_block1a7_clock_0, , , );
P1_ram_block1a7_clock_0 = i_clk;
P1_ram_block1a7_PORT_A_data_out = MEMORY(, , P1_ram_block1a7_PORT_A_address_reg, , , P1_ram_block1a7_PORT_A_read_enable_reg, , , , , P1_ram_block1a7_clock_0, , , , , , , );
P1_ram_block1a7 = P1_ram_block1a7_PORT_A_data_out[0];


--P1_ram_block1a8 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a8
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a8_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a8_PORT_A_address_reg = DFFE(P1_ram_block1a8_PORT_A_address, P1_ram_block1a8_clock_0, , , );
P1_ram_block1a8_PORT_A_read_enable = VCC;
P1_ram_block1a8_PORT_A_read_enable_reg = DFFE(P1_ram_block1a8_PORT_A_read_enable, P1_ram_block1a8_clock_0, , , );
P1_ram_block1a8_clock_0 = i_clk;
P1_ram_block1a8_PORT_A_data_out = MEMORY(, , P1_ram_block1a8_PORT_A_address_reg, , , P1_ram_block1a8_PORT_A_read_enable_reg, , , , , P1_ram_block1a8_clock_0, , , , , , , );
P1_ram_block1a8 = P1_ram_block1a8_PORT_A_data_out[0];


--P1_ram_block1a9 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a9
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a9_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a9_PORT_A_address_reg = DFFE(P1_ram_block1a9_PORT_A_address, P1_ram_block1a9_clock_0, , , );
P1_ram_block1a9_PORT_A_read_enable = VCC;
P1_ram_block1a9_PORT_A_read_enable_reg = DFFE(P1_ram_block1a9_PORT_A_read_enable, P1_ram_block1a9_clock_0, , , );
P1_ram_block1a9_clock_0 = i_clk;
P1_ram_block1a9_PORT_A_data_out = MEMORY(, , P1_ram_block1a9_PORT_A_address_reg, , , P1_ram_block1a9_PORT_A_read_enable_reg, , , , , P1_ram_block1a9_clock_0, , , , , , , );
P1_ram_block1a9 = P1_ram_block1a9_PORT_A_data_out[0];


--P1_ram_block1a10 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a10
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a10_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a10_PORT_A_address_reg = DFFE(P1_ram_block1a10_PORT_A_address, P1_ram_block1a10_clock_0, , , );
P1_ram_block1a10_PORT_A_read_enable = VCC;
P1_ram_block1a10_PORT_A_read_enable_reg = DFFE(P1_ram_block1a10_PORT_A_read_enable, P1_ram_block1a10_clock_0, , , );
P1_ram_block1a10_clock_0 = i_clk;
P1_ram_block1a10_PORT_A_data_out = MEMORY(, , P1_ram_block1a10_PORT_A_address_reg, , , P1_ram_block1a10_PORT_A_read_enable_reg, , , , , P1_ram_block1a10_clock_0, , , , , , , );
P1_ram_block1a10 = P1_ram_block1a10_PORT_A_data_out[0];


--P1_ram_block1a11 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a11
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a11_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a11_PORT_A_address_reg = DFFE(P1_ram_block1a11_PORT_A_address, P1_ram_block1a11_clock_0, , , );
P1_ram_block1a11_PORT_A_read_enable = VCC;
P1_ram_block1a11_PORT_A_read_enable_reg = DFFE(P1_ram_block1a11_PORT_A_read_enable, P1_ram_block1a11_clock_0, , , );
P1_ram_block1a11_clock_0 = i_clk;
P1_ram_block1a11_PORT_A_data_out = MEMORY(, , P1_ram_block1a11_PORT_A_address_reg, , , P1_ram_block1a11_PORT_A_read_enable_reg, , , , , P1_ram_block1a11_clock_0, , , , , , , );
P1_ram_block1a11 = P1_ram_block1a11_PORT_A_data_out[0];


--P1_ram_block1a12 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a12
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a12_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a12_PORT_A_address_reg = DFFE(P1_ram_block1a12_PORT_A_address, P1_ram_block1a12_clock_0, , , );
P1_ram_block1a12_PORT_A_read_enable = VCC;
P1_ram_block1a12_PORT_A_read_enable_reg = DFFE(P1_ram_block1a12_PORT_A_read_enable, P1_ram_block1a12_clock_0, , , );
P1_ram_block1a12_clock_0 = i_clk;
P1_ram_block1a12_PORT_A_data_out = MEMORY(, , P1_ram_block1a12_PORT_A_address_reg, , , P1_ram_block1a12_PORT_A_read_enable_reg, , , , , P1_ram_block1a12_clock_0, , , , , , , );
P1_ram_block1a12 = P1_ram_block1a12_PORT_A_data_out[0];


--P1_ram_block1a13 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a13
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a13_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a13_PORT_A_address_reg = DFFE(P1_ram_block1a13_PORT_A_address, P1_ram_block1a13_clock_0, , , );
P1_ram_block1a13_PORT_A_read_enable = VCC;
P1_ram_block1a13_PORT_A_read_enable_reg = DFFE(P1_ram_block1a13_PORT_A_read_enable, P1_ram_block1a13_clock_0, , , );
P1_ram_block1a13_clock_0 = i_clk;
P1_ram_block1a13_PORT_A_data_out = MEMORY(, , P1_ram_block1a13_PORT_A_address_reg, , , P1_ram_block1a13_PORT_A_read_enable_reg, , , , , P1_ram_block1a13_clock_0, , , , , , , );
P1_ram_block1a13 = P1_ram_block1a13_PORT_A_data_out[0];


--P1_ram_block1a14 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a14
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a14_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a14_PORT_A_address_reg = DFFE(P1_ram_block1a14_PORT_A_address, P1_ram_block1a14_clock_0, , , );
P1_ram_block1a14_PORT_A_read_enable = VCC;
P1_ram_block1a14_PORT_A_read_enable_reg = DFFE(P1_ram_block1a14_PORT_A_read_enable, P1_ram_block1a14_clock_0, , , );
P1_ram_block1a14_clock_0 = i_clk;
P1_ram_block1a14_PORT_A_data_out = MEMORY(, , P1_ram_block1a14_PORT_A_address_reg, , , P1_ram_block1a14_PORT_A_read_enable_reg, , , , , P1_ram_block1a14_clock_0, , , , , , , );
P1_ram_block1a14 = P1_ram_block1a14_PORT_A_data_out[0];


--P1_ram_block1a15 is neuron_l1_n0:n0|ram_l1_n0:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_e971:auto_generated|ram_block1a15
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
P1_ram_block1a15_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
P1_ram_block1a15_PORT_A_address_reg = DFFE(P1_ram_block1a15_PORT_A_address, P1_ram_block1a15_clock_0, , , );
P1_ram_block1a15_PORT_A_read_enable = VCC;
P1_ram_block1a15_PORT_A_read_enable_reg = DFFE(P1_ram_block1a15_PORT_A_read_enable, P1_ram_block1a15_clock_0, , , );
P1_ram_block1a15_clock_0 = i_clk;
P1_ram_block1a15_PORT_A_data_out = MEMORY(, , P1_ram_block1a15_PORT_A_address_reg, , , P1_ram_block1a15_PORT_A_read_enable_reg, , , , , P1_ram_block1a15_clock_0, , , , , , , );
P1_ram_block1a15 = P1_ram_block1a15_PORT_A_data_out[0];


--R1_ram_block1a0 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a0
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a0_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a0_PORT_A_address_reg = DFFE(R1_ram_block1a0_PORT_A_address, R1_ram_block1a0_clock_0, , , );
R1_ram_block1a0_PORT_A_read_enable = VCC;
R1_ram_block1a0_PORT_A_read_enable_reg = DFFE(R1_ram_block1a0_PORT_A_read_enable, R1_ram_block1a0_clock_0, , , );
R1_ram_block1a0_clock_0 = i_clk;
R1_ram_block1a0_PORT_A_data_out = MEMORY(, , R1_ram_block1a0_PORT_A_address_reg, , , R1_ram_block1a0_PORT_A_read_enable_reg, , , , , R1_ram_block1a0_clock_0, , , , , , , );
R1_ram_block1a0 = R1_ram_block1a0_PORT_A_data_out[0];


--R1_ram_block1a1 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a1
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a1_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a1_PORT_A_address_reg = DFFE(R1_ram_block1a1_PORT_A_address, R1_ram_block1a1_clock_0, , , );
R1_ram_block1a1_PORT_A_read_enable = VCC;
R1_ram_block1a1_PORT_A_read_enable_reg = DFFE(R1_ram_block1a1_PORT_A_read_enable, R1_ram_block1a1_clock_0, , , );
R1_ram_block1a1_clock_0 = i_clk;
R1_ram_block1a1_PORT_A_data_out = MEMORY(, , R1_ram_block1a1_PORT_A_address_reg, , , R1_ram_block1a1_PORT_A_read_enable_reg, , , , , R1_ram_block1a1_clock_0, , , , , , , );
R1_ram_block1a1 = R1_ram_block1a1_PORT_A_data_out[0];


--R1_ram_block1a2 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a2
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a2_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a2_PORT_A_address_reg = DFFE(R1_ram_block1a2_PORT_A_address, R1_ram_block1a2_clock_0, , , );
R1_ram_block1a2_PORT_A_read_enable = VCC;
R1_ram_block1a2_PORT_A_read_enable_reg = DFFE(R1_ram_block1a2_PORT_A_read_enable, R1_ram_block1a2_clock_0, , , );
R1_ram_block1a2_clock_0 = i_clk;
R1_ram_block1a2_PORT_A_data_out = MEMORY(, , R1_ram_block1a2_PORT_A_address_reg, , , R1_ram_block1a2_PORT_A_read_enable_reg, , , , , R1_ram_block1a2_clock_0, , , , , , , );
R1_ram_block1a2 = R1_ram_block1a2_PORT_A_data_out[0];


--R1_ram_block1a3 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a3
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a3_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a3_PORT_A_address_reg = DFFE(R1_ram_block1a3_PORT_A_address, R1_ram_block1a3_clock_0, , , );
R1_ram_block1a3_PORT_A_read_enable = VCC;
R1_ram_block1a3_PORT_A_read_enable_reg = DFFE(R1_ram_block1a3_PORT_A_read_enable, R1_ram_block1a3_clock_0, , , );
R1_ram_block1a3_clock_0 = i_clk;
R1_ram_block1a3_PORT_A_data_out = MEMORY(, , R1_ram_block1a3_PORT_A_address_reg, , , R1_ram_block1a3_PORT_A_read_enable_reg, , , , , R1_ram_block1a3_clock_0, , , , , , , );
R1_ram_block1a3 = R1_ram_block1a3_PORT_A_data_out[0];


--R1_ram_block1a4 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a4
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a4_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a4_PORT_A_address_reg = DFFE(R1_ram_block1a4_PORT_A_address, R1_ram_block1a4_clock_0, , , );
R1_ram_block1a4_PORT_A_read_enable = VCC;
R1_ram_block1a4_PORT_A_read_enable_reg = DFFE(R1_ram_block1a4_PORT_A_read_enable, R1_ram_block1a4_clock_0, , , );
R1_ram_block1a4_clock_0 = i_clk;
R1_ram_block1a4_PORT_A_data_out = MEMORY(, , R1_ram_block1a4_PORT_A_address_reg, , , R1_ram_block1a4_PORT_A_read_enable_reg, , , , , R1_ram_block1a4_clock_0, , , , , , , );
R1_ram_block1a4 = R1_ram_block1a4_PORT_A_data_out[0];


--R1_ram_block1a5 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a5
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a5_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a5_PORT_A_address_reg = DFFE(R1_ram_block1a5_PORT_A_address, R1_ram_block1a5_clock_0, , , );
R1_ram_block1a5_PORT_A_read_enable = VCC;
R1_ram_block1a5_PORT_A_read_enable_reg = DFFE(R1_ram_block1a5_PORT_A_read_enable, R1_ram_block1a5_clock_0, , , );
R1_ram_block1a5_clock_0 = i_clk;
R1_ram_block1a5_PORT_A_data_out = MEMORY(, , R1_ram_block1a5_PORT_A_address_reg, , , R1_ram_block1a5_PORT_A_read_enable_reg, , , , , R1_ram_block1a5_clock_0, , , , , , , );
R1_ram_block1a5 = R1_ram_block1a5_PORT_A_data_out[0];


--R1_ram_block1a6 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a6
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a6_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a6_PORT_A_address_reg = DFFE(R1_ram_block1a6_PORT_A_address, R1_ram_block1a6_clock_0, , , );
R1_ram_block1a6_PORT_A_read_enable = VCC;
R1_ram_block1a6_PORT_A_read_enable_reg = DFFE(R1_ram_block1a6_PORT_A_read_enable, R1_ram_block1a6_clock_0, , , );
R1_ram_block1a6_clock_0 = i_clk;
R1_ram_block1a6_PORT_A_data_out = MEMORY(, , R1_ram_block1a6_PORT_A_address_reg, , , R1_ram_block1a6_PORT_A_read_enable_reg, , , , , R1_ram_block1a6_clock_0, , , , , , , );
R1_ram_block1a6 = R1_ram_block1a6_PORT_A_data_out[0];


--R1_ram_block1a7 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a7
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a7_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a7_PORT_A_address_reg = DFFE(R1_ram_block1a7_PORT_A_address, R1_ram_block1a7_clock_0, , , );
R1_ram_block1a7_PORT_A_read_enable = VCC;
R1_ram_block1a7_PORT_A_read_enable_reg = DFFE(R1_ram_block1a7_PORT_A_read_enable, R1_ram_block1a7_clock_0, , , );
R1_ram_block1a7_clock_0 = i_clk;
R1_ram_block1a7_PORT_A_data_out = MEMORY(, , R1_ram_block1a7_PORT_A_address_reg, , , R1_ram_block1a7_PORT_A_read_enable_reg, , , , , R1_ram_block1a7_clock_0, , , , , , , );
R1_ram_block1a7 = R1_ram_block1a7_PORT_A_data_out[0];


--R1_ram_block1a8 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a8
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a8_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a8_PORT_A_address_reg = DFFE(R1_ram_block1a8_PORT_A_address, R1_ram_block1a8_clock_0, , , );
R1_ram_block1a8_PORT_A_read_enable = VCC;
R1_ram_block1a8_PORT_A_read_enable_reg = DFFE(R1_ram_block1a8_PORT_A_read_enable, R1_ram_block1a8_clock_0, , , );
R1_ram_block1a8_clock_0 = i_clk;
R1_ram_block1a8_PORT_A_data_out = MEMORY(, , R1_ram_block1a8_PORT_A_address_reg, , , R1_ram_block1a8_PORT_A_read_enable_reg, , , , , R1_ram_block1a8_clock_0, , , , , , , );
R1_ram_block1a8 = R1_ram_block1a8_PORT_A_data_out[0];


--R1_ram_block1a9 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a9
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a9_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a9_PORT_A_address_reg = DFFE(R1_ram_block1a9_PORT_A_address, R1_ram_block1a9_clock_0, , , );
R1_ram_block1a9_PORT_A_read_enable = VCC;
R1_ram_block1a9_PORT_A_read_enable_reg = DFFE(R1_ram_block1a9_PORT_A_read_enable, R1_ram_block1a9_clock_0, , , );
R1_ram_block1a9_clock_0 = i_clk;
R1_ram_block1a9_PORT_A_data_out = MEMORY(, , R1_ram_block1a9_PORT_A_address_reg, , , R1_ram_block1a9_PORT_A_read_enable_reg, , , , , R1_ram_block1a9_clock_0, , , , , , , );
R1_ram_block1a9 = R1_ram_block1a9_PORT_A_data_out[0];


--R1_ram_block1a10 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a10
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a10_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a10_PORT_A_address_reg = DFFE(R1_ram_block1a10_PORT_A_address, R1_ram_block1a10_clock_0, , , );
R1_ram_block1a10_PORT_A_read_enable = VCC;
R1_ram_block1a10_PORT_A_read_enable_reg = DFFE(R1_ram_block1a10_PORT_A_read_enable, R1_ram_block1a10_clock_0, , , );
R1_ram_block1a10_clock_0 = i_clk;
R1_ram_block1a10_PORT_A_data_out = MEMORY(, , R1_ram_block1a10_PORT_A_address_reg, , , R1_ram_block1a10_PORT_A_read_enable_reg, , , , , R1_ram_block1a10_clock_0, , , , , , , );
R1_ram_block1a10 = R1_ram_block1a10_PORT_A_data_out[0];


--R1_ram_block1a11 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a11
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a11_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a11_PORT_A_address_reg = DFFE(R1_ram_block1a11_PORT_A_address, R1_ram_block1a11_clock_0, , , );
R1_ram_block1a11_PORT_A_read_enable = VCC;
R1_ram_block1a11_PORT_A_read_enable_reg = DFFE(R1_ram_block1a11_PORT_A_read_enable, R1_ram_block1a11_clock_0, , , );
R1_ram_block1a11_clock_0 = i_clk;
R1_ram_block1a11_PORT_A_data_out = MEMORY(, , R1_ram_block1a11_PORT_A_address_reg, , , R1_ram_block1a11_PORT_A_read_enable_reg, , , , , R1_ram_block1a11_clock_0, , , , , , , );
R1_ram_block1a11 = R1_ram_block1a11_PORT_A_data_out[0];


--R1_ram_block1a12 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a12
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a12_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a12_PORT_A_address_reg = DFFE(R1_ram_block1a12_PORT_A_address, R1_ram_block1a12_clock_0, , , );
R1_ram_block1a12_PORT_A_read_enable = VCC;
R1_ram_block1a12_PORT_A_read_enable_reg = DFFE(R1_ram_block1a12_PORT_A_read_enable, R1_ram_block1a12_clock_0, , , );
R1_ram_block1a12_clock_0 = i_clk;
R1_ram_block1a12_PORT_A_data_out = MEMORY(, , R1_ram_block1a12_PORT_A_address_reg, , , R1_ram_block1a12_PORT_A_read_enable_reg, , , , , R1_ram_block1a12_clock_0, , , , , , , );
R1_ram_block1a12 = R1_ram_block1a12_PORT_A_data_out[0];


--R1_ram_block1a13 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a13
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a13_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a13_PORT_A_address_reg = DFFE(R1_ram_block1a13_PORT_A_address, R1_ram_block1a13_clock_0, , , );
R1_ram_block1a13_PORT_A_read_enable = VCC;
R1_ram_block1a13_PORT_A_read_enable_reg = DFFE(R1_ram_block1a13_PORT_A_read_enable, R1_ram_block1a13_clock_0, , , );
R1_ram_block1a13_clock_0 = i_clk;
R1_ram_block1a13_PORT_A_data_out = MEMORY(, , R1_ram_block1a13_PORT_A_address_reg, , , R1_ram_block1a13_PORT_A_read_enable_reg, , , , , R1_ram_block1a13_clock_0, , , , , , , );
R1_ram_block1a13 = R1_ram_block1a13_PORT_A_data_out[0];


--R1_ram_block1a14 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a14
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a14_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a14_PORT_A_address_reg = DFFE(R1_ram_block1a14_PORT_A_address, R1_ram_block1a14_clock_0, , , );
R1_ram_block1a14_PORT_A_read_enable = VCC;
R1_ram_block1a14_PORT_A_read_enable_reg = DFFE(R1_ram_block1a14_PORT_A_read_enable, R1_ram_block1a14_clock_0, , , );
R1_ram_block1a14_clock_0 = i_clk;
R1_ram_block1a14_PORT_A_data_out = MEMORY(, , R1_ram_block1a14_PORT_A_address_reg, , , R1_ram_block1a14_PORT_A_read_enable_reg, , , , , R1_ram_block1a14_clock_0, , , , , , , );
R1_ram_block1a14 = R1_ram_block1a14_PORT_A_data_out[0];


--R1_ram_block1a15 is neuron_l1_n1:n1|ram_l1_n1:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_va71:auto_generated|ram_block1a15
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
R1_ram_block1a15_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
R1_ram_block1a15_PORT_A_address_reg = DFFE(R1_ram_block1a15_PORT_A_address, R1_ram_block1a15_clock_0, , , );
R1_ram_block1a15_PORT_A_read_enable = VCC;
R1_ram_block1a15_PORT_A_read_enable_reg = DFFE(R1_ram_block1a15_PORT_A_read_enable, R1_ram_block1a15_clock_0, , , );
R1_ram_block1a15_clock_0 = i_clk;
R1_ram_block1a15_PORT_A_data_out = MEMORY(, , R1_ram_block1a15_PORT_A_address_reg, , , R1_ram_block1a15_PORT_A_read_enable_reg, , , , , R1_ram_block1a15_clock_0, , , , , , , );
R1_ram_block1a15 = R1_ram_block1a15_PORT_A_data_out[0];


--T1_ram_block1a0 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a0
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a0_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a0_PORT_A_address_reg = DFFE(T1_ram_block1a0_PORT_A_address, T1_ram_block1a0_clock_0, , , );
T1_ram_block1a0_PORT_A_read_enable = VCC;
T1_ram_block1a0_PORT_A_read_enable_reg = DFFE(T1_ram_block1a0_PORT_A_read_enable, T1_ram_block1a0_clock_0, , , );
T1_ram_block1a0_clock_0 = i_clk;
T1_ram_block1a0_PORT_A_data_out = MEMORY(, , T1_ram_block1a0_PORT_A_address_reg, , , T1_ram_block1a0_PORT_A_read_enable_reg, , , , , T1_ram_block1a0_clock_0, , , , , , , );
T1_ram_block1a0 = T1_ram_block1a0_PORT_A_data_out[0];


--T1_ram_block1a1 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a1
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a1_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a1_PORT_A_address_reg = DFFE(T1_ram_block1a1_PORT_A_address, T1_ram_block1a1_clock_0, , , );
T1_ram_block1a1_PORT_A_read_enable = VCC;
T1_ram_block1a1_PORT_A_read_enable_reg = DFFE(T1_ram_block1a1_PORT_A_read_enable, T1_ram_block1a1_clock_0, , , );
T1_ram_block1a1_clock_0 = i_clk;
T1_ram_block1a1_PORT_A_data_out = MEMORY(, , T1_ram_block1a1_PORT_A_address_reg, , , T1_ram_block1a1_PORT_A_read_enable_reg, , , , , T1_ram_block1a1_clock_0, , , , , , , );
T1_ram_block1a1 = T1_ram_block1a1_PORT_A_data_out[0];


--T1_ram_block1a2 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a2
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a2_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a2_PORT_A_address_reg = DFFE(T1_ram_block1a2_PORT_A_address, T1_ram_block1a2_clock_0, , , );
T1_ram_block1a2_PORT_A_read_enable = VCC;
T1_ram_block1a2_PORT_A_read_enable_reg = DFFE(T1_ram_block1a2_PORT_A_read_enable, T1_ram_block1a2_clock_0, , , );
T1_ram_block1a2_clock_0 = i_clk;
T1_ram_block1a2_PORT_A_data_out = MEMORY(, , T1_ram_block1a2_PORT_A_address_reg, , , T1_ram_block1a2_PORT_A_read_enable_reg, , , , , T1_ram_block1a2_clock_0, , , , , , , );
T1_ram_block1a2 = T1_ram_block1a2_PORT_A_data_out[0];


--T1_ram_block1a3 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a3
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a3_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a3_PORT_A_address_reg = DFFE(T1_ram_block1a3_PORT_A_address, T1_ram_block1a3_clock_0, , , );
T1_ram_block1a3_PORT_A_read_enable = VCC;
T1_ram_block1a3_PORT_A_read_enable_reg = DFFE(T1_ram_block1a3_PORT_A_read_enable, T1_ram_block1a3_clock_0, , , );
T1_ram_block1a3_clock_0 = i_clk;
T1_ram_block1a3_PORT_A_data_out = MEMORY(, , T1_ram_block1a3_PORT_A_address_reg, , , T1_ram_block1a3_PORT_A_read_enable_reg, , , , , T1_ram_block1a3_clock_0, , , , , , , );
T1_ram_block1a3 = T1_ram_block1a3_PORT_A_data_out[0];


--T1_ram_block1a4 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a4
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a4_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a4_PORT_A_address_reg = DFFE(T1_ram_block1a4_PORT_A_address, T1_ram_block1a4_clock_0, , , );
T1_ram_block1a4_PORT_A_read_enable = VCC;
T1_ram_block1a4_PORT_A_read_enable_reg = DFFE(T1_ram_block1a4_PORT_A_read_enable, T1_ram_block1a4_clock_0, , , );
T1_ram_block1a4_clock_0 = i_clk;
T1_ram_block1a4_PORT_A_data_out = MEMORY(, , T1_ram_block1a4_PORT_A_address_reg, , , T1_ram_block1a4_PORT_A_read_enable_reg, , , , , T1_ram_block1a4_clock_0, , , , , , , );
T1_ram_block1a4 = T1_ram_block1a4_PORT_A_data_out[0];


--T1_ram_block1a5 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a5
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a5_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a5_PORT_A_address_reg = DFFE(T1_ram_block1a5_PORT_A_address, T1_ram_block1a5_clock_0, , , );
T1_ram_block1a5_PORT_A_read_enable = VCC;
T1_ram_block1a5_PORT_A_read_enable_reg = DFFE(T1_ram_block1a5_PORT_A_read_enable, T1_ram_block1a5_clock_0, , , );
T1_ram_block1a5_clock_0 = i_clk;
T1_ram_block1a5_PORT_A_data_out = MEMORY(, , T1_ram_block1a5_PORT_A_address_reg, , , T1_ram_block1a5_PORT_A_read_enable_reg, , , , , T1_ram_block1a5_clock_0, , , , , , , );
T1_ram_block1a5 = T1_ram_block1a5_PORT_A_data_out[0];


--T1_ram_block1a6 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a6
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a6_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a6_PORT_A_address_reg = DFFE(T1_ram_block1a6_PORT_A_address, T1_ram_block1a6_clock_0, , , );
T1_ram_block1a6_PORT_A_read_enable = VCC;
T1_ram_block1a6_PORT_A_read_enable_reg = DFFE(T1_ram_block1a6_PORT_A_read_enable, T1_ram_block1a6_clock_0, , , );
T1_ram_block1a6_clock_0 = i_clk;
T1_ram_block1a6_PORT_A_data_out = MEMORY(, , T1_ram_block1a6_PORT_A_address_reg, , , T1_ram_block1a6_PORT_A_read_enable_reg, , , , , T1_ram_block1a6_clock_0, , , , , , , );
T1_ram_block1a6 = T1_ram_block1a6_PORT_A_data_out[0];


--T1_ram_block1a7 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a7
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a7_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a7_PORT_A_address_reg = DFFE(T1_ram_block1a7_PORT_A_address, T1_ram_block1a7_clock_0, , , );
T1_ram_block1a7_PORT_A_read_enable = VCC;
T1_ram_block1a7_PORT_A_read_enable_reg = DFFE(T1_ram_block1a7_PORT_A_read_enable, T1_ram_block1a7_clock_0, , , );
T1_ram_block1a7_clock_0 = i_clk;
T1_ram_block1a7_PORT_A_data_out = MEMORY(, , T1_ram_block1a7_PORT_A_address_reg, , , T1_ram_block1a7_PORT_A_read_enable_reg, , , , , T1_ram_block1a7_clock_0, , , , , , , );
T1_ram_block1a7 = T1_ram_block1a7_PORT_A_data_out[0];


--T1_ram_block1a8 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a8
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a8_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a8_PORT_A_address_reg = DFFE(T1_ram_block1a8_PORT_A_address, T1_ram_block1a8_clock_0, , , );
T1_ram_block1a8_PORT_A_read_enable = VCC;
T1_ram_block1a8_PORT_A_read_enable_reg = DFFE(T1_ram_block1a8_PORT_A_read_enable, T1_ram_block1a8_clock_0, , , );
T1_ram_block1a8_clock_0 = i_clk;
T1_ram_block1a8_PORT_A_data_out = MEMORY(, , T1_ram_block1a8_PORT_A_address_reg, , , T1_ram_block1a8_PORT_A_read_enable_reg, , , , , T1_ram_block1a8_clock_0, , , , , , , );
T1_ram_block1a8 = T1_ram_block1a8_PORT_A_data_out[0];


--T1_ram_block1a9 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a9
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a9_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a9_PORT_A_address_reg = DFFE(T1_ram_block1a9_PORT_A_address, T1_ram_block1a9_clock_0, , , );
T1_ram_block1a9_PORT_A_read_enable = VCC;
T1_ram_block1a9_PORT_A_read_enable_reg = DFFE(T1_ram_block1a9_PORT_A_read_enable, T1_ram_block1a9_clock_0, , , );
T1_ram_block1a9_clock_0 = i_clk;
T1_ram_block1a9_PORT_A_data_out = MEMORY(, , T1_ram_block1a9_PORT_A_address_reg, , , T1_ram_block1a9_PORT_A_read_enable_reg, , , , , T1_ram_block1a9_clock_0, , , , , , , );
T1_ram_block1a9 = T1_ram_block1a9_PORT_A_data_out[0];


--T1_ram_block1a10 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a10
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a10_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a10_PORT_A_address_reg = DFFE(T1_ram_block1a10_PORT_A_address, T1_ram_block1a10_clock_0, , , );
T1_ram_block1a10_PORT_A_read_enable = VCC;
T1_ram_block1a10_PORT_A_read_enable_reg = DFFE(T1_ram_block1a10_PORT_A_read_enable, T1_ram_block1a10_clock_0, , , );
T1_ram_block1a10_clock_0 = i_clk;
T1_ram_block1a10_PORT_A_data_out = MEMORY(, , T1_ram_block1a10_PORT_A_address_reg, , , T1_ram_block1a10_PORT_A_read_enable_reg, , , , , T1_ram_block1a10_clock_0, , , , , , , );
T1_ram_block1a10 = T1_ram_block1a10_PORT_A_data_out[0];


--T1_ram_block1a11 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a11
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a11_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a11_PORT_A_address_reg = DFFE(T1_ram_block1a11_PORT_A_address, T1_ram_block1a11_clock_0, , , );
T1_ram_block1a11_PORT_A_read_enable = VCC;
T1_ram_block1a11_PORT_A_read_enable_reg = DFFE(T1_ram_block1a11_PORT_A_read_enable, T1_ram_block1a11_clock_0, , , );
T1_ram_block1a11_clock_0 = i_clk;
T1_ram_block1a11_PORT_A_data_out = MEMORY(, , T1_ram_block1a11_PORT_A_address_reg, , , T1_ram_block1a11_PORT_A_read_enable_reg, , , , , T1_ram_block1a11_clock_0, , , , , , , );
T1_ram_block1a11 = T1_ram_block1a11_PORT_A_data_out[0];


--T1_ram_block1a12 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a12
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a12_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a12_PORT_A_address_reg = DFFE(T1_ram_block1a12_PORT_A_address, T1_ram_block1a12_clock_0, , , );
T1_ram_block1a12_PORT_A_read_enable = VCC;
T1_ram_block1a12_PORT_A_read_enable_reg = DFFE(T1_ram_block1a12_PORT_A_read_enable, T1_ram_block1a12_clock_0, , , );
T1_ram_block1a12_clock_0 = i_clk;
T1_ram_block1a12_PORT_A_data_out = MEMORY(, , T1_ram_block1a12_PORT_A_address_reg, , , T1_ram_block1a12_PORT_A_read_enable_reg, , , , , T1_ram_block1a12_clock_0, , , , , , , );
T1_ram_block1a12 = T1_ram_block1a12_PORT_A_data_out[0];


--T1_ram_block1a13 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a13
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a13_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a13_PORT_A_address_reg = DFFE(T1_ram_block1a13_PORT_A_address, T1_ram_block1a13_clock_0, , , );
T1_ram_block1a13_PORT_A_read_enable = VCC;
T1_ram_block1a13_PORT_A_read_enable_reg = DFFE(T1_ram_block1a13_PORT_A_read_enable, T1_ram_block1a13_clock_0, , , );
T1_ram_block1a13_clock_0 = i_clk;
T1_ram_block1a13_PORT_A_data_out = MEMORY(, , T1_ram_block1a13_PORT_A_address_reg, , , T1_ram_block1a13_PORT_A_read_enable_reg, , , , , T1_ram_block1a13_clock_0, , , , , , , );
T1_ram_block1a13 = T1_ram_block1a13_PORT_A_data_out[0];


--T1_ram_block1a14 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a14
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a14_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a14_PORT_A_address_reg = DFFE(T1_ram_block1a14_PORT_A_address, T1_ram_block1a14_clock_0, , , );
T1_ram_block1a14_PORT_A_read_enable = VCC;
T1_ram_block1a14_PORT_A_read_enable_reg = DFFE(T1_ram_block1a14_PORT_A_read_enable, T1_ram_block1a14_clock_0, , , );
T1_ram_block1a14_clock_0 = i_clk;
T1_ram_block1a14_PORT_A_data_out = MEMORY(, , T1_ram_block1a14_PORT_A_address_reg, , , T1_ram_block1a14_PORT_A_read_enable_reg, , , , , T1_ram_block1a14_clock_0, , , , , , , );
T1_ram_block1a14 = T1_ram_block1a14_PORT_A_data_out[0];


--T1_ram_block1a15 is neuron_l1_n2:n2|ram_l1_n2:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_td71:auto_generated|ram_block1a15
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
T1_ram_block1a15_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
T1_ram_block1a15_PORT_A_address_reg = DFFE(T1_ram_block1a15_PORT_A_address, T1_ram_block1a15_clock_0, , , );
T1_ram_block1a15_PORT_A_read_enable = VCC;
T1_ram_block1a15_PORT_A_read_enable_reg = DFFE(T1_ram_block1a15_PORT_A_read_enable, T1_ram_block1a15_clock_0, , , );
T1_ram_block1a15_clock_0 = i_clk;
T1_ram_block1a15_PORT_A_data_out = MEMORY(, , T1_ram_block1a15_PORT_A_address_reg, , , T1_ram_block1a15_PORT_A_read_enable_reg, , , , , T1_ram_block1a15_clock_0, , , , , , , );
T1_ram_block1a15 = T1_ram_block1a15_PORT_A_data_out[0];


--V1_ram_block1a0 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a0
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a0_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a0_PORT_A_address_reg = DFFE(V1_ram_block1a0_PORT_A_address, V1_ram_block1a0_clock_0, , , );
V1_ram_block1a0_PORT_A_read_enable = VCC;
V1_ram_block1a0_PORT_A_read_enable_reg = DFFE(V1_ram_block1a0_PORT_A_read_enable, V1_ram_block1a0_clock_0, , , );
V1_ram_block1a0_clock_0 = i_clk;
V1_ram_block1a0_PORT_A_data_out = MEMORY(, , V1_ram_block1a0_PORT_A_address_reg, , , V1_ram_block1a0_PORT_A_read_enable_reg, , , , , V1_ram_block1a0_clock_0, , , , , , , );
V1_ram_block1a0 = V1_ram_block1a0_PORT_A_data_out[0];


--V1_ram_block1a1 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a1
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a1_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a1_PORT_A_address_reg = DFFE(V1_ram_block1a1_PORT_A_address, V1_ram_block1a1_clock_0, , , );
V1_ram_block1a1_PORT_A_read_enable = VCC;
V1_ram_block1a1_PORT_A_read_enable_reg = DFFE(V1_ram_block1a1_PORT_A_read_enable, V1_ram_block1a1_clock_0, , , );
V1_ram_block1a1_clock_0 = i_clk;
V1_ram_block1a1_PORT_A_data_out = MEMORY(, , V1_ram_block1a1_PORT_A_address_reg, , , V1_ram_block1a1_PORT_A_read_enable_reg, , , , , V1_ram_block1a1_clock_0, , , , , , , );
V1_ram_block1a1 = V1_ram_block1a1_PORT_A_data_out[0];


--V1_ram_block1a2 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a2
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a2_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a2_PORT_A_address_reg = DFFE(V1_ram_block1a2_PORT_A_address, V1_ram_block1a2_clock_0, , , );
V1_ram_block1a2_PORT_A_read_enable = VCC;
V1_ram_block1a2_PORT_A_read_enable_reg = DFFE(V1_ram_block1a2_PORT_A_read_enable, V1_ram_block1a2_clock_0, , , );
V1_ram_block1a2_clock_0 = i_clk;
V1_ram_block1a2_PORT_A_data_out = MEMORY(, , V1_ram_block1a2_PORT_A_address_reg, , , V1_ram_block1a2_PORT_A_read_enable_reg, , , , , V1_ram_block1a2_clock_0, , , , , , , );
V1_ram_block1a2 = V1_ram_block1a2_PORT_A_data_out[0];


--V1_ram_block1a3 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a3
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a3_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a3_PORT_A_address_reg = DFFE(V1_ram_block1a3_PORT_A_address, V1_ram_block1a3_clock_0, , , );
V1_ram_block1a3_PORT_A_read_enable = VCC;
V1_ram_block1a3_PORT_A_read_enable_reg = DFFE(V1_ram_block1a3_PORT_A_read_enable, V1_ram_block1a3_clock_0, , , );
V1_ram_block1a3_clock_0 = i_clk;
V1_ram_block1a3_PORT_A_data_out = MEMORY(, , V1_ram_block1a3_PORT_A_address_reg, , , V1_ram_block1a3_PORT_A_read_enable_reg, , , , , V1_ram_block1a3_clock_0, , , , , , , );
V1_ram_block1a3 = V1_ram_block1a3_PORT_A_data_out[0];


--V1_ram_block1a4 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a4
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a4_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a4_PORT_A_address_reg = DFFE(V1_ram_block1a4_PORT_A_address, V1_ram_block1a4_clock_0, , , );
V1_ram_block1a4_PORT_A_read_enable = VCC;
V1_ram_block1a4_PORT_A_read_enable_reg = DFFE(V1_ram_block1a4_PORT_A_read_enable, V1_ram_block1a4_clock_0, , , );
V1_ram_block1a4_clock_0 = i_clk;
V1_ram_block1a4_PORT_A_data_out = MEMORY(, , V1_ram_block1a4_PORT_A_address_reg, , , V1_ram_block1a4_PORT_A_read_enable_reg, , , , , V1_ram_block1a4_clock_0, , , , , , , );
V1_ram_block1a4 = V1_ram_block1a4_PORT_A_data_out[0];


--V1_ram_block1a5 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a5
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a5_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a5_PORT_A_address_reg = DFFE(V1_ram_block1a5_PORT_A_address, V1_ram_block1a5_clock_0, , , );
V1_ram_block1a5_PORT_A_read_enable = VCC;
V1_ram_block1a5_PORT_A_read_enable_reg = DFFE(V1_ram_block1a5_PORT_A_read_enable, V1_ram_block1a5_clock_0, , , );
V1_ram_block1a5_clock_0 = i_clk;
V1_ram_block1a5_PORT_A_data_out = MEMORY(, , V1_ram_block1a5_PORT_A_address_reg, , , V1_ram_block1a5_PORT_A_read_enable_reg, , , , , V1_ram_block1a5_clock_0, , , , , , , );
V1_ram_block1a5 = V1_ram_block1a5_PORT_A_data_out[0];


--V1_ram_block1a6 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a6
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a6_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a6_PORT_A_address_reg = DFFE(V1_ram_block1a6_PORT_A_address, V1_ram_block1a6_clock_0, , , );
V1_ram_block1a6_PORT_A_read_enable = VCC;
V1_ram_block1a6_PORT_A_read_enable_reg = DFFE(V1_ram_block1a6_PORT_A_read_enable, V1_ram_block1a6_clock_0, , , );
V1_ram_block1a6_clock_0 = i_clk;
V1_ram_block1a6_PORT_A_data_out = MEMORY(, , V1_ram_block1a6_PORT_A_address_reg, , , V1_ram_block1a6_PORT_A_read_enable_reg, , , , , V1_ram_block1a6_clock_0, , , , , , , );
V1_ram_block1a6 = V1_ram_block1a6_PORT_A_data_out[0];


--V1_ram_block1a7 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a7
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a7_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a7_PORT_A_address_reg = DFFE(V1_ram_block1a7_PORT_A_address, V1_ram_block1a7_clock_0, , , );
V1_ram_block1a7_PORT_A_read_enable = VCC;
V1_ram_block1a7_PORT_A_read_enable_reg = DFFE(V1_ram_block1a7_PORT_A_read_enable, V1_ram_block1a7_clock_0, , , );
V1_ram_block1a7_clock_0 = i_clk;
V1_ram_block1a7_PORT_A_data_out = MEMORY(, , V1_ram_block1a7_PORT_A_address_reg, , , V1_ram_block1a7_PORT_A_read_enable_reg, , , , , V1_ram_block1a7_clock_0, , , , , , , );
V1_ram_block1a7 = V1_ram_block1a7_PORT_A_data_out[0];


--V1_ram_block1a8 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a8
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a8_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a8_PORT_A_address_reg = DFFE(V1_ram_block1a8_PORT_A_address, V1_ram_block1a8_clock_0, , , );
V1_ram_block1a8_PORT_A_read_enable = VCC;
V1_ram_block1a8_PORT_A_read_enable_reg = DFFE(V1_ram_block1a8_PORT_A_read_enable, V1_ram_block1a8_clock_0, , , );
V1_ram_block1a8_clock_0 = i_clk;
V1_ram_block1a8_PORT_A_data_out = MEMORY(, , V1_ram_block1a8_PORT_A_address_reg, , , V1_ram_block1a8_PORT_A_read_enable_reg, , , , , V1_ram_block1a8_clock_0, , , , , , , );
V1_ram_block1a8 = V1_ram_block1a8_PORT_A_data_out[0];


--V1_ram_block1a9 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a9
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a9_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a9_PORT_A_address_reg = DFFE(V1_ram_block1a9_PORT_A_address, V1_ram_block1a9_clock_0, , , );
V1_ram_block1a9_PORT_A_read_enable = VCC;
V1_ram_block1a9_PORT_A_read_enable_reg = DFFE(V1_ram_block1a9_PORT_A_read_enable, V1_ram_block1a9_clock_0, , , );
V1_ram_block1a9_clock_0 = i_clk;
V1_ram_block1a9_PORT_A_data_out = MEMORY(, , V1_ram_block1a9_PORT_A_address_reg, , , V1_ram_block1a9_PORT_A_read_enable_reg, , , , , V1_ram_block1a9_clock_0, , , , , , , );
V1_ram_block1a9 = V1_ram_block1a9_PORT_A_data_out[0];


--V1_ram_block1a10 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a10
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a10_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a10_PORT_A_address_reg = DFFE(V1_ram_block1a10_PORT_A_address, V1_ram_block1a10_clock_0, , , );
V1_ram_block1a10_PORT_A_read_enable = VCC;
V1_ram_block1a10_PORT_A_read_enable_reg = DFFE(V1_ram_block1a10_PORT_A_read_enable, V1_ram_block1a10_clock_0, , , );
V1_ram_block1a10_clock_0 = i_clk;
V1_ram_block1a10_PORT_A_data_out = MEMORY(, , V1_ram_block1a10_PORT_A_address_reg, , , V1_ram_block1a10_PORT_A_read_enable_reg, , , , , V1_ram_block1a10_clock_0, , , , , , , );
V1_ram_block1a10 = V1_ram_block1a10_PORT_A_data_out[0];


--V1_ram_block1a11 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a11
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a11_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a11_PORT_A_address_reg = DFFE(V1_ram_block1a11_PORT_A_address, V1_ram_block1a11_clock_0, , , );
V1_ram_block1a11_PORT_A_read_enable = VCC;
V1_ram_block1a11_PORT_A_read_enable_reg = DFFE(V1_ram_block1a11_PORT_A_read_enable, V1_ram_block1a11_clock_0, , , );
V1_ram_block1a11_clock_0 = i_clk;
V1_ram_block1a11_PORT_A_data_out = MEMORY(, , V1_ram_block1a11_PORT_A_address_reg, , , V1_ram_block1a11_PORT_A_read_enable_reg, , , , , V1_ram_block1a11_clock_0, , , , , , , );
V1_ram_block1a11 = V1_ram_block1a11_PORT_A_data_out[0];


--V1_ram_block1a12 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a12
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a12_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a12_PORT_A_address_reg = DFFE(V1_ram_block1a12_PORT_A_address, V1_ram_block1a12_clock_0, , , );
V1_ram_block1a12_PORT_A_read_enable = VCC;
V1_ram_block1a12_PORT_A_read_enable_reg = DFFE(V1_ram_block1a12_PORT_A_read_enable, V1_ram_block1a12_clock_0, , , );
V1_ram_block1a12_clock_0 = i_clk;
V1_ram_block1a12_PORT_A_data_out = MEMORY(, , V1_ram_block1a12_PORT_A_address_reg, , , V1_ram_block1a12_PORT_A_read_enable_reg, , , , , V1_ram_block1a12_clock_0, , , , , , , );
V1_ram_block1a12 = V1_ram_block1a12_PORT_A_data_out[0];


--V1_ram_block1a13 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a13
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a13_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a13_PORT_A_address_reg = DFFE(V1_ram_block1a13_PORT_A_address, V1_ram_block1a13_clock_0, , , );
V1_ram_block1a13_PORT_A_read_enable = VCC;
V1_ram_block1a13_PORT_A_read_enable_reg = DFFE(V1_ram_block1a13_PORT_A_read_enable, V1_ram_block1a13_clock_0, , , );
V1_ram_block1a13_clock_0 = i_clk;
V1_ram_block1a13_PORT_A_data_out = MEMORY(, , V1_ram_block1a13_PORT_A_address_reg, , , V1_ram_block1a13_PORT_A_read_enable_reg, , , , , V1_ram_block1a13_clock_0, , , , , , , );
V1_ram_block1a13 = V1_ram_block1a13_PORT_A_data_out[0];


--V1_ram_block1a14 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a14
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a14_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a14_PORT_A_address_reg = DFFE(V1_ram_block1a14_PORT_A_address, V1_ram_block1a14_clock_0, , , );
V1_ram_block1a14_PORT_A_read_enable = VCC;
V1_ram_block1a14_PORT_A_read_enable_reg = DFFE(V1_ram_block1a14_PORT_A_read_enable, V1_ram_block1a14_clock_0, , , );
V1_ram_block1a14_clock_0 = i_clk;
V1_ram_block1a14_PORT_A_data_out = MEMORY(, , V1_ram_block1a14_PORT_A_address_reg, , , V1_ram_block1a14_PORT_A_read_enable_reg, , , , , V1_ram_block1a14_clock_0, , , , , , , );
V1_ram_block1a14 = V1_ram_block1a14_PORT_A_data_out[0];


--V1_ram_block1a15 is neuron_l1_n3:n3|ram_l1_n3:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_d871:auto_generated|ram_block1a15
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
V1_ram_block1a15_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
V1_ram_block1a15_PORT_A_address_reg = DFFE(V1_ram_block1a15_PORT_A_address, V1_ram_block1a15_clock_0, , , );
V1_ram_block1a15_PORT_A_read_enable = VCC;
V1_ram_block1a15_PORT_A_read_enable_reg = DFFE(V1_ram_block1a15_PORT_A_read_enable, V1_ram_block1a15_clock_0, , , );
V1_ram_block1a15_clock_0 = i_clk;
V1_ram_block1a15_PORT_A_data_out = MEMORY(, , V1_ram_block1a15_PORT_A_address_reg, , , V1_ram_block1a15_PORT_A_read_enable_reg, , , , , V1_ram_block1a15_clock_0, , , , , , , );
V1_ram_block1a15 = V1_ram_block1a15_PORT_A_data_out[0];


--X1_ram_block1a0 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a0
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a0_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a0_PORT_A_address_reg = DFFE(X1_ram_block1a0_PORT_A_address, X1_ram_block1a0_clock_0, , , );
X1_ram_block1a0_PORT_A_read_enable = VCC;
X1_ram_block1a0_PORT_A_read_enable_reg = DFFE(X1_ram_block1a0_PORT_A_read_enable, X1_ram_block1a0_clock_0, , , );
X1_ram_block1a0_clock_0 = i_clk;
X1_ram_block1a0_PORT_A_data_out = MEMORY(, , X1_ram_block1a0_PORT_A_address_reg, , , X1_ram_block1a0_PORT_A_read_enable_reg, , , , , X1_ram_block1a0_clock_0, , , , , , , );
X1_ram_block1a0 = X1_ram_block1a0_PORT_A_data_out[0];


--X1_ram_block1a1 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a1
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a1_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a1_PORT_A_address_reg = DFFE(X1_ram_block1a1_PORT_A_address, X1_ram_block1a1_clock_0, , , );
X1_ram_block1a1_PORT_A_read_enable = VCC;
X1_ram_block1a1_PORT_A_read_enable_reg = DFFE(X1_ram_block1a1_PORT_A_read_enable, X1_ram_block1a1_clock_0, , , );
X1_ram_block1a1_clock_0 = i_clk;
X1_ram_block1a1_PORT_A_data_out = MEMORY(, , X1_ram_block1a1_PORT_A_address_reg, , , X1_ram_block1a1_PORT_A_read_enable_reg, , , , , X1_ram_block1a1_clock_0, , , , , , , );
X1_ram_block1a1 = X1_ram_block1a1_PORT_A_data_out[0];


--X1_ram_block1a2 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a2
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a2_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a2_PORT_A_address_reg = DFFE(X1_ram_block1a2_PORT_A_address, X1_ram_block1a2_clock_0, , , );
X1_ram_block1a2_PORT_A_read_enable = VCC;
X1_ram_block1a2_PORT_A_read_enable_reg = DFFE(X1_ram_block1a2_PORT_A_read_enable, X1_ram_block1a2_clock_0, , , );
X1_ram_block1a2_clock_0 = i_clk;
X1_ram_block1a2_PORT_A_data_out = MEMORY(, , X1_ram_block1a2_PORT_A_address_reg, , , X1_ram_block1a2_PORT_A_read_enable_reg, , , , , X1_ram_block1a2_clock_0, , , , , , , );
X1_ram_block1a2 = X1_ram_block1a2_PORT_A_data_out[0];


--X1_ram_block1a3 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a3
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a3_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a3_PORT_A_address_reg = DFFE(X1_ram_block1a3_PORT_A_address, X1_ram_block1a3_clock_0, , , );
X1_ram_block1a3_PORT_A_read_enable = VCC;
X1_ram_block1a3_PORT_A_read_enable_reg = DFFE(X1_ram_block1a3_PORT_A_read_enable, X1_ram_block1a3_clock_0, , , );
X1_ram_block1a3_clock_0 = i_clk;
X1_ram_block1a3_PORT_A_data_out = MEMORY(, , X1_ram_block1a3_PORT_A_address_reg, , , X1_ram_block1a3_PORT_A_read_enable_reg, , , , , X1_ram_block1a3_clock_0, , , , , , , );
X1_ram_block1a3 = X1_ram_block1a3_PORT_A_data_out[0];


--X1_ram_block1a4 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a4
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a4_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a4_PORT_A_address_reg = DFFE(X1_ram_block1a4_PORT_A_address, X1_ram_block1a4_clock_0, , , );
X1_ram_block1a4_PORT_A_read_enable = VCC;
X1_ram_block1a4_PORT_A_read_enable_reg = DFFE(X1_ram_block1a4_PORT_A_read_enable, X1_ram_block1a4_clock_0, , , );
X1_ram_block1a4_clock_0 = i_clk;
X1_ram_block1a4_PORT_A_data_out = MEMORY(, , X1_ram_block1a4_PORT_A_address_reg, , , X1_ram_block1a4_PORT_A_read_enable_reg, , , , , X1_ram_block1a4_clock_0, , , , , , , );
X1_ram_block1a4 = X1_ram_block1a4_PORT_A_data_out[0];


--X1_ram_block1a5 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a5
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a5_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a5_PORT_A_address_reg = DFFE(X1_ram_block1a5_PORT_A_address, X1_ram_block1a5_clock_0, , , );
X1_ram_block1a5_PORT_A_read_enable = VCC;
X1_ram_block1a5_PORT_A_read_enable_reg = DFFE(X1_ram_block1a5_PORT_A_read_enable, X1_ram_block1a5_clock_0, , , );
X1_ram_block1a5_clock_0 = i_clk;
X1_ram_block1a5_PORT_A_data_out = MEMORY(, , X1_ram_block1a5_PORT_A_address_reg, , , X1_ram_block1a5_PORT_A_read_enable_reg, , , , , X1_ram_block1a5_clock_0, , , , , , , );
X1_ram_block1a5 = X1_ram_block1a5_PORT_A_data_out[0];


--X1_ram_block1a6 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a6
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a6_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a6_PORT_A_address_reg = DFFE(X1_ram_block1a6_PORT_A_address, X1_ram_block1a6_clock_0, , , );
X1_ram_block1a6_PORT_A_read_enable = VCC;
X1_ram_block1a6_PORT_A_read_enable_reg = DFFE(X1_ram_block1a6_PORT_A_read_enable, X1_ram_block1a6_clock_0, , , );
X1_ram_block1a6_clock_0 = i_clk;
X1_ram_block1a6_PORT_A_data_out = MEMORY(, , X1_ram_block1a6_PORT_A_address_reg, , , X1_ram_block1a6_PORT_A_read_enable_reg, , , , , X1_ram_block1a6_clock_0, , , , , , , );
X1_ram_block1a6 = X1_ram_block1a6_PORT_A_data_out[0];


--X1_ram_block1a7 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a7
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a7_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a7_PORT_A_address_reg = DFFE(X1_ram_block1a7_PORT_A_address, X1_ram_block1a7_clock_0, , , );
X1_ram_block1a7_PORT_A_read_enable = VCC;
X1_ram_block1a7_PORT_A_read_enable_reg = DFFE(X1_ram_block1a7_PORT_A_read_enable, X1_ram_block1a7_clock_0, , , );
X1_ram_block1a7_clock_0 = i_clk;
X1_ram_block1a7_PORT_A_data_out = MEMORY(, , X1_ram_block1a7_PORT_A_address_reg, , , X1_ram_block1a7_PORT_A_read_enable_reg, , , , , X1_ram_block1a7_clock_0, , , , , , , );
X1_ram_block1a7 = X1_ram_block1a7_PORT_A_data_out[0];


--X1_ram_block1a8 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a8
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a8_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a8_PORT_A_address_reg = DFFE(X1_ram_block1a8_PORT_A_address, X1_ram_block1a8_clock_0, , , );
X1_ram_block1a8_PORT_A_read_enable = VCC;
X1_ram_block1a8_PORT_A_read_enable_reg = DFFE(X1_ram_block1a8_PORT_A_read_enable, X1_ram_block1a8_clock_0, , , );
X1_ram_block1a8_clock_0 = i_clk;
X1_ram_block1a8_PORT_A_data_out = MEMORY(, , X1_ram_block1a8_PORT_A_address_reg, , , X1_ram_block1a8_PORT_A_read_enable_reg, , , , , X1_ram_block1a8_clock_0, , , , , , , );
X1_ram_block1a8 = X1_ram_block1a8_PORT_A_data_out[0];


--X1_ram_block1a9 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a9
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a9_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a9_PORT_A_address_reg = DFFE(X1_ram_block1a9_PORT_A_address, X1_ram_block1a9_clock_0, , , );
X1_ram_block1a9_PORT_A_read_enable = VCC;
X1_ram_block1a9_PORT_A_read_enable_reg = DFFE(X1_ram_block1a9_PORT_A_read_enable, X1_ram_block1a9_clock_0, , , );
X1_ram_block1a9_clock_0 = i_clk;
X1_ram_block1a9_PORT_A_data_out = MEMORY(, , X1_ram_block1a9_PORT_A_address_reg, , , X1_ram_block1a9_PORT_A_read_enable_reg, , , , , X1_ram_block1a9_clock_0, , , , , , , );
X1_ram_block1a9 = X1_ram_block1a9_PORT_A_data_out[0];


--X1_ram_block1a10 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a10
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a10_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a10_PORT_A_address_reg = DFFE(X1_ram_block1a10_PORT_A_address, X1_ram_block1a10_clock_0, , , );
X1_ram_block1a10_PORT_A_read_enable = VCC;
X1_ram_block1a10_PORT_A_read_enable_reg = DFFE(X1_ram_block1a10_PORT_A_read_enable, X1_ram_block1a10_clock_0, , , );
X1_ram_block1a10_clock_0 = i_clk;
X1_ram_block1a10_PORT_A_data_out = MEMORY(, , X1_ram_block1a10_PORT_A_address_reg, , , X1_ram_block1a10_PORT_A_read_enable_reg, , , , , X1_ram_block1a10_clock_0, , , , , , , );
X1_ram_block1a10 = X1_ram_block1a10_PORT_A_data_out[0];


--X1_ram_block1a11 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a11
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a11_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a11_PORT_A_address_reg = DFFE(X1_ram_block1a11_PORT_A_address, X1_ram_block1a11_clock_0, , , );
X1_ram_block1a11_PORT_A_read_enable = VCC;
X1_ram_block1a11_PORT_A_read_enable_reg = DFFE(X1_ram_block1a11_PORT_A_read_enable, X1_ram_block1a11_clock_0, , , );
X1_ram_block1a11_clock_0 = i_clk;
X1_ram_block1a11_PORT_A_data_out = MEMORY(, , X1_ram_block1a11_PORT_A_address_reg, , , X1_ram_block1a11_PORT_A_read_enable_reg, , , , , X1_ram_block1a11_clock_0, , , , , , , );
X1_ram_block1a11 = X1_ram_block1a11_PORT_A_data_out[0];


--X1_ram_block1a12 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a12
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a12_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a12_PORT_A_address_reg = DFFE(X1_ram_block1a12_PORT_A_address, X1_ram_block1a12_clock_0, , , );
X1_ram_block1a12_PORT_A_read_enable = VCC;
X1_ram_block1a12_PORT_A_read_enable_reg = DFFE(X1_ram_block1a12_PORT_A_read_enable, X1_ram_block1a12_clock_0, , , );
X1_ram_block1a12_clock_0 = i_clk;
X1_ram_block1a12_PORT_A_data_out = MEMORY(, , X1_ram_block1a12_PORT_A_address_reg, , , X1_ram_block1a12_PORT_A_read_enable_reg, , , , , X1_ram_block1a12_clock_0, , , , , , , );
X1_ram_block1a12 = X1_ram_block1a12_PORT_A_data_out[0];


--X1_ram_block1a13 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a13
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a13_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a13_PORT_A_address_reg = DFFE(X1_ram_block1a13_PORT_A_address, X1_ram_block1a13_clock_0, , , );
X1_ram_block1a13_PORT_A_read_enable = VCC;
X1_ram_block1a13_PORT_A_read_enable_reg = DFFE(X1_ram_block1a13_PORT_A_read_enable, X1_ram_block1a13_clock_0, , , );
X1_ram_block1a13_clock_0 = i_clk;
X1_ram_block1a13_PORT_A_data_out = MEMORY(, , X1_ram_block1a13_PORT_A_address_reg, , , X1_ram_block1a13_PORT_A_read_enable_reg, , , , , X1_ram_block1a13_clock_0, , , , , , , );
X1_ram_block1a13 = X1_ram_block1a13_PORT_A_data_out[0];


--X1_ram_block1a14 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a14
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a14_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a14_PORT_A_address_reg = DFFE(X1_ram_block1a14_PORT_A_address, X1_ram_block1a14_clock_0, , , );
X1_ram_block1a14_PORT_A_read_enable = VCC;
X1_ram_block1a14_PORT_A_read_enable_reg = DFFE(X1_ram_block1a14_PORT_A_read_enable, X1_ram_block1a14_clock_0, , , );
X1_ram_block1a14_clock_0 = i_clk;
X1_ram_block1a14_PORT_A_data_out = MEMORY(, , X1_ram_block1a14_PORT_A_address_reg, , , X1_ram_block1a14_PORT_A_read_enable_reg, , , , , X1_ram_block1a14_clock_0, , , , , , , );
X1_ram_block1a14 = X1_ram_block1a14_PORT_A_data_out[0];


--X1_ram_block1a15 is neuron_l1_n4:n4|ram_l1_n4:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_a871:auto_generated|ram_block1a15
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
X1_ram_block1a15_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
X1_ram_block1a15_PORT_A_address_reg = DFFE(X1_ram_block1a15_PORT_A_address, X1_ram_block1a15_clock_0, , , );
X1_ram_block1a15_PORT_A_read_enable = VCC;
X1_ram_block1a15_PORT_A_read_enable_reg = DFFE(X1_ram_block1a15_PORT_A_read_enable, X1_ram_block1a15_clock_0, , , );
X1_ram_block1a15_clock_0 = i_clk;
X1_ram_block1a15_PORT_A_data_out = MEMORY(, , X1_ram_block1a15_PORT_A_address_reg, , , X1_ram_block1a15_PORT_A_read_enable_reg, , , , , X1_ram_block1a15_clock_0, , , , , , , );
X1_ram_block1a15 = X1_ram_block1a15_PORT_A_data_out[0];


--Z1_ram_block1a0 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a0
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a0_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a0_PORT_A_address_reg = DFFE(Z1_ram_block1a0_PORT_A_address, Z1_ram_block1a0_clock_0, , , );
Z1_ram_block1a0_PORT_A_read_enable = VCC;
Z1_ram_block1a0_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a0_PORT_A_read_enable, Z1_ram_block1a0_clock_0, , , );
Z1_ram_block1a0_clock_0 = i_clk;
Z1_ram_block1a0_PORT_A_data_out = MEMORY(, , Z1_ram_block1a0_PORT_A_address_reg, , , Z1_ram_block1a0_PORT_A_read_enable_reg, , , , , Z1_ram_block1a0_clock_0, , , , , , , );
Z1_ram_block1a0 = Z1_ram_block1a0_PORT_A_data_out[0];


--Z1_ram_block1a1 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a1
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a1_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a1_PORT_A_address_reg = DFFE(Z1_ram_block1a1_PORT_A_address, Z1_ram_block1a1_clock_0, , , );
Z1_ram_block1a1_PORT_A_read_enable = VCC;
Z1_ram_block1a1_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a1_PORT_A_read_enable, Z1_ram_block1a1_clock_0, , , );
Z1_ram_block1a1_clock_0 = i_clk;
Z1_ram_block1a1_PORT_A_data_out = MEMORY(, , Z1_ram_block1a1_PORT_A_address_reg, , , Z1_ram_block1a1_PORT_A_read_enable_reg, , , , , Z1_ram_block1a1_clock_0, , , , , , , );
Z1_ram_block1a1 = Z1_ram_block1a1_PORT_A_data_out[0];


--Z1_ram_block1a2 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a2
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a2_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a2_PORT_A_address_reg = DFFE(Z1_ram_block1a2_PORT_A_address, Z1_ram_block1a2_clock_0, , , );
Z1_ram_block1a2_PORT_A_read_enable = VCC;
Z1_ram_block1a2_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a2_PORT_A_read_enable, Z1_ram_block1a2_clock_0, , , );
Z1_ram_block1a2_clock_0 = i_clk;
Z1_ram_block1a2_PORT_A_data_out = MEMORY(, , Z1_ram_block1a2_PORT_A_address_reg, , , Z1_ram_block1a2_PORT_A_read_enable_reg, , , , , Z1_ram_block1a2_clock_0, , , , , , , );
Z1_ram_block1a2 = Z1_ram_block1a2_PORT_A_data_out[0];


--Z1_ram_block1a3 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a3
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a3_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a3_PORT_A_address_reg = DFFE(Z1_ram_block1a3_PORT_A_address, Z1_ram_block1a3_clock_0, , , );
Z1_ram_block1a3_PORT_A_read_enable = VCC;
Z1_ram_block1a3_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a3_PORT_A_read_enable, Z1_ram_block1a3_clock_0, , , );
Z1_ram_block1a3_clock_0 = i_clk;
Z1_ram_block1a3_PORT_A_data_out = MEMORY(, , Z1_ram_block1a3_PORT_A_address_reg, , , Z1_ram_block1a3_PORT_A_read_enable_reg, , , , , Z1_ram_block1a3_clock_0, , , , , , , );
Z1_ram_block1a3 = Z1_ram_block1a3_PORT_A_data_out[0];


--Z1_ram_block1a4 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a4
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a4_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a4_PORT_A_address_reg = DFFE(Z1_ram_block1a4_PORT_A_address, Z1_ram_block1a4_clock_0, , , );
Z1_ram_block1a4_PORT_A_read_enable = VCC;
Z1_ram_block1a4_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a4_PORT_A_read_enable, Z1_ram_block1a4_clock_0, , , );
Z1_ram_block1a4_clock_0 = i_clk;
Z1_ram_block1a4_PORT_A_data_out = MEMORY(, , Z1_ram_block1a4_PORT_A_address_reg, , , Z1_ram_block1a4_PORT_A_read_enable_reg, , , , , Z1_ram_block1a4_clock_0, , , , , , , );
Z1_ram_block1a4 = Z1_ram_block1a4_PORT_A_data_out[0];


--Z1_ram_block1a5 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a5
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a5_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a5_PORT_A_address_reg = DFFE(Z1_ram_block1a5_PORT_A_address, Z1_ram_block1a5_clock_0, , , );
Z1_ram_block1a5_PORT_A_read_enable = VCC;
Z1_ram_block1a5_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a5_PORT_A_read_enable, Z1_ram_block1a5_clock_0, , , );
Z1_ram_block1a5_clock_0 = i_clk;
Z1_ram_block1a5_PORT_A_data_out = MEMORY(, , Z1_ram_block1a5_PORT_A_address_reg, , , Z1_ram_block1a5_PORT_A_read_enable_reg, , , , , Z1_ram_block1a5_clock_0, , , , , , , );
Z1_ram_block1a5 = Z1_ram_block1a5_PORT_A_data_out[0];


--Z1_ram_block1a6 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a6
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a6_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a6_PORT_A_address_reg = DFFE(Z1_ram_block1a6_PORT_A_address, Z1_ram_block1a6_clock_0, , , );
Z1_ram_block1a6_PORT_A_read_enable = VCC;
Z1_ram_block1a6_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a6_PORT_A_read_enable, Z1_ram_block1a6_clock_0, , , );
Z1_ram_block1a6_clock_0 = i_clk;
Z1_ram_block1a6_PORT_A_data_out = MEMORY(, , Z1_ram_block1a6_PORT_A_address_reg, , , Z1_ram_block1a6_PORT_A_read_enable_reg, , , , , Z1_ram_block1a6_clock_0, , , , , , , );
Z1_ram_block1a6 = Z1_ram_block1a6_PORT_A_data_out[0];


--Z1_ram_block1a7 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a7
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a7_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a7_PORT_A_address_reg = DFFE(Z1_ram_block1a7_PORT_A_address, Z1_ram_block1a7_clock_0, , , );
Z1_ram_block1a7_PORT_A_read_enable = VCC;
Z1_ram_block1a7_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a7_PORT_A_read_enable, Z1_ram_block1a7_clock_0, , , );
Z1_ram_block1a7_clock_0 = i_clk;
Z1_ram_block1a7_PORT_A_data_out = MEMORY(, , Z1_ram_block1a7_PORT_A_address_reg, , , Z1_ram_block1a7_PORT_A_read_enable_reg, , , , , Z1_ram_block1a7_clock_0, , , , , , , );
Z1_ram_block1a7 = Z1_ram_block1a7_PORT_A_data_out[0];


--Z1_ram_block1a8 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a8
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a8_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a8_PORT_A_address_reg = DFFE(Z1_ram_block1a8_PORT_A_address, Z1_ram_block1a8_clock_0, , , );
Z1_ram_block1a8_PORT_A_read_enable = VCC;
Z1_ram_block1a8_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a8_PORT_A_read_enable, Z1_ram_block1a8_clock_0, , , );
Z1_ram_block1a8_clock_0 = i_clk;
Z1_ram_block1a8_PORT_A_data_out = MEMORY(, , Z1_ram_block1a8_PORT_A_address_reg, , , Z1_ram_block1a8_PORT_A_read_enable_reg, , , , , Z1_ram_block1a8_clock_0, , , , , , , );
Z1_ram_block1a8 = Z1_ram_block1a8_PORT_A_data_out[0];


--Z1_ram_block1a9 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a9
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a9_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a9_PORT_A_address_reg = DFFE(Z1_ram_block1a9_PORT_A_address, Z1_ram_block1a9_clock_0, , , );
Z1_ram_block1a9_PORT_A_read_enable = VCC;
Z1_ram_block1a9_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a9_PORT_A_read_enable, Z1_ram_block1a9_clock_0, , , );
Z1_ram_block1a9_clock_0 = i_clk;
Z1_ram_block1a9_PORT_A_data_out = MEMORY(, , Z1_ram_block1a9_PORT_A_address_reg, , , Z1_ram_block1a9_PORT_A_read_enable_reg, , , , , Z1_ram_block1a9_clock_0, , , , , , , );
Z1_ram_block1a9 = Z1_ram_block1a9_PORT_A_data_out[0];


--Z1_ram_block1a10 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a10
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a10_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a10_PORT_A_address_reg = DFFE(Z1_ram_block1a10_PORT_A_address, Z1_ram_block1a10_clock_0, , , );
Z1_ram_block1a10_PORT_A_read_enable = VCC;
Z1_ram_block1a10_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a10_PORT_A_read_enable, Z1_ram_block1a10_clock_0, , , );
Z1_ram_block1a10_clock_0 = i_clk;
Z1_ram_block1a10_PORT_A_data_out = MEMORY(, , Z1_ram_block1a10_PORT_A_address_reg, , , Z1_ram_block1a10_PORT_A_read_enable_reg, , , , , Z1_ram_block1a10_clock_0, , , , , , , );
Z1_ram_block1a10 = Z1_ram_block1a10_PORT_A_data_out[0];


--Z1_ram_block1a11 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a11
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a11_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a11_PORT_A_address_reg = DFFE(Z1_ram_block1a11_PORT_A_address, Z1_ram_block1a11_clock_0, , , );
Z1_ram_block1a11_PORT_A_read_enable = VCC;
Z1_ram_block1a11_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a11_PORT_A_read_enable, Z1_ram_block1a11_clock_0, , , );
Z1_ram_block1a11_clock_0 = i_clk;
Z1_ram_block1a11_PORT_A_data_out = MEMORY(, , Z1_ram_block1a11_PORT_A_address_reg, , , Z1_ram_block1a11_PORT_A_read_enable_reg, , , , , Z1_ram_block1a11_clock_0, , , , , , , );
Z1_ram_block1a11 = Z1_ram_block1a11_PORT_A_data_out[0];


--Z1_ram_block1a12 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a12
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a12_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a12_PORT_A_address_reg = DFFE(Z1_ram_block1a12_PORT_A_address, Z1_ram_block1a12_clock_0, , , );
Z1_ram_block1a12_PORT_A_read_enable = VCC;
Z1_ram_block1a12_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a12_PORT_A_read_enable, Z1_ram_block1a12_clock_0, , , );
Z1_ram_block1a12_clock_0 = i_clk;
Z1_ram_block1a12_PORT_A_data_out = MEMORY(, , Z1_ram_block1a12_PORT_A_address_reg, , , Z1_ram_block1a12_PORT_A_read_enable_reg, , , , , Z1_ram_block1a12_clock_0, , , , , , , );
Z1_ram_block1a12 = Z1_ram_block1a12_PORT_A_data_out[0];


--Z1_ram_block1a13 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a13
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a13_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a13_PORT_A_address_reg = DFFE(Z1_ram_block1a13_PORT_A_address, Z1_ram_block1a13_clock_0, , , );
Z1_ram_block1a13_PORT_A_read_enable = VCC;
Z1_ram_block1a13_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a13_PORT_A_read_enable, Z1_ram_block1a13_clock_0, , , );
Z1_ram_block1a13_clock_0 = i_clk;
Z1_ram_block1a13_PORT_A_data_out = MEMORY(, , Z1_ram_block1a13_PORT_A_address_reg, , , Z1_ram_block1a13_PORT_A_read_enable_reg, , , , , Z1_ram_block1a13_clock_0, , , , , , , );
Z1_ram_block1a13 = Z1_ram_block1a13_PORT_A_data_out[0];


--Z1_ram_block1a14 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a14
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a14_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a14_PORT_A_address_reg = DFFE(Z1_ram_block1a14_PORT_A_address, Z1_ram_block1a14_clock_0, , , );
Z1_ram_block1a14_PORT_A_read_enable = VCC;
Z1_ram_block1a14_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a14_PORT_A_read_enable, Z1_ram_block1a14_clock_0, , , );
Z1_ram_block1a14_clock_0 = i_clk;
Z1_ram_block1a14_PORT_A_data_out = MEMORY(, , Z1_ram_block1a14_PORT_A_address_reg, , , Z1_ram_block1a14_PORT_A_read_enable_reg, , , , , Z1_ram_block1a14_clock_0, , , , , , , );
Z1_ram_block1a14 = Z1_ram_block1a14_PORT_A_data_out[0];


--Z1_ram_block1a15 is neuron_l1_n5:n5|ram_l1_n5:ram_n1|altsyncram:r_mem_rtl_0|altsyncram_f971:auto_generated|ram_block1a15
--RAM Block Operation Mode: ROM
--Port A Depth: 32, Port A Width: 1
--Port A Logical Depth: 50, Port A Logical Width: 16
--Port A Input: Registered, Port A Output: Un-registered
Z1_ram_block1a15_PORT_A_address = BUS(B1_r_addr[0], B1_r_addr[1], B1_r_addr[2], B1_r_addr[3], B1_r_addr[4]);
Z1_ram_block1a15_PORT_A_address_reg = DFFE(Z1_ram_block1a15_PORT_A_address, Z1_ram_block1a15_clock_0, , , );
Z1_ram_block1a15_PORT_A_read_enable = VCC;
Z1_ram_block1a15_PORT_A_read_enable_reg = DFFE(Z1_ram_block1a15_PORT_A_read_enable, Z1_ram_block1a15_clock_0, , , );
Z1_ram_block1a15_clock_0 = i_clk;
Z1_ram_block1a15_PORT_A_data_out = MEMORY(, , Z1_ram_block1a15_PORT_A_address_reg, , , Z1_ram_block1a15_PORT_A_read_enable_reg, , , , , Z1_ram_block1a15_clock_0, , , , , , , );
Z1_ram_block1a15 = Z1_ram_block1a15_PORT_A_data_out[0];


--o_mac_done is o_mac_done
o_mac_done = OUTPUT(r_mac_done);


--o_done is o_done
o_done = OUTPUT(r_done);


--o_fxp_n0[0] is o_fxp_n0[0]
o_fxp_n0[0] = OUTPUT(H1_r_out[0]);


--o_fxp_n0[1] is o_fxp_n0[1]
o_fxp_n0[1] = OUTPUT(H1_r_out[1]);


--o_fxp_n0[2] is o_fxp_n0[2]
o_fxp_n0[2] = OUTPUT(H1_r_out[2]);


--o_fxp_n0[3] is o_fxp_n0[3]
o_fxp_n0[3] = OUTPUT(H1_r_out[3]);


--o_fxp_n0[4] is o_fxp_n0[4]
o_fxp_n0[4] = OUTPUT(H1_r_out[4]);


--o_fxp_n0[5] is o_fxp_n0[5]
o_fxp_n0[5] = OUTPUT(H1_r_out[5]);


--o_fxp_n0[6] is o_fxp_n0[6]
o_fxp_n0[6] = OUTPUT(H1_r_out[6]);


--o_fxp_n0[7] is o_fxp_n0[7]
o_fxp_n0[7] = OUTPUT(H1_r_out[7]);


--o_fxp_n0[8] is o_fxp_n0[8]
o_fxp_n0[8] = OUTPUT(H1_r_out[8]);


--o_fxp_n0[9] is o_fxp_n0[9]
o_fxp_n0[9] = OUTPUT(H1_r_out[9]);


--o_fxp_n0[10] is o_fxp_n0[10]
o_fxp_n0[10] = OUTPUT(H1_r_out[10]);


--o_fxp_n0[11] is o_fxp_n0[11]
o_fxp_n0[11] = OUTPUT(H1_r_out[11]);


--o_fxp_n0[12] is o_fxp_n0[12]
o_fxp_n0[12] = OUTPUT(H1_r_out[12]);


--o_fxp_n0[13] is o_fxp_n0[13]
o_fxp_n0[13] = OUTPUT(H1_r_out[13]);


--o_fxp_n0[14] is o_fxp_n0[14]
o_fxp_n0[14] = OUTPUT(H1_r_out[14]);


--o_fxp_n0[15] is o_fxp_n0[15]
o_fxp_n0[15] = OUTPUT(A1L149);


--o_fxp_n1[0] is o_fxp_n1[0]
o_fxp_n1[0] = OUTPUT(H2_r_out[0]);


--o_fxp_n1[1] is o_fxp_n1[1]
o_fxp_n1[1] = OUTPUT(H2_r_out[1]);


--o_fxp_n1[2] is o_fxp_n1[2]
o_fxp_n1[2] = OUTPUT(H2_r_out[2]);


--o_fxp_n1[3] is o_fxp_n1[3]
o_fxp_n1[3] = OUTPUT(H2_r_out[3]);


--o_fxp_n1[4] is o_fxp_n1[4]
o_fxp_n1[4] = OUTPUT(H2_r_out[4]);


--o_fxp_n1[5] is o_fxp_n1[5]
o_fxp_n1[5] = OUTPUT(H2_r_out[5]);


--o_fxp_n1[6] is o_fxp_n1[6]
o_fxp_n1[6] = OUTPUT(H2_r_out[6]);


--o_fxp_n1[7] is o_fxp_n1[7]
o_fxp_n1[7] = OUTPUT(H2_r_out[7]);


--o_fxp_n1[8] is o_fxp_n1[8]
o_fxp_n1[8] = OUTPUT(H2_r_out[8]);


--o_fxp_n1[9] is o_fxp_n1[9]
o_fxp_n1[9] = OUTPUT(H2_r_out[9]);


--o_fxp_n1[10] is o_fxp_n1[10]
o_fxp_n1[10] = OUTPUT(H2_r_out[10]);


--o_fxp_n1[11] is o_fxp_n1[11]
o_fxp_n1[11] = OUTPUT(H2_r_out[11]);


--o_fxp_n1[12] is o_fxp_n1[12]
o_fxp_n1[12] = OUTPUT(H2_r_out[12]);


--o_fxp_n1[13] is o_fxp_n1[13]
o_fxp_n1[13] = OUTPUT(H2_r_out[13]);


--o_fxp_n1[14] is o_fxp_n1[14]
o_fxp_n1[14] = OUTPUT(H2_r_out[14]);


--o_fxp_n1[15] is o_fxp_n1[15]
o_fxp_n1[15] = OUTPUT(A1L149);


--o_fxp_n2[0] is o_fxp_n2[0]
o_fxp_n2[0] = OUTPUT(H3_r_out[0]);


--o_fxp_n2[1] is o_fxp_n2[1]
o_fxp_n2[1] = OUTPUT(H3_r_out[1]);


--o_fxp_n2[2] is o_fxp_n2[2]
o_fxp_n2[2] = OUTPUT(H3_r_out[2]);


--o_fxp_n2[3] is o_fxp_n2[3]
o_fxp_n2[3] = OUTPUT(H3_r_out[3]);


--o_fxp_n2[4] is o_fxp_n2[4]
o_fxp_n2[4] = OUTPUT(H3_r_out[4]);


--o_fxp_n2[5] is o_fxp_n2[5]
o_fxp_n2[5] = OUTPUT(H3_r_out[5]);


--o_fxp_n2[6] is o_fxp_n2[6]
o_fxp_n2[6] = OUTPUT(H3_r_out[6]);


--o_fxp_n2[7] is o_fxp_n2[7]
o_fxp_n2[7] = OUTPUT(H3_r_out[7]);


--o_fxp_n2[8] is o_fxp_n2[8]
o_fxp_n2[8] = OUTPUT(H3_r_out[8]);


--o_fxp_n2[9] is o_fxp_n2[9]
o_fxp_n2[9] = OUTPUT(H3_r_out[9]);


--o_fxp_n2[10] is o_fxp_n2[10]
o_fxp_n2[10] = OUTPUT(H3_r_out[10]);


--o_fxp_n2[11] is o_fxp_n2[11]
o_fxp_n2[11] = OUTPUT(H3_r_out[11]);


--o_fxp_n2[12] is o_fxp_n2[12]
o_fxp_n2[12] = OUTPUT(H3_r_out[12]);


--o_fxp_n2[13] is o_fxp_n2[13]
o_fxp_n2[13] = OUTPUT(H3_r_out[13]);


--o_fxp_n2[14] is o_fxp_n2[14]
o_fxp_n2[14] = OUTPUT(H3_r_out[14]);


--o_fxp_n2[15] is o_fxp_n2[15]
o_fxp_n2[15] = OUTPUT(A1L149);


--o_fxp_n3[0] is o_fxp_n3[0]
o_fxp_n3[0] = OUTPUT(H4_r_out[0]);


--o_fxp_n3[1] is o_fxp_n3[1]
o_fxp_n3[1] = OUTPUT(H4_r_out[1]);


--o_fxp_n3[2] is o_fxp_n3[2]
o_fxp_n3[2] = OUTPUT(H4_r_out[2]);


--o_fxp_n3[3] is o_fxp_n3[3]
o_fxp_n3[3] = OUTPUT(H4_r_out[3]);


--o_fxp_n3[4] is o_fxp_n3[4]
o_fxp_n3[4] = OUTPUT(H4_r_out[4]);


--o_fxp_n3[5] is o_fxp_n3[5]
o_fxp_n3[5] = OUTPUT(H4_r_out[5]);


--o_fxp_n3[6] is o_fxp_n3[6]
o_fxp_n3[6] = OUTPUT(H4_r_out[6]);


--o_fxp_n3[7] is o_fxp_n3[7]
o_fxp_n3[7] = OUTPUT(H4_r_out[7]);


--o_fxp_n3[8] is o_fxp_n3[8]
o_fxp_n3[8] = OUTPUT(H4_r_out[8]);


--o_fxp_n3[9] is o_fxp_n3[9]
o_fxp_n3[9] = OUTPUT(H4_r_out[9]);


--o_fxp_n3[10] is o_fxp_n3[10]
o_fxp_n3[10] = OUTPUT(H4_r_out[10]);


--o_fxp_n3[11] is o_fxp_n3[11]
o_fxp_n3[11] = OUTPUT(H4_r_out[11]);


--o_fxp_n3[12] is o_fxp_n3[12]
o_fxp_n3[12] = OUTPUT(H4_r_out[12]);


--o_fxp_n3[13] is o_fxp_n3[13]
o_fxp_n3[13] = OUTPUT(H4_r_out[13]);


--o_fxp_n3[14] is o_fxp_n3[14]
o_fxp_n3[14] = OUTPUT(H4_r_out[14]);


--o_fxp_n3[15] is o_fxp_n3[15]
o_fxp_n3[15] = OUTPUT(A1L149);


--o_fxp_n4[0] is o_fxp_n4[0]
o_fxp_n4[0] = OUTPUT(H5_r_out[0]);


--o_fxp_n4[1] is o_fxp_n4[1]
o_fxp_n4[1] = OUTPUT(H5_r_out[1]);


--o_fxp_n4[2] is o_fxp_n4[2]
o_fxp_n4[2] = OUTPUT(H5_r_out[2]);


--o_fxp_n4[3] is o_fxp_n4[3]
o_fxp_n4[3] = OUTPUT(H5_r_out[3]);


--o_fxp_n4[4] is o_fxp_n4[4]
o_fxp_n4[4] = OUTPUT(H5_r_out[4]);


--o_fxp_n4[5] is o_fxp_n4[5]
o_fxp_n4[5] = OUTPUT(H5_r_out[5]);


--o_fxp_n4[6] is o_fxp_n4[6]
o_fxp_n4[6] = OUTPUT(H5_r_out[6]);


--o_fxp_n4[7] is o_fxp_n4[7]
o_fxp_n4[7] = OUTPUT(H5_r_out[7]);


--o_fxp_n4[8] is o_fxp_n4[8]
o_fxp_n4[8] = OUTPUT(H5_r_out[8]);


--o_fxp_n4[9] is o_fxp_n4[9]
o_fxp_n4[9] = OUTPUT(H5_r_out[9]);


--o_fxp_n4[10] is o_fxp_n4[10]
o_fxp_n4[10] = OUTPUT(H5_r_out[10]);


--o_fxp_n4[11] is o_fxp_n4[11]
o_fxp_n4[11] = OUTPUT(H5_r_out[11]);


--o_fxp_n4[12] is o_fxp_n4[12]
o_fxp_n4[12] = OUTPUT(H5_r_out[12]);


--o_fxp_n4[13] is o_fxp_n4[13]
o_fxp_n4[13] = OUTPUT(H5_r_out[13]);


--o_fxp_n4[14] is o_fxp_n4[14]
o_fxp_n4[14] = OUTPUT(H5_r_out[14]);


--o_fxp_n4[15] is o_fxp_n4[15]
o_fxp_n4[15] = OUTPUT(A1L149);


--o_fxp_n5[0] is o_fxp_n5[0]
o_fxp_n5[0] = OUTPUT(H6_r_out[0]);


--o_fxp_n5[1] is o_fxp_n5[1]
o_fxp_n5[1] = OUTPUT(H6_r_out[1]);


--o_fxp_n5[2] is o_fxp_n5[2]
o_fxp_n5[2] = OUTPUT(H6_r_out[2]);


--o_fxp_n5[3] is o_fxp_n5[3]
o_fxp_n5[3] = OUTPUT(H6_r_out[3]);


--o_fxp_n5[4] is o_fxp_n5[4]
o_fxp_n5[4] = OUTPUT(H6_r_out[4]);


--o_fxp_n5[5] is o_fxp_n5[5]
o_fxp_n5[5] = OUTPUT(H6_r_out[5]);


--o_fxp_n5[6] is o_fxp_n5[6]
o_fxp_n5[6] = OUTPUT(H6_r_out[6]);


--o_fxp_n5[7] is o_fxp_n5[7]
o_fxp_n5[7] = OUTPUT(H6_r_out[7]);


--o_fxp_n5[8] is o_fxp_n5[8]
o_fxp_n5[8] = OUTPUT(H6_r_out[8]);


--o_fxp_n5[9] is o_fxp_n5[9]
o_fxp_n5[9] = OUTPUT(H6_r_out[9]);


--o_fxp_n5[10] is o_fxp_n5[10]
o_fxp_n5[10] = OUTPUT(H6_r_out[10]);


--o_fxp_n5[11] is o_fxp_n5[11]
o_fxp_n5[11] = OUTPUT(H6_r_out[11]);


--o_fxp_n5[12] is o_fxp_n5[12]
o_fxp_n5[12] = OUTPUT(H6_r_out[12]);


--o_fxp_n5[13] is o_fxp_n5[13]
o_fxp_n5[13] = OUTPUT(H6_r_out[13]);


--o_fxp_n5[14] is o_fxp_n5[14]
o_fxp_n5[14] = OUTPUT(H6_r_out[14]);


--o_fxp_n5[15] is o_fxp_n5[15]
o_fxp_n5[15] = OUTPUT(A1L149);


--r_mac_done is r_mac_done
--register power-up is low

r_mac_done = DFFEAS(A1L143, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_done is r_done
--register power-up is low

r_done = DFFEAS(A1L139, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[0] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[0]
--register power-up is low

H1_r_out[0] = DFFEAS(H1L23, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[1] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[1]
--register power-up is low

H1_r_out[1] = DFFEAS(H1L24, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[2] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[2]
--register power-up is low

H1_r_out[2] = DFFEAS(H1L25, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[3] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[3]
--register power-up is low

H1_r_out[3] = DFFEAS(H1L26, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[4] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[4]
--register power-up is low

H1_r_out[4] = DFFEAS(H1L27, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[5] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[5]
--register power-up is low

H1_r_out[5] = DFFEAS(H1L28, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[6] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[6]
--register power-up is low

H1_r_out[6] = DFFEAS(H1L29, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[7] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[7]
--register power-up is low

H1_r_out[7] = DFFEAS(H1L30, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[8] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[8]
--register power-up is low

H1_r_out[8] = DFFEAS(H1L31, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[9] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[9]
--register power-up is low

H1_r_out[9] = DFFEAS(H1L32, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[10] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[10]
--register power-up is low

H1_r_out[10] = DFFEAS(H1L33, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[11] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[11]
--register power-up is low

H1_r_out[11] = DFFEAS(H1L34, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[12] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[12]
--register power-up is low

H1_r_out[12] = DFFEAS(H1L35, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[13] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[13]
--register power-up is low

H1_r_out[13] = DFFEAS(H1L36, i_clk,  ,  ,  ,  ,  ,  ,  );


--H1_r_out[14] is neuron_l1_n0:n0|lut_relu:act_relu|r_out[14]
--register power-up is low

H1_r_out[14] = DFFEAS(H1L37, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[0] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[0]
--register power-up is low

H2_r_out[0] = DFFEAS(H2L23, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[1] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[1]
--register power-up is low

H2_r_out[1] = DFFEAS(H2L24, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[2] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[2]
--register power-up is low

H2_r_out[2] = DFFEAS(H2L25, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[3] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[3]
--register power-up is low

H2_r_out[3] = DFFEAS(H2L26, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[4] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[4]
--register power-up is low

H2_r_out[4] = DFFEAS(H2L27, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[5] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[5]
--register power-up is low

H2_r_out[5] = DFFEAS(H2L28, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[6] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[6]
--register power-up is low

H2_r_out[6] = DFFEAS(H2L29, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[7] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[7]
--register power-up is low

H2_r_out[7] = DFFEAS(H2L30, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[8] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[8]
--register power-up is low

H2_r_out[8] = DFFEAS(H2L31, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[9] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[9]
--register power-up is low

H2_r_out[9] = DFFEAS(H2L32, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[10] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[10]
--register power-up is low

H2_r_out[10] = DFFEAS(H2L33, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[11] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[11]
--register power-up is low

H2_r_out[11] = DFFEAS(H2L34, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[12] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[12]
--register power-up is low

H2_r_out[12] = DFFEAS(H2L35, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[13] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[13]
--register power-up is low

H2_r_out[13] = DFFEAS(H2L36, i_clk,  ,  ,  ,  ,  ,  ,  );


--H2_r_out[14] is neuron_l1_n1:n1|lut_relu:act_relu|r_out[14]
--register power-up is low

H2_r_out[14] = DFFEAS(H2L37, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[0] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[0]
--register power-up is low

H3_r_out[0] = DFFEAS(H3L23, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[1] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[1]
--register power-up is low

H3_r_out[1] = DFFEAS(H3L24, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[2] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[2]
--register power-up is low

H3_r_out[2] = DFFEAS(H3L25, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[3] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[3]
--register power-up is low

H3_r_out[3] = DFFEAS(H3L26, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[4] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[4]
--register power-up is low

H3_r_out[4] = DFFEAS(H3L27, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[5] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[5]
--register power-up is low

H3_r_out[5] = DFFEAS(H3L28, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[6] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[6]
--register power-up is low

H3_r_out[6] = DFFEAS(H3L29, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[7] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[7]
--register power-up is low

H3_r_out[7] = DFFEAS(H3L30, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[8] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[8]
--register power-up is low

H3_r_out[8] = DFFEAS(H3L31, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[9] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[9]
--register power-up is low

H3_r_out[9] = DFFEAS(H3L32, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[10] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[10]
--register power-up is low

H3_r_out[10] = DFFEAS(H3L33, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[11] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[11]
--register power-up is low

H3_r_out[11] = DFFEAS(H3L34, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[12] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[12]
--register power-up is low

H3_r_out[12] = DFFEAS(H3L35, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[13] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[13]
--register power-up is low

H3_r_out[13] = DFFEAS(H3L36, i_clk,  ,  ,  ,  ,  ,  ,  );


--H3_r_out[14] is neuron_l1_n2:n2|lut_relu:act_relu|r_out[14]
--register power-up is low

H3_r_out[14] = DFFEAS(H3L37, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[0] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[0]
--register power-up is low

H4_r_out[0] = DFFEAS(H4L23, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[1] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[1]
--register power-up is low

H4_r_out[1] = DFFEAS(H4L24, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[2] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[2]
--register power-up is low

H4_r_out[2] = DFFEAS(H4L25, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[3] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[3]
--register power-up is low

H4_r_out[3] = DFFEAS(H4L26, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[4] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[4]
--register power-up is low

H4_r_out[4] = DFFEAS(H4L27, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[5] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[5]
--register power-up is low

H4_r_out[5] = DFFEAS(H4L28, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[6] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[6]
--register power-up is low

H4_r_out[6] = DFFEAS(H4L29, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[7] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[7]
--register power-up is low

H4_r_out[7] = DFFEAS(H4L30, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[8] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[8]
--register power-up is low

H4_r_out[8] = DFFEAS(H4L31, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[9] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[9]
--register power-up is low

H4_r_out[9] = DFFEAS(H4L32, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[10] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[10]
--register power-up is low

H4_r_out[10] = DFFEAS(H4L33, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[11] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[11]
--register power-up is low

H4_r_out[11] = DFFEAS(H4L34, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[12] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[12]
--register power-up is low

H4_r_out[12] = DFFEAS(H4L35, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[13] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[13]
--register power-up is low

H4_r_out[13] = DFFEAS(H4L36, i_clk,  ,  ,  ,  ,  ,  ,  );


--H4_r_out[14] is neuron_l1_n3:n3|lut_relu:act_relu|r_out[14]
--register power-up is low

H4_r_out[14] = DFFEAS(H4L37, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[0] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[0]
--register power-up is low

H5_r_out[0] = DFFEAS(H5L23, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[1] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[1]
--register power-up is low

H5_r_out[1] = DFFEAS(H5L24, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[2] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[2]
--register power-up is low

H5_r_out[2] = DFFEAS(H5L25, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[3] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[3]
--register power-up is low

H5_r_out[3] = DFFEAS(H5L26, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[4] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[4]
--register power-up is low

H5_r_out[4] = DFFEAS(H5L27, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[5] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[5]
--register power-up is low

H5_r_out[5] = DFFEAS(H5L28, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[6] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[6]
--register power-up is low

H5_r_out[6] = DFFEAS(H5L29, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[7] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[7]
--register power-up is low

H5_r_out[7] = DFFEAS(H5L30, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[8] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[8]
--register power-up is low

H5_r_out[8] = DFFEAS(H5L31, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[9] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[9]
--register power-up is low

H5_r_out[9] = DFFEAS(H5L32, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[10] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[10]
--register power-up is low

H5_r_out[10] = DFFEAS(H5L33, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[11] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[11]
--register power-up is low

H5_r_out[11] = DFFEAS(H5L34, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[12] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[12]
--register power-up is low

H5_r_out[12] = DFFEAS(H5L35, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[13] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[13]
--register power-up is low

H5_r_out[13] = DFFEAS(H5L36, i_clk,  ,  ,  ,  ,  ,  ,  );


--H5_r_out[14] is neuron_l1_n4:n4|lut_relu:act_relu|r_out[14]
--register power-up is low

H5_r_out[14] = DFFEAS(H5L37, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[0] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[0]
--register power-up is low

H6_r_out[0] = DFFEAS(H6L23, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[1] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[1]
--register power-up is low

H6_r_out[1] = DFFEAS(H6L24, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[2] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[2]
--register power-up is low

H6_r_out[2] = DFFEAS(H6L25, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[3] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[3]
--register power-up is low

H6_r_out[3] = DFFEAS(H6L26, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[4] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[4]
--register power-up is low

H6_r_out[4] = DFFEAS(H6L27, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[5] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[5]
--register power-up is low

H6_r_out[5] = DFFEAS(H6L28, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[6] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[6]
--register power-up is low

H6_r_out[6] = DFFEAS(H6L29, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[7] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[7]
--register power-up is low

H6_r_out[7] = DFFEAS(H6L30, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[8] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[8]
--register power-up is low

H6_r_out[8] = DFFEAS(H6L31, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[9] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[9]
--register power-up is low

H6_r_out[9] = DFFEAS(H6L32, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[10] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[10]
--register power-up is low

H6_r_out[10] = DFFEAS(H6L33, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[11] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[11]
--register power-up is low

H6_r_out[11] = DFFEAS(H6L34, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[12] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[12]
--register power-up is low

H6_r_out[12] = DFFEAS(H6L35, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[13] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[13]
--register power-up is low

H6_r_out[13] = DFFEAS(H6L36, i_clk,  ,  ,  ,  ,  ,  ,  );


--H6_r_out[14] is neuron_l1_n5:n5|lut_relu:act_relu|r_out[14]
--register power-up is low

H6_r_out[14] = DFFEAS(H6L37, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sm.s_wait_sinapse is r_sm.s_wait_sinapse
--register power-up is low

r_sm.s_wait_sinapse = DFFEAS(A1L142, i_clk,  ,  ,  ,  ,  ,  ,  );


--J1_o_done is neuron_l1_n0:n0|mac:mac_n1|o_done
--register power-up is low

J1_o_done = DFFEAS(B1_r_mac_enable, i_clk,  ,  , !i_rst,  ,  ,  ,  );


--r_sm.s_get_data is r_sm.s_get_data
--register power-up is low

r_sm.s_get_data = DFFEAS(A1L137, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L143 is Selector4~0
A1L143 = (r_sm.s_wait_sinapse & ((r_mac_done) # ((J1_o_done)))) # (!r_sm.s_wait_sinapse & (r_mac_done & ((!r_sm.s_get_data))));


--i_clk is i_clk
i_clk = INPUT();


--r_sm.s_clear is r_sm.s_clear
--register power-up is low

r_sm.s_clear = DFFEAS(A1L138, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sm.s_idle is r_sm.s_idle
--register power-up is low

r_sm.s_idle = DFFEAS(A1L140, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L139 is Selector0~0
A1L139 = (r_sm.s_clear) # ((r_done & r_sm.s_idle));


--B1_r_relu_in[0] is neuron_l1_n0:n0|r_relu_in[0]
--register power-up is low

B1_r_relu_in[0] = DFFEAS(B1_r_bias[0], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_enable is neuron_l1_n0:n0|r_relu_enable
--register power-up is low

B1_r_relu_enable = DFFEAS(B1L249, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1_r_relu_in[15] is neuron_l1_n0:n0|r_relu_in[15]
--register power-up is low

B1_r_relu_in[15] = DFFEAS(B1_r_bias[15], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H1L9 is neuron_l1_n0:n0|lut_relu:act_relu|r_out[2]~0
H1L9 = (B1_r_relu_enable & !B1_r_relu_in[15]);


--B1_r_relu_in[7] is neuron_l1_n0:n0|r_relu_in[7]
--register power-up is low

B1_r_relu_in[7] = DFFEAS(B1_r_bias[7], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_in[6] is neuron_l1_n0:n0|r_relu_in[6]
--register power-up is low

B1_r_relu_in[6] = DFFEAS(B1_r_bias[6], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_in[5] is neuron_l1_n0:n0|r_relu_in[5]
--register power-up is low

B1_r_relu_in[5] = DFFEAS(B1_r_bias[5], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_in[4] is neuron_l1_n0:n0|r_relu_in[4]
--register power-up is low

B1_r_relu_in[4] = DFFEAS(B1_r_bias[4], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H1L1 is neuron_l1_n0:n0|lut_relu:act_relu|LessThan0~0
H1L1 = (B1_r_relu_in[7]) # ((B1_r_relu_in[6]) # ((B1_r_relu_in[5]) # (B1_r_relu_in[4])));


--B1_r_relu_in[3] is neuron_l1_n0:n0|r_relu_in[3]
--register power-up is low

B1_r_relu_in[3] = DFFEAS(B1_r_bias[3], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_in[2] is neuron_l1_n0:n0|r_relu_in[2]
--register power-up is low

B1_r_relu_in[2] = DFFEAS(B1_r_bias[2], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_in[1] is neuron_l1_n0:n0|r_relu_in[1]
--register power-up is low

B1_r_relu_in[1] = DFFEAS(B1_r_bias[1], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H1L2 is neuron_l1_n0:n0|lut_relu:act_relu|LessThan0~1
H1L2 = (B1_r_relu_in[0]) # ((B1_r_relu_in[3]) # ((B1_r_relu_in[2]) # (B1_r_relu_in[1])));


--B1_r_relu_in[8] is neuron_l1_n0:n0|r_relu_in[8]
--register power-up is low

B1_r_relu_in[8] = DFFEAS(B1_r_bias[8], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_in[9] is neuron_l1_n0:n0|r_relu_in[9]
--register power-up is low

B1_r_relu_in[9] = DFFEAS(B1_r_bias[9], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_in[10] is neuron_l1_n0:n0|r_relu_in[10]
--register power-up is low

B1_r_relu_in[10] = DFFEAS(B1_r_bias[10], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_in[11] is neuron_l1_n0:n0|r_relu_in[11]
--register power-up is low

B1_r_relu_in[11] = DFFEAS(B1_r_bias[11], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H1L3 is neuron_l1_n0:n0|lut_relu:act_relu|LessThan0~2
H1L3 = (B1_r_relu_in[8]) # ((B1_r_relu_in[9]) # ((B1_r_relu_in[10]) # (B1_r_relu_in[11])));


--B1_r_relu_in[12] is neuron_l1_n0:n0|r_relu_in[12]
--register power-up is low

B1_r_relu_in[12] = DFFEAS(B1_r_bias[12], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_in[13] is neuron_l1_n0:n0|r_relu_in[13]
--register power-up is low

B1_r_relu_in[13] = DFFEAS(B1_r_bias[13], i_clk,  ,  , B1L74,  ,  ,  ,  );


--B1_r_relu_in[14] is neuron_l1_n0:n0|r_relu_in[14]
--register power-up is low

B1_r_relu_in[14] = DFFEAS(B1_r_bias[14], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H1L4 is neuron_l1_n0:n0|lut_relu:act_relu|LessThan0~3
H1L4 = (H1L3) # ((B1_r_relu_in[12]) # ((B1_r_relu_in[13]) # (B1_r_relu_in[14])));


--H1L10 is neuron_l1_n0:n0|lut_relu:act_relu|r_out[2]~1
H1L10 = (H1L9 & ((H1L1) # ((H1L2) # (H1L4))));


--H1L23 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~2
H1L23 = (B1_r_relu_in[0] & H1L10);


--H1L24 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~3
H1L24 = (B1_r_relu_in[1] & H1L10);


--H1L25 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~4
H1L25 = (B1_r_relu_in[2] & H1L10);


--H1L26 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~5
H1L26 = (B1_r_relu_in[3] & H1L10);


--H1L27 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~6
H1L27 = (B1_r_relu_in[4] & H1L10);


--H1L28 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~7
H1L28 = (B1_r_relu_in[5] & H1L10);


--H1L29 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~8
H1L29 = (B1_r_relu_in[6] & H1L10);


--H1L30 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~9
H1L30 = (B1_r_relu_in[7] & H1L10);


--H1L31 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~10
H1L31 = (B1_r_relu_in[8] & H1L10);


--H1L32 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~11
H1L32 = (B1_r_relu_in[9] & H1L10);


--H1L33 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~12
H1L33 = (B1_r_relu_in[10] & H1L10);


--H1L34 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~13
H1L34 = (B1_r_relu_in[11] & H1L10);


--H1L35 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~14
H1L35 = (B1_r_relu_in[12] & H1L10);


--H1L36 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~15
H1L36 = (B1_r_relu_in[13] & H1L10);


--H1L37 is neuron_l1_n0:n0|lut_relu:act_relu|r_out~16
H1L37 = (B1_r_relu_in[14] & H1L10);


--C1_r_relu_in[0] is neuron_l1_n1:n1|r_relu_in[0]
--register power-up is low

C1_r_relu_in[0] = DFFEAS(C1_r_bias[0], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[15] is neuron_l1_n1:n1|r_relu_in[15]
--register power-up is low

C1_r_relu_in[15] = DFFEAS(C1_r_bias[15], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H2L13 is neuron_l1_n1:n1|lut_relu:act_relu|r_out[6]~0
H2L13 = (B1_r_relu_enable & !C1_r_relu_in[15]);


--C1_r_relu_in[7] is neuron_l1_n1:n1|r_relu_in[7]
--register power-up is low

C1_r_relu_in[7] = DFFEAS(C1_r_bias[7], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[6] is neuron_l1_n1:n1|r_relu_in[6]
--register power-up is low

C1_r_relu_in[6] = DFFEAS(C1_r_bias[6], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[5] is neuron_l1_n1:n1|r_relu_in[5]
--register power-up is low

C1_r_relu_in[5] = DFFEAS(C1_r_bias[5], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[4] is neuron_l1_n1:n1|r_relu_in[4]
--register power-up is low

C1_r_relu_in[4] = DFFEAS(C1_r_bias[4], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H2L1 is neuron_l1_n1:n1|lut_relu:act_relu|LessThan0~0
H2L1 = (C1_r_relu_in[7]) # ((C1_r_relu_in[6]) # ((C1_r_relu_in[5]) # (C1_r_relu_in[4])));


--C1_r_relu_in[3] is neuron_l1_n1:n1|r_relu_in[3]
--register power-up is low

C1_r_relu_in[3] = DFFEAS(C1_r_bias[3], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[2] is neuron_l1_n1:n1|r_relu_in[2]
--register power-up is low

C1_r_relu_in[2] = DFFEAS(C1_r_bias[2], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[1] is neuron_l1_n1:n1|r_relu_in[1]
--register power-up is low

C1_r_relu_in[1] = DFFEAS(C1_r_bias[1], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H2L2 is neuron_l1_n1:n1|lut_relu:act_relu|LessThan0~1
H2L2 = (C1_r_relu_in[0]) # ((C1_r_relu_in[3]) # ((C1_r_relu_in[2]) # (C1_r_relu_in[1])));


--C1_r_relu_in[8] is neuron_l1_n1:n1|r_relu_in[8]
--register power-up is low

C1_r_relu_in[8] = DFFEAS(C1_r_bias[8], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[9] is neuron_l1_n1:n1|r_relu_in[9]
--register power-up is low

C1_r_relu_in[9] = DFFEAS(C1_r_bias[9], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[10] is neuron_l1_n1:n1|r_relu_in[10]
--register power-up is low

C1_r_relu_in[10] = DFFEAS(C1_r_bias[10], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[11] is neuron_l1_n1:n1|r_relu_in[11]
--register power-up is low

C1_r_relu_in[11] = DFFEAS(C1_r_bias[11], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H2L3 is neuron_l1_n1:n1|lut_relu:act_relu|LessThan0~2
H2L3 = (C1_r_relu_in[8]) # ((C1_r_relu_in[9]) # ((C1_r_relu_in[10]) # (C1_r_relu_in[11])));


--C1_r_relu_in[12] is neuron_l1_n1:n1|r_relu_in[12]
--register power-up is low

C1_r_relu_in[12] = DFFEAS(C1_r_bias[12], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[13] is neuron_l1_n1:n1|r_relu_in[13]
--register power-up is low

C1_r_relu_in[13] = DFFEAS(C1_r_bias[13], i_clk,  ,  , B1L74,  ,  ,  ,  );


--C1_r_relu_in[14] is neuron_l1_n1:n1|r_relu_in[14]
--register power-up is low

C1_r_relu_in[14] = DFFEAS(C1_r_bias[14], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H2L4 is neuron_l1_n1:n1|lut_relu:act_relu|LessThan0~3
H2L4 = (H2L3) # ((C1_r_relu_in[12]) # ((C1_r_relu_in[13]) # (C1_r_relu_in[14])));


--H2L14 is neuron_l1_n1:n1|lut_relu:act_relu|r_out[6]~1
H2L14 = (H2L13 & ((H2L1) # ((H2L2) # (H2L4))));


--H2L23 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~2
H2L23 = (C1_r_relu_in[0] & H2L14);


--H2L24 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~3
H2L24 = (C1_r_relu_in[1] & H2L14);


--H2L25 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~4
H2L25 = (C1_r_relu_in[2] & H2L14);


--H2L26 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~5
H2L26 = (C1_r_relu_in[3] & H2L14);


--H2L27 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~6
H2L27 = (C1_r_relu_in[4] & H2L14);


--H2L28 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~7
H2L28 = (C1_r_relu_in[5] & H2L14);


--H2L29 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~8
H2L29 = (C1_r_relu_in[6] & H2L14);


--H2L30 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~9
H2L30 = (C1_r_relu_in[7] & H2L14);


--H2L31 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~10
H2L31 = (C1_r_relu_in[8] & H2L14);


--H2L32 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~11
H2L32 = (C1_r_relu_in[9] & H2L14);


--H2L33 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~12
H2L33 = (C1_r_relu_in[10] & H2L14);


--H2L34 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~13
H2L34 = (C1_r_relu_in[11] & H2L14);


--H2L35 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~14
H2L35 = (C1_r_relu_in[12] & H2L14);


--H2L36 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~15
H2L36 = (C1_r_relu_in[13] & H2L14);


--H2L37 is neuron_l1_n1:n1|lut_relu:act_relu|r_out~16
H2L37 = (C1_r_relu_in[14] & H2L14);


--D1_r_relu_in[0] is neuron_l1_n2:n2|r_relu_in[0]
--register power-up is low

D1_r_relu_in[0] = DFFEAS(D1_r_bias[0], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[15] is neuron_l1_n2:n2|r_relu_in[15]
--register power-up is low

D1_r_relu_in[15] = DFFEAS(D1_r_bias[15], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H3L21 is neuron_l1_n2:n2|lut_relu:act_relu|r_out[15]~0
H3L21 = (B1_r_relu_enable & !D1_r_relu_in[15]);


--D1_r_relu_in[7] is neuron_l1_n2:n2|r_relu_in[7]
--register power-up is low

D1_r_relu_in[7] = DFFEAS(D1_r_bias[7], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[6] is neuron_l1_n2:n2|r_relu_in[6]
--register power-up is low

D1_r_relu_in[6] = DFFEAS(D1_r_bias[6], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[5] is neuron_l1_n2:n2|r_relu_in[5]
--register power-up is low

D1_r_relu_in[5] = DFFEAS(D1_r_bias[5], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[4] is neuron_l1_n2:n2|r_relu_in[4]
--register power-up is low

D1_r_relu_in[4] = DFFEAS(D1_r_bias[4], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H3L1 is neuron_l1_n2:n2|lut_relu:act_relu|LessThan0~0
H3L1 = (D1_r_relu_in[7]) # ((D1_r_relu_in[6]) # ((D1_r_relu_in[5]) # (D1_r_relu_in[4])));


--D1_r_relu_in[3] is neuron_l1_n2:n2|r_relu_in[3]
--register power-up is low

D1_r_relu_in[3] = DFFEAS(D1_r_bias[3], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[2] is neuron_l1_n2:n2|r_relu_in[2]
--register power-up is low

D1_r_relu_in[2] = DFFEAS(D1_r_bias[2], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[1] is neuron_l1_n2:n2|r_relu_in[1]
--register power-up is low

D1_r_relu_in[1] = DFFEAS(D1_r_bias[1], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H3L2 is neuron_l1_n2:n2|lut_relu:act_relu|LessThan0~1
H3L2 = (D1_r_relu_in[0]) # ((D1_r_relu_in[3]) # ((D1_r_relu_in[2]) # (D1_r_relu_in[1])));


--D1_r_relu_in[8] is neuron_l1_n2:n2|r_relu_in[8]
--register power-up is low

D1_r_relu_in[8] = DFFEAS(D1_r_bias[8], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[9] is neuron_l1_n2:n2|r_relu_in[9]
--register power-up is low

D1_r_relu_in[9] = DFFEAS(D1_r_bias[9], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[10] is neuron_l1_n2:n2|r_relu_in[10]
--register power-up is low

D1_r_relu_in[10] = DFFEAS(D1_r_bias[10], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[11] is neuron_l1_n2:n2|r_relu_in[11]
--register power-up is low

D1_r_relu_in[11] = DFFEAS(D1_r_bias[11], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H3L3 is neuron_l1_n2:n2|lut_relu:act_relu|LessThan0~2
H3L3 = (D1_r_relu_in[8]) # ((D1_r_relu_in[9]) # ((D1_r_relu_in[10]) # (D1_r_relu_in[11])));


--D1_r_relu_in[12] is neuron_l1_n2:n2|r_relu_in[12]
--register power-up is low

D1_r_relu_in[12] = DFFEAS(D1_r_bias[12], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[13] is neuron_l1_n2:n2|r_relu_in[13]
--register power-up is low

D1_r_relu_in[13] = DFFEAS(D1_r_bias[13], i_clk,  ,  , B1L74,  ,  ,  ,  );


--D1_r_relu_in[14] is neuron_l1_n2:n2|r_relu_in[14]
--register power-up is low

D1_r_relu_in[14] = DFFEAS(D1_r_bias[14], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H3L4 is neuron_l1_n2:n2|lut_relu:act_relu|LessThan0~3
H3L4 = (H3L3) # ((D1_r_relu_in[12]) # ((D1_r_relu_in[13]) # (D1_r_relu_in[14])));


--H3L22 is neuron_l1_n2:n2|lut_relu:act_relu|r_out[15]~1
H3L22 = (H3L21 & ((H3L1) # ((H3L2) # (H3L4))));


--H3L23 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~2
H3L23 = (D1_r_relu_in[0] & H3L22);


--H3L24 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~3
H3L24 = (D1_r_relu_in[1] & H3L22);


--H3L25 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~4
H3L25 = (D1_r_relu_in[2] & H3L22);


--H3L26 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~5
H3L26 = (D1_r_relu_in[3] & H3L22);


--H3L27 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~6
H3L27 = (D1_r_relu_in[4] & H3L22);


--H3L28 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~7
H3L28 = (D1_r_relu_in[5] & H3L22);


--H3L29 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~8
H3L29 = (D1_r_relu_in[6] & H3L22);


--H3L30 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~9
H3L30 = (D1_r_relu_in[7] & H3L22);


--H3L31 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~10
H3L31 = (D1_r_relu_in[8] & H3L22);


--H3L32 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~11
H3L32 = (D1_r_relu_in[9] & H3L22);


--H3L33 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~12
H3L33 = (D1_r_relu_in[10] & H3L22);


--H3L34 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~13
H3L34 = (D1_r_relu_in[11] & H3L22);


--H3L35 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~14
H3L35 = (D1_r_relu_in[12] & H3L22);


--H3L36 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~15
H3L36 = (D1_r_relu_in[13] & H3L22);


--H3L37 is neuron_l1_n2:n2|lut_relu:act_relu|r_out~16
H3L37 = (D1_r_relu_in[14] & H3L22);


--E1_r_relu_in[0] is neuron_l1_n3:n3|r_relu_in[0]
--register power-up is low

E1_r_relu_in[0] = DFFEAS(E1_r_bias[0], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[15] is neuron_l1_n3:n3|r_relu_in[15]
--register power-up is low

E1_r_relu_in[15] = DFFEAS(E1_r_bias[15], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H4L11 is neuron_l1_n3:n3|lut_relu:act_relu|r_out[4]~0
H4L11 = (B1_r_relu_enable & !E1_r_relu_in[15]);


--E1_r_relu_in[7] is neuron_l1_n3:n3|r_relu_in[7]
--register power-up is low

E1_r_relu_in[7] = DFFEAS(E1_r_bias[7], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[6] is neuron_l1_n3:n3|r_relu_in[6]
--register power-up is low

E1_r_relu_in[6] = DFFEAS(E1_r_bias[6], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[5] is neuron_l1_n3:n3|r_relu_in[5]
--register power-up is low

E1_r_relu_in[5] = DFFEAS(E1_r_bias[5], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[4] is neuron_l1_n3:n3|r_relu_in[4]
--register power-up is low

E1_r_relu_in[4] = DFFEAS(E1_r_bias[4], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H4L1 is neuron_l1_n3:n3|lut_relu:act_relu|LessThan0~0
H4L1 = (E1_r_relu_in[7]) # ((E1_r_relu_in[6]) # ((E1_r_relu_in[5]) # (E1_r_relu_in[4])));


--E1_r_relu_in[3] is neuron_l1_n3:n3|r_relu_in[3]
--register power-up is low

E1_r_relu_in[3] = DFFEAS(E1_r_bias[3], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[2] is neuron_l1_n3:n3|r_relu_in[2]
--register power-up is low

E1_r_relu_in[2] = DFFEAS(E1_r_bias[2], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[1] is neuron_l1_n3:n3|r_relu_in[1]
--register power-up is low

E1_r_relu_in[1] = DFFEAS(E1_r_bias[1], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H4L2 is neuron_l1_n3:n3|lut_relu:act_relu|LessThan0~1
H4L2 = (E1_r_relu_in[0]) # ((E1_r_relu_in[3]) # ((E1_r_relu_in[2]) # (E1_r_relu_in[1])));


--E1_r_relu_in[8] is neuron_l1_n3:n3|r_relu_in[8]
--register power-up is low

E1_r_relu_in[8] = DFFEAS(E1_r_bias[8], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[9] is neuron_l1_n3:n3|r_relu_in[9]
--register power-up is low

E1_r_relu_in[9] = DFFEAS(E1_r_bias[9], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[10] is neuron_l1_n3:n3|r_relu_in[10]
--register power-up is low

E1_r_relu_in[10] = DFFEAS(E1_r_bias[10], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[11] is neuron_l1_n3:n3|r_relu_in[11]
--register power-up is low

E1_r_relu_in[11] = DFFEAS(E1_r_bias[11], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H4L3 is neuron_l1_n3:n3|lut_relu:act_relu|LessThan0~2
H4L3 = (E1_r_relu_in[8]) # ((E1_r_relu_in[9]) # ((E1_r_relu_in[10]) # (E1_r_relu_in[11])));


--E1_r_relu_in[12] is neuron_l1_n3:n3|r_relu_in[12]
--register power-up is low

E1_r_relu_in[12] = DFFEAS(E1_r_bias[12], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[13] is neuron_l1_n3:n3|r_relu_in[13]
--register power-up is low

E1_r_relu_in[13] = DFFEAS(E1_r_bias[13], i_clk,  ,  , B1L74,  ,  ,  ,  );


--E1_r_relu_in[14] is neuron_l1_n3:n3|r_relu_in[14]
--register power-up is low

E1_r_relu_in[14] = DFFEAS(E1_r_bias[14], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H4L4 is neuron_l1_n3:n3|lut_relu:act_relu|LessThan0~3
H4L4 = (H4L3) # ((E1_r_relu_in[12]) # ((E1_r_relu_in[13]) # (E1_r_relu_in[14])));


--H4L12 is neuron_l1_n3:n3|lut_relu:act_relu|r_out[4]~1
H4L12 = (H4L11 & ((H4L1) # ((H4L2) # (H4L4))));


--H4L23 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~2
H4L23 = (E1_r_relu_in[0] & H4L12);


--H4L24 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~3
H4L24 = (E1_r_relu_in[1] & H4L12);


--H4L25 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~4
H4L25 = (E1_r_relu_in[2] & H4L12);


--H4L26 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~5
H4L26 = (E1_r_relu_in[3] & H4L12);


--H4L27 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~6
H4L27 = (E1_r_relu_in[4] & H4L12);


--H4L28 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~7
H4L28 = (E1_r_relu_in[5] & H4L12);


--H4L29 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~8
H4L29 = (E1_r_relu_in[6] & H4L12);


--H4L30 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~9
H4L30 = (E1_r_relu_in[7] & H4L12);


--H4L31 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~10
H4L31 = (E1_r_relu_in[8] & H4L12);


--H4L32 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~11
H4L32 = (E1_r_relu_in[9] & H4L12);


--H4L33 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~12
H4L33 = (E1_r_relu_in[10] & H4L12);


--H4L34 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~13
H4L34 = (E1_r_relu_in[11] & H4L12);


--H4L35 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~14
H4L35 = (E1_r_relu_in[12] & H4L12);


--H4L36 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~15
H4L36 = (E1_r_relu_in[13] & H4L12);


--H4L37 is neuron_l1_n3:n3|lut_relu:act_relu|r_out~16
H4L37 = (E1_r_relu_in[14] & H4L12);


--F1_r_relu_in[0] is neuron_l1_n4:n4|r_relu_in[0]
--register power-up is low

F1_r_relu_in[0] = DFFEAS(F1_r_bias[0], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[15] is neuron_l1_n4:n4|r_relu_in[15]
--register power-up is low

F1_r_relu_in[15] = DFFEAS(F1_r_bias[15], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H5L12 is neuron_l1_n4:n4|lut_relu:act_relu|r_out[5]~0
H5L12 = (B1_r_relu_enable & !F1_r_relu_in[15]);


--F1_r_relu_in[7] is neuron_l1_n4:n4|r_relu_in[7]
--register power-up is low

F1_r_relu_in[7] = DFFEAS(F1_r_bias[7], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[6] is neuron_l1_n4:n4|r_relu_in[6]
--register power-up is low

F1_r_relu_in[6] = DFFEAS(F1_r_bias[6], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[5] is neuron_l1_n4:n4|r_relu_in[5]
--register power-up is low

F1_r_relu_in[5] = DFFEAS(F1_r_bias[5], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[4] is neuron_l1_n4:n4|r_relu_in[4]
--register power-up is low

F1_r_relu_in[4] = DFFEAS(F1_r_bias[4], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H5L1 is neuron_l1_n4:n4|lut_relu:act_relu|LessThan0~0
H5L1 = (F1_r_relu_in[7]) # ((F1_r_relu_in[6]) # ((F1_r_relu_in[5]) # (F1_r_relu_in[4])));


--F1_r_relu_in[3] is neuron_l1_n4:n4|r_relu_in[3]
--register power-up is low

F1_r_relu_in[3] = DFFEAS(F1_r_bias[3], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[2] is neuron_l1_n4:n4|r_relu_in[2]
--register power-up is low

F1_r_relu_in[2] = DFFEAS(F1_r_bias[2], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[1] is neuron_l1_n4:n4|r_relu_in[1]
--register power-up is low

F1_r_relu_in[1] = DFFEAS(F1_r_bias[1], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H5L2 is neuron_l1_n4:n4|lut_relu:act_relu|LessThan0~1
H5L2 = (F1_r_relu_in[0]) # ((F1_r_relu_in[3]) # ((F1_r_relu_in[2]) # (F1_r_relu_in[1])));


--F1_r_relu_in[8] is neuron_l1_n4:n4|r_relu_in[8]
--register power-up is low

F1_r_relu_in[8] = DFFEAS(F1_r_bias[8], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[9] is neuron_l1_n4:n4|r_relu_in[9]
--register power-up is low

F1_r_relu_in[9] = DFFEAS(F1_r_bias[9], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[10] is neuron_l1_n4:n4|r_relu_in[10]
--register power-up is low

F1_r_relu_in[10] = DFFEAS(F1_r_bias[10], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[11] is neuron_l1_n4:n4|r_relu_in[11]
--register power-up is low

F1_r_relu_in[11] = DFFEAS(F1_r_bias[11], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H5L3 is neuron_l1_n4:n4|lut_relu:act_relu|LessThan0~2
H5L3 = (F1_r_relu_in[8]) # ((F1_r_relu_in[9]) # ((F1_r_relu_in[10]) # (F1_r_relu_in[11])));


--F1_r_relu_in[12] is neuron_l1_n4:n4|r_relu_in[12]
--register power-up is low

F1_r_relu_in[12] = DFFEAS(F1_r_bias[12], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[13] is neuron_l1_n4:n4|r_relu_in[13]
--register power-up is low

F1_r_relu_in[13] = DFFEAS(F1_r_bias[13], i_clk,  ,  , B1L74,  ,  ,  ,  );


--F1_r_relu_in[14] is neuron_l1_n4:n4|r_relu_in[14]
--register power-up is low

F1_r_relu_in[14] = DFFEAS(F1_r_bias[14], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H5L4 is neuron_l1_n4:n4|lut_relu:act_relu|LessThan0~3
H5L4 = (H5L3) # ((F1_r_relu_in[12]) # ((F1_r_relu_in[13]) # (F1_r_relu_in[14])));


--H5L13 is neuron_l1_n4:n4|lut_relu:act_relu|r_out[5]~1
H5L13 = (H5L12 & ((H5L1) # ((H5L2) # (H5L4))));


--H5L23 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~2
H5L23 = (F1_r_relu_in[0] & H5L13);


--H5L24 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~3
H5L24 = (F1_r_relu_in[1] & H5L13);


--H5L25 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~4
H5L25 = (F1_r_relu_in[2] & H5L13);


--H5L26 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~5
H5L26 = (F1_r_relu_in[3] & H5L13);


--H5L27 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~6
H5L27 = (F1_r_relu_in[4] & H5L13);


--H5L28 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~7
H5L28 = (F1_r_relu_in[5] & H5L13);


--H5L29 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~8
H5L29 = (F1_r_relu_in[6] & H5L13);


--H5L30 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~9
H5L30 = (F1_r_relu_in[7] & H5L13);


--H5L31 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~10
H5L31 = (F1_r_relu_in[8] & H5L13);


--H5L32 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~11
H5L32 = (F1_r_relu_in[9] & H5L13);


--H5L33 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~12
H5L33 = (F1_r_relu_in[10] & H5L13);


--H5L34 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~13
H5L34 = (F1_r_relu_in[11] & H5L13);


--H5L35 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~14
H5L35 = (F1_r_relu_in[12] & H5L13);


--H5L36 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~15
H5L36 = (F1_r_relu_in[13] & H5L13);


--H5L37 is neuron_l1_n4:n4|lut_relu:act_relu|r_out~16
H5L37 = (F1_r_relu_in[14] & H5L13);


--G1_r_relu_in[0] is neuron_l1_n5:n5|r_relu_in[0]
--register power-up is low

G1_r_relu_in[0] = DFFEAS(G1_r_bias[0], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[15] is neuron_l1_n5:n5|r_relu_in[15]
--register power-up is low

G1_r_relu_in[15] = DFFEAS(G1_r_bias[15], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H6L15 is neuron_l1_n5:n5|lut_relu:act_relu|r_out[8]~0
H6L15 = (B1_r_relu_enable & !G1_r_relu_in[15]);


--G1_r_relu_in[7] is neuron_l1_n5:n5|r_relu_in[7]
--register power-up is low

G1_r_relu_in[7] = DFFEAS(G1_r_bias[7], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[6] is neuron_l1_n5:n5|r_relu_in[6]
--register power-up is low

G1_r_relu_in[6] = DFFEAS(G1_r_bias[6], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[5] is neuron_l1_n5:n5|r_relu_in[5]
--register power-up is low

G1_r_relu_in[5] = DFFEAS(G1_r_bias[5], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[4] is neuron_l1_n5:n5|r_relu_in[4]
--register power-up is low

G1_r_relu_in[4] = DFFEAS(G1_r_bias[4], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H6L1 is neuron_l1_n5:n5|lut_relu:act_relu|LessThan0~0
H6L1 = (G1_r_relu_in[7]) # ((G1_r_relu_in[6]) # ((G1_r_relu_in[5]) # (G1_r_relu_in[4])));


--G1_r_relu_in[3] is neuron_l1_n5:n5|r_relu_in[3]
--register power-up is low

G1_r_relu_in[3] = DFFEAS(G1_r_bias[3], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[2] is neuron_l1_n5:n5|r_relu_in[2]
--register power-up is low

G1_r_relu_in[2] = DFFEAS(G1_r_bias[2], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[1] is neuron_l1_n5:n5|r_relu_in[1]
--register power-up is low

G1_r_relu_in[1] = DFFEAS(G1_r_bias[1], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H6L2 is neuron_l1_n5:n5|lut_relu:act_relu|LessThan0~1
H6L2 = (G1_r_relu_in[0]) # ((G1_r_relu_in[3]) # ((G1_r_relu_in[2]) # (G1_r_relu_in[1])));


--G1_r_relu_in[8] is neuron_l1_n5:n5|r_relu_in[8]
--register power-up is low

G1_r_relu_in[8] = DFFEAS(G1_r_bias[8], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[9] is neuron_l1_n5:n5|r_relu_in[9]
--register power-up is low

G1_r_relu_in[9] = DFFEAS(G1_r_bias[9], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[10] is neuron_l1_n5:n5|r_relu_in[10]
--register power-up is low

G1_r_relu_in[10] = DFFEAS(G1_r_bias[10], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[11] is neuron_l1_n5:n5|r_relu_in[11]
--register power-up is low

G1_r_relu_in[11] = DFFEAS(G1_r_bias[11], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H6L3 is neuron_l1_n5:n5|lut_relu:act_relu|LessThan0~2
H6L3 = (G1_r_relu_in[8]) # ((G1_r_relu_in[9]) # ((G1_r_relu_in[10]) # (G1_r_relu_in[11])));


--G1_r_relu_in[12] is neuron_l1_n5:n5|r_relu_in[12]
--register power-up is low

G1_r_relu_in[12] = DFFEAS(G1_r_bias[12], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[13] is neuron_l1_n5:n5|r_relu_in[13]
--register power-up is low

G1_r_relu_in[13] = DFFEAS(G1_r_bias[13], i_clk,  ,  , B1L74,  ,  ,  ,  );


--G1_r_relu_in[14] is neuron_l1_n5:n5|r_relu_in[14]
--register power-up is low

G1_r_relu_in[14] = DFFEAS(G1_r_bias[14], i_clk,  ,  , B1L74,  ,  ,  ,  );


--H6L4 is neuron_l1_n5:n5|lut_relu:act_relu|LessThan0~3
H6L4 = (H6L3) # ((G1_r_relu_in[12]) # ((G1_r_relu_in[13]) # (G1_r_relu_in[14])));


--H6L16 is neuron_l1_n5:n5|lut_relu:act_relu|r_out[8]~1
H6L16 = (H6L15 & ((H6L1) # ((H6L2) # (H6L4))));


--H6L23 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~2
H6L23 = (G1_r_relu_in[0] & H6L16);


--H6L24 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~3
H6L24 = (G1_r_relu_in[1] & H6L16);


--H6L25 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~4
H6L25 = (G1_r_relu_in[2] & H6L16);


--H6L26 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~5
H6L26 = (G1_r_relu_in[3] & H6L16);


--H6L27 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~6
H6L27 = (G1_r_relu_in[4] & H6L16);


--H6L28 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~7
H6L28 = (G1_r_relu_in[5] & H6L16);


--H6L29 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~8
H6L29 = (G1_r_relu_in[6] & H6L16);


--H6L30 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~9
H6L30 = (G1_r_relu_in[7] & H6L16);


--H6L31 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~10
H6L31 = (G1_r_relu_in[8] & H6L16);


--H6L32 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~11
H6L32 = (G1_r_relu_in[9] & H6L16);


--H6L33 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~12
H6L33 = (G1_r_relu_in[10] & H6L16);


--H6L34 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~13
H6L34 = (G1_r_relu_in[11] & H6L16);


--H6L35 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~14
H6L35 = (G1_r_relu_in[12] & H6L16);


--H6L36 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~15
H6L36 = (G1_r_relu_in[13] & H6L16);


--H6L37 is neuron_l1_n5:n5|lut_relu:act_relu|r_out~16
H6L37 = (G1_r_relu_in[14] & H6L16);


--r_sm.s_sinapse is r_sm.s_sinapse
--register power-up is low

r_sm.s_sinapse = DFFEAS(A1L141, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L142 is Selector3~0
A1L142 = (r_sm.s_sinapse) # ((r_sm.s_wait_sinapse & !J1_o_done));


--B1_r_mac_enable is neuron_l1_n0:n0|r_mac_enable
--register power-up is low

B1_r_mac_enable = DFFEAS(B1L248, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--i_rst is i_rst
i_rst = INPUT();


--r_sinapse[2] is r_sinapse[2]
--register power-up is low

r_sinapse[2] = DFFEAS(A1L146, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sinapse[1] is r_sinapse[1]
--register power-up is low

r_sinapse[1] = DFFEAS(A1L147, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L137 is r_sm~7
A1L137 = (r_sm.s_wait_sinapse & (J1_o_done & ((!r_sinapse[1]) # (!r_sinapse[2]))));


--A1L138 is r_sm~8
A1L138 = (r_sm.s_wait_sinapse & (J1_o_done & (r_sinapse[2] & r_sinapse[1])));


--i_enable is i_enable
i_enable = INPUT();


--A1L140 is Selector1~0
A1L140 = (!r_sm.s_clear & ((r_sm.s_idle) # (i_enable)));


--B1_r_bias[0] is neuron_l1_n0:n0|r_bias[0]
--register power-up is low

B1_r_bias[0] = DFFEAS(B1L198, i_clk,  ,  , B1L52,  ,  ,  ,  );


--r_enable_n0 is r_enable_n0
--register power-up is low

r_enable_n0 = DFFEAS(A1L144, i_clk,  ,  ,  ,  ,  ,  ,  );


--B1_r_sm.s_relu is neuron_l1_n0:n0|r_sm.s_relu
--register power-up is low

B1_r_sm.s_relu = DFFEAS(B1_r_sm.s_bias, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1L74 is neuron_l1_n0:n0|r_relu_in[1]~0
B1L74 = (r_enable_n0 & B1_r_sm.s_relu);


--B1_r_sm.s_wait_relu is neuron_l1_n0:n0|r_sm.s_wait_relu
--register power-up is low

B1_r_sm.s_wait_relu = DFFEAS(B1_r_sm.s_relu, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1L249 is neuron_l1_n0:n0|Selector36~0
B1L249 = (B1_r_sm.s_relu) # ((B1_r_relu_enable & !B1_r_sm.s_wait_relu));


--B1_r_bias[15] is neuron_l1_n0:n0|r_bias[15]
--register power-up is low

B1_r_bias[15] = DFFEAS(B1L68, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[7] is neuron_l1_n0:n0|r_bias[7]
--register power-up is low

B1_r_bias[7] = DFFEAS(B1L199, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[6] is neuron_l1_n0:n0|r_bias[6]
--register power-up is low

B1_r_bias[6] = DFFEAS(B1L200, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[5] is neuron_l1_n0:n0|r_bias[5]
--register power-up is low

B1_r_bias[5] = DFFEAS(B1L201, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[4] is neuron_l1_n0:n0|r_bias[4]
--register power-up is low

B1_r_bias[4] = DFFEAS(B1L202, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[3] is neuron_l1_n0:n0|r_bias[3]
--register power-up is low

B1_r_bias[3] = DFFEAS(B1L203, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[2] is neuron_l1_n0:n0|r_bias[2]
--register power-up is low

B1_r_bias[2] = DFFEAS(B1L204, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[1] is neuron_l1_n0:n0|r_bias[1]
--register power-up is low

B1_r_bias[1] = DFFEAS(B1L205, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[8] is neuron_l1_n0:n0|r_bias[8]
--register power-up is low

B1_r_bias[8] = DFFEAS(B1L206, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[9] is neuron_l1_n0:n0|r_bias[9]
--register power-up is low

B1_r_bias[9] = DFFEAS(B1L207, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[10] is neuron_l1_n0:n0|r_bias[10]
--register power-up is low

B1_r_bias[10] = DFFEAS(B1L208, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[11] is neuron_l1_n0:n0|r_bias[11]
--register power-up is low

B1_r_bias[11] = DFFEAS(B1L209, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[12] is neuron_l1_n0:n0|r_bias[12]
--register power-up is low

B1_r_bias[12] = DFFEAS(B1L210, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[13] is neuron_l1_n0:n0|r_bias[13]
--register power-up is low

B1_r_bias[13] = DFFEAS(B1L211, i_clk,  ,  , B1L52,  ,  ,  ,  );


--B1_r_bias[14] is neuron_l1_n0:n0|r_bias[14]
--register power-up is low

B1_r_bias[14] = DFFEAS(B1L212, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[0] is neuron_l1_n1:n1|r_bias[0]
--register power-up is low

C1_r_bias[0] = DFFEAS(C1L64, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[15] is neuron_l1_n1:n1|r_bias[15]
--register power-up is low

C1_r_bias[15] = DFFEAS(C1L46, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[7] is neuron_l1_n1:n1|r_bias[7]
--register power-up is low

C1_r_bias[7] = DFFEAS(C1L65, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[6] is neuron_l1_n1:n1|r_bias[6]
--register power-up is low

C1_r_bias[6] = DFFEAS(C1L66, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[5] is neuron_l1_n1:n1|r_bias[5]
--register power-up is low

C1_r_bias[5] = DFFEAS(C1L67, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[4] is neuron_l1_n1:n1|r_bias[4]
--register power-up is low

C1_r_bias[4] = DFFEAS(C1L68, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[3] is neuron_l1_n1:n1|r_bias[3]
--register power-up is low

C1_r_bias[3] = DFFEAS(C1L69, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[2] is neuron_l1_n1:n1|r_bias[2]
--register power-up is low

C1_r_bias[2] = DFFEAS(C1L70, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[1] is neuron_l1_n1:n1|r_bias[1]
--register power-up is low

C1_r_bias[1] = DFFEAS(C1L71, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[8] is neuron_l1_n1:n1|r_bias[8]
--register power-up is low

C1_r_bias[8] = DFFEAS(C1L72, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[9] is neuron_l1_n1:n1|r_bias[9]
--register power-up is low

C1_r_bias[9] = DFFEAS(C1L73, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[10] is neuron_l1_n1:n1|r_bias[10]
--register power-up is low

C1_r_bias[10] = DFFEAS(C1L74, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[11] is neuron_l1_n1:n1|r_bias[11]
--register power-up is low

C1_r_bias[11] = DFFEAS(C1L75, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[12] is neuron_l1_n1:n1|r_bias[12]
--register power-up is low

C1_r_bias[12] = DFFEAS(C1L76, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[13] is neuron_l1_n1:n1|r_bias[13]
--register power-up is low

C1_r_bias[13] = DFFEAS(C1L77, i_clk,  ,  , B1L52,  ,  ,  ,  );


--C1_r_bias[14] is neuron_l1_n1:n1|r_bias[14]
--register power-up is low

C1_r_bias[14] = DFFEAS(C1L78, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[0] is neuron_l1_n2:n2|r_bias[0]
--register power-up is low

D1_r_bias[0] = DFFEAS(D1L68, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[15] is neuron_l1_n2:n2|r_bias[15]
--register power-up is low

D1_r_bias[15] = DFFEAS(D1L50, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[7] is neuron_l1_n2:n2|r_bias[7]
--register power-up is low

D1_r_bias[7] = DFFEAS(D1L69, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[6] is neuron_l1_n2:n2|r_bias[6]
--register power-up is low

D1_r_bias[6] = DFFEAS(D1L70, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[5] is neuron_l1_n2:n2|r_bias[5]
--register power-up is low

D1_r_bias[5] = DFFEAS(D1L71, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[4] is neuron_l1_n2:n2|r_bias[4]
--register power-up is low

D1_r_bias[4] = DFFEAS(D1L72, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[3] is neuron_l1_n2:n2|r_bias[3]
--register power-up is low

D1_r_bias[3] = DFFEAS(D1L73, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[2] is neuron_l1_n2:n2|r_bias[2]
--register power-up is low

D1_r_bias[2] = DFFEAS(D1L74, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[1] is neuron_l1_n2:n2|r_bias[1]
--register power-up is low

D1_r_bias[1] = DFFEAS(D1L75, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[8] is neuron_l1_n2:n2|r_bias[8]
--register power-up is low

D1_r_bias[8] = DFFEAS(D1L76, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[9] is neuron_l1_n2:n2|r_bias[9]
--register power-up is low

D1_r_bias[9] = DFFEAS(D1L77, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[10] is neuron_l1_n2:n2|r_bias[10]
--register power-up is low

D1_r_bias[10] = DFFEAS(D1L78, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[11] is neuron_l1_n2:n2|r_bias[11]
--register power-up is low

D1_r_bias[11] = DFFEAS(D1L79, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[12] is neuron_l1_n2:n2|r_bias[12]
--register power-up is low

D1_r_bias[12] = DFFEAS(D1L80, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[13] is neuron_l1_n2:n2|r_bias[13]
--register power-up is low

D1_r_bias[13] = DFFEAS(D1L81, i_clk,  ,  , B1L52,  ,  ,  ,  );


--D1_r_bias[14] is neuron_l1_n2:n2|r_bias[14]
--register power-up is low

D1_r_bias[14] = DFFEAS(D1L82, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[0] is neuron_l1_n3:n3|r_bias[0]
--register power-up is low

E1_r_bias[0] = DFFEAS(E1L70, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[15] is neuron_l1_n3:n3|r_bias[15]
--register power-up is low

E1_r_bias[15] = DFFEAS(E1L52, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[7] is neuron_l1_n3:n3|r_bias[7]
--register power-up is low

E1_r_bias[7] = DFFEAS(E1L71, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[6] is neuron_l1_n3:n3|r_bias[6]
--register power-up is low

E1_r_bias[6] = DFFEAS(E1L72, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[5] is neuron_l1_n3:n3|r_bias[5]
--register power-up is low

E1_r_bias[5] = DFFEAS(E1L73, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[4] is neuron_l1_n3:n3|r_bias[4]
--register power-up is low

E1_r_bias[4] = DFFEAS(E1L74, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[3] is neuron_l1_n3:n3|r_bias[3]
--register power-up is low

E1_r_bias[3] = DFFEAS(E1L75, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[2] is neuron_l1_n3:n3|r_bias[2]
--register power-up is low

E1_r_bias[2] = DFFEAS(E1L76, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[1] is neuron_l1_n3:n3|r_bias[1]
--register power-up is low

E1_r_bias[1] = DFFEAS(E1L77, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[8] is neuron_l1_n3:n3|r_bias[8]
--register power-up is low

E1_r_bias[8] = DFFEAS(E1L78, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[9] is neuron_l1_n3:n3|r_bias[9]
--register power-up is low

E1_r_bias[9] = DFFEAS(E1L79, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[10] is neuron_l1_n3:n3|r_bias[10]
--register power-up is low

E1_r_bias[10] = DFFEAS(E1L80, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[11] is neuron_l1_n3:n3|r_bias[11]
--register power-up is low

E1_r_bias[11] = DFFEAS(E1L81, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[12] is neuron_l1_n3:n3|r_bias[12]
--register power-up is low

E1_r_bias[12] = DFFEAS(E1L82, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[13] is neuron_l1_n3:n3|r_bias[13]
--register power-up is low

E1_r_bias[13] = DFFEAS(E1L83, i_clk,  ,  , B1L52,  ,  ,  ,  );


--E1_r_bias[14] is neuron_l1_n3:n3|r_bias[14]
--register power-up is low

E1_r_bias[14] = DFFEAS(E1L84, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[0] is neuron_l1_n4:n4|r_bias[0]
--register power-up is low

F1_r_bias[0] = DFFEAS(F1L70, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[15] is neuron_l1_n4:n4|r_bias[15]
--register power-up is low

F1_r_bias[15] = DFFEAS(F1L52, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[7] is neuron_l1_n4:n4|r_bias[7]
--register power-up is low

F1_r_bias[7] = DFFEAS(F1L71, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[6] is neuron_l1_n4:n4|r_bias[6]
--register power-up is low

F1_r_bias[6] = DFFEAS(F1L72, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[5] is neuron_l1_n4:n4|r_bias[5]
--register power-up is low

F1_r_bias[5] = DFFEAS(F1L73, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[4] is neuron_l1_n4:n4|r_bias[4]
--register power-up is low

F1_r_bias[4] = DFFEAS(F1L74, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[3] is neuron_l1_n4:n4|r_bias[3]
--register power-up is low

F1_r_bias[3] = DFFEAS(F1L75, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[2] is neuron_l1_n4:n4|r_bias[2]
--register power-up is low

F1_r_bias[2] = DFFEAS(F1L76, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[1] is neuron_l1_n4:n4|r_bias[1]
--register power-up is low

F1_r_bias[1] = DFFEAS(F1L77, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[8] is neuron_l1_n4:n4|r_bias[8]
--register power-up is low

F1_r_bias[8] = DFFEAS(F1L78, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[9] is neuron_l1_n4:n4|r_bias[9]
--register power-up is low

F1_r_bias[9] = DFFEAS(F1L79, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[10] is neuron_l1_n4:n4|r_bias[10]
--register power-up is low

F1_r_bias[10] = DFFEAS(F1L80, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[11] is neuron_l1_n4:n4|r_bias[11]
--register power-up is low

F1_r_bias[11] = DFFEAS(F1L81, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[12] is neuron_l1_n4:n4|r_bias[12]
--register power-up is low

F1_r_bias[12] = DFFEAS(F1L82, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[13] is neuron_l1_n4:n4|r_bias[13]
--register power-up is low

F1_r_bias[13] = DFFEAS(F1L83, i_clk,  ,  , B1L52,  ,  ,  ,  );


--F1_r_bias[14] is neuron_l1_n4:n4|r_bias[14]
--register power-up is low

F1_r_bias[14] = DFFEAS(F1L84, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[0] is neuron_l1_n5:n5|r_bias[0]
--register power-up is low

G1_r_bias[0] = DFFEAS(G1L70, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[15] is neuron_l1_n5:n5|r_bias[15]
--register power-up is low

G1_r_bias[15] = DFFEAS(G1L52, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[7] is neuron_l1_n5:n5|r_bias[7]
--register power-up is low

G1_r_bias[7] = DFFEAS(G1L71, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[6] is neuron_l1_n5:n5|r_bias[6]
--register power-up is low

G1_r_bias[6] = DFFEAS(G1L72, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[5] is neuron_l1_n5:n5|r_bias[5]
--register power-up is low

G1_r_bias[5] = DFFEAS(G1L73, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[4] is neuron_l1_n5:n5|r_bias[4]
--register power-up is low

G1_r_bias[4] = DFFEAS(G1L74, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[3] is neuron_l1_n5:n5|r_bias[3]
--register power-up is low

G1_r_bias[3] = DFFEAS(G1L75, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[2] is neuron_l1_n5:n5|r_bias[2]
--register power-up is low

G1_r_bias[2] = DFFEAS(G1L76, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[1] is neuron_l1_n5:n5|r_bias[1]
--register power-up is low

G1_r_bias[1] = DFFEAS(G1L77, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[8] is neuron_l1_n5:n5|r_bias[8]
--register power-up is low

G1_r_bias[8] = DFFEAS(G1L78, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[9] is neuron_l1_n5:n5|r_bias[9]
--register power-up is low

G1_r_bias[9] = DFFEAS(G1L79, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[10] is neuron_l1_n5:n5|r_bias[10]
--register power-up is low

G1_r_bias[10] = DFFEAS(G1L80, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[11] is neuron_l1_n5:n5|r_bias[11]
--register power-up is low

G1_r_bias[11] = DFFEAS(G1L81, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[12] is neuron_l1_n5:n5|r_bias[12]
--register power-up is low

G1_r_bias[12] = DFFEAS(G1L82, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[13] is neuron_l1_n5:n5|r_bias[13]
--register power-up is low

G1_r_bias[13] = DFFEAS(G1L83, i_clk,  ,  , B1L52,  ,  ,  ,  );


--G1_r_bias[14] is neuron_l1_n5:n5|r_bias[14]
--register power-up is low

G1_r_bias[14] = DFFEAS(G1L84, i_clk,  ,  , B1L52,  ,  ,  ,  );


--A1L141 is Selector2~0
A1L141 = (r_sm.s_get_data) # ((i_enable & !r_sm.s_idle));


--B1_r_sm.s_mac is neuron_l1_n0:n0|r_sm.s_mac
--register power-up is low

B1_r_sm.s_mac = DFFEAS(B1L214, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1_r_sm.s_wait_mac is neuron_l1_n0:n0|r_sm.s_wait_mac
--register power-up is low

B1_r_sm.s_wait_mac = DFFEAS(B1_r_sm.s_mac, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1_r_sm.s_clear is neuron_l1_n0:n0|r_sm.s_clear
--register power-up is low

B1_r_sm.s_clear = DFFEAS(B1_r_sm.s_wait_relu, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1L247 is neuron_l1_n0:n0|Selector35~0
B1L247 = (B1_r_mac_enable & (!B1_r_sm.s_relu & (!B1_r_sm.s_wait_mac & !B1_r_sm.s_clear)));


--B1L248 is neuron_l1_n0:n0|Selector35~1
B1L248 = (B1_r_sm.s_mac) # (B1L247);


--r_sinapse[0] is r_sinapse[0]
--register power-up is low

r_sinapse[0] = DFFEAS(A1L148, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L145 is Selector11~0
A1L145 = (r_sm.s_sinapse & (r_sinapse[2] $ (((r_sinapse[1] & r_sinapse[0])))));


--A1L146 is Selector11~1
A1L146 = (A1L145) # ((r_sinapse[2] & (!r_sm.s_clear & !r_sm.s_sinapse)));


--A1L147 is Selector12~0
A1L147 = (r_sm.s_sinapse & ((r_sinapse[1] $ (r_sinapse[0])))) # (!r_sm.s_sinapse & (!r_sm.s_clear & (r_sinapse[1])));


--J1_r_data_out[-11] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-11]
--register power-up is low

J1_r_data_out[-11] = DFFEAS(J1L144, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[4] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[4]
--register power-up is low

J1_r_data_out[4] = DFFEAS(J1L87, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[3] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[3]
--register power-up is low

J1_r_data_out[3] = DFFEAS(J1L145, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[2] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[2]
--register power-up is low

J1_r_data_out[2] = DFFEAS(J1L146, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[1] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[1]
--register power-up is low

J1_r_data_out[1] = DFFEAS(J1L147, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[0] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[0]
--register power-up is low

J1_r_data_out[0] = DFFEAS(J1L148, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[-1] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-1]
--register power-up is low

J1_r_data_out[-1] = DFFEAS(J1L149, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[-2] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-2]
--register power-up is low

J1_r_data_out[-2] = DFFEAS(J1L150, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[-3] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-3]
--register power-up is low

J1_r_data_out[-3] = DFFEAS(J1L151, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[-4] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-4]
--register power-up is low

J1_r_data_out[-4] = DFFEAS(J1L152, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[-5] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-5]
--register power-up is low

J1_r_data_out[-5] = DFFEAS(J1L153, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[-6] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-6]
--register power-up is low

J1_r_data_out[-6] = DFFEAS(J1L154, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[-7] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-7]
--register power-up is low

J1_r_data_out[-7] = DFFEAS(J1L155, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[-8] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-8]
--register power-up is low

J1_r_data_out[-8] = DFFEAS(J1L156, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[-9] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-9]
--register power-up is low

J1_r_data_out[-9] = DFFEAS(J1L157, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J1_r_data_out[-10] is neuron_l1_n0:n0|mac:mac_n1|r_data_out[-10]
--register power-up is low

J1_r_data_out[-10] = DFFEAS(J1L158, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--B1L198 is neuron_l1_n0:n0|result~0
B1L198 = (J1_r_data_out[-11] & ((B1L29) # (B1L31))) # (!J1_r_data_out[-11] & (B1L29 & B1L31));


--B1_r_sm.s_bias is neuron_l1_n0:n0|r_sm.s_bias
--register power-up is low

B1_r_sm.s_bias = DFFEAS(B1L197, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1L52 is neuron_l1_n0:n0|r_bias[0]~0
B1L52 = (r_enable_n0 & B1_r_sm.s_bias);


--A1L144 is Selector5~0
A1L144 = (r_sm.s_sinapse) # ((r_enable_n0 & !r_sm.s_clear));


--B1L199 is neuron_l1_n0:n0|result~1
B1L199 = (B1L13 & ((B1L29) # (B1L31))) # (!B1L13 & (B1L29 & B1L31));


--B1L200 is neuron_l1_n0:n0|result~2
B1L200 = (B1L11 & ((B1L29) # (B1L31))) # (!B1L11 & (B1L29 & B1L31));


--B1L201 is neuron_l1_n0:n0|result~3
B1L201 = (B1L9 & ((B1L29) # (B1L31))) # (!B1L9 & (B1L29 & B1L31));


--B1L202 is neuron_l1_n0:n0|result~4
B1L202 = (B1L7 & ((B1L29) # (B1L31))) # (!B1L7 & (B1L29 & B1L31));


--B1L203 is neuron_l1_n0:n0|result~5
B1L203 = (B1L5 & ((B1L29) # (B1L31))) # (!B1L5 & (B1L29 & B1L31));


--B1L204 is neuron_l1_n0:n0|result~6
B1L204 = (B1L3 & ((B1L29) # (B1L31))) # (!B1L3 & (B1L29 & B1L31));


--B1L205 is neuron_l1_n0:n0|result~7
B1L205 = (B1L1 & ((B1L29) # (B1L31))) # (!B1L1 & (B1L29 & B1L31));


--B1L206 is neuron_l1_n0:n0|result~8
B1L206 = (B1L15 & ((B1L29) # (B1L31))) # (!B1L15 & (B1L29 & B1L31));


--B1L207 is neuron_l1_n0:n0|result~9
B1L207 = (B1L17 & ((B1L29) # (B1L31))) # (!B1L17 & (B1L29 & B1L31));


--B1L208 is neuron_l1_n0:n0|result~10
B1L208 = (B1L19 & ((B1L29) # (B1L31))) # (!B1L19 & (B1L29 & B1L31));


--B1L209 is neuron_l1_n0:n0|result~11
B1L209 = (B1L21 & ((B1L29) # (B1L31))) # (!B1L21 & (B1L29 & B1L31));


--B1L210 is neuron_l1_n0:n0|result~12
B1L210 = (B1L23 & ((B1L29) # (B1L31))) # (!B1L23 & (B1L29 & B1L31));


--B1L211 is neuron_l1_n0:n0|result~13
B1L211 = (B1L25 & ((B1L29) # (B1L31))) # (!B1L25 & (B1L29 & B1L31));


--B1L212 is neuron_l1_n0:n0|result~14
B1L212 = (B1L27 & ((B1L29) # (B1L31))) # (!B1L27 & (B1L29 & B1L31));


--J2_r_data_out[-11] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-11]
--register power-up is low

J2_r_data_out[-11] = DFFEAS(J2L143, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[4] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[4]
--register power-up is low

J2_r_data_out[4] = DFFEAS(J2L86, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[3] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[3]
--register power-up is low

J2_r_data_out[3] = DFFEAS(J2L144, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[2] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[2]
--register power-up is low

J2_r_data_out[2] = DFFEAS(J2L145, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[1] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[1]
--register power-up is low

J2_r_data_out[1] = DFFEAS(J2L146, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[0] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[0]
--register power-up is low

J2_r_data_out[0] = DFFEAS(J2L147, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[-1] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-1]
--register power-up is low

J2_r_data_out[-1] = DFFEAS(J2L148, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[-2] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-2]
--register power-up is low

J2_r_data_out[-2] = DFFEAS(J2L149, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[-3] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-3]
--register power-up is low

J2_r_data_out[-3] = DFFEAS(J2L150, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[-4] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-4]
--register power-up is low

J2_r_data_out[-4] = DFFEAS(J2L151, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[-5] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-5]
--register power-up is low

J2_r_data_out[-5] = DFFEAS(J2L152, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[-6] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-6]
--register power-up is low

J2_r_data_out[-6] = DFFEAS(J2L153, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[-7] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-7]
--register power-up is low

J2_r_data_out[-7] = DFFEAS(J2L154, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J2_r_data_out[-8] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-8]
--register power-up is low

J2_r_data_out[-8] = DFFEAS(J2L155, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--C1L64 is neuron_l1_n1:n1|result~0
C1L64 = (J2_r_data_out[-11] & ((C1L25) # (C1L27))) # (!J2_r_data_out[-11] & (C1L25 & C1L27));


--C1L65 is neuron_l1_n1:n1|result~1
C1L65 = (C1L9 & ((C1L25) # (C1L27))) # (!C1L9 & (C1L25 & C1L27));


--C1L66 is neuron_l1_n1:n1|result~2
C1L66 = (C1L7 & ((C1L25) # (C1L27))) # (!C1L7 & (C1L25 & C1L27));


--C1L67 is neuron_l1_n1:n1|result~3
C1L67 = (C1L5 & ((C1L25) # (C1L27))) # (!C1L5 & (C1L25 & C1L27));


--C1L68 is neuron_l1_n1:n1|result~4
C1L68 = (C1L3 & ((C1L25) # (C1L27))) # (!C1L3 & (C1L25 & C1L27));


--C1L69 is neuron_l1_n1:n1|result~5
C1L69 = (C1L1 & ((C1L25) # (C1L27))) # (!C1L1 & (C1L25 & C1L27));


--J2_r_data_out[-9] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-9]
--register power-up is low

J2_r_data_out[-9] = DFFEAS(J2L156, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--C1L70 is neuron_l1_n1:n1|result~6
C1L70 = (C1L25 & ((C1L27) # (J2_r_data_out[-9]))) # (!C1L25 & (C1L27 & J2_r_data_out[-9]));


--J2_r_data_out[-10] is neuron_l1_n1:n1|mac:mac_n1|r_data_out[-10]
--register power-up is low

J2_r_data_out[-10] = DFFEAS(J2L157, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--C1L71 is neuron_l1_n1:n1|result~7
C1L71 = (C1L25 & ((C1L27) # (J2_r_data_out[-10]))) # (!C1L25 & (C1L27 & J2_r_data_out[-10]));


--C1L72 is neuron_l1_n1:n1|result~8
C1L72 = (C1L11 & ((C1L25) # (C1L27))) # (!C1L11 & (C1L25 & C1L27));


--C1L73 is neuron_l1_n1:n1|result~9
C1L73 = (C1L13 & ((C1L25) # (C1L27))) # (!C1L13 & (C1L25 & C1L27));


--C1L74 is neuron_l1_n1:n1|result~10
C1L74 = (C1L15 & ((C1L25) # (C1L27))) # (!C1L15 & (C1L25 & C1L27));


--C1L75 is neuron_l1_n1:n1|result~11
C1L75 = (C1L17 & ((C1L25) # (C1L27))) # (!C1L17 & (C1L25 & C1L27));


--C1L76 is neuron_l1_n1:n1|result~12
C1L76 = (C1L19 & ((C1L25) # (C1L27))) # (!C1L19 & (C1L25 & C1L27));


--C1L77 is neuron_l1_n1:n1|result~13
C1L77 = (C1L21 & ((C1L25) # (C1L27))) # (!C1L21 & (C1L25 & C1L27));


--C1L78 is neuron_l1_n1:n1|result~14
C1L78 = (C1L23 & ((C1L25) # (C1L27))) # (!C1L23 & (C1L25 & C1L27));


--J3_r_data_out[-11] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-11]
--register power-up is low

J3_r_data_out[-11] = DFFEAS(J3L143, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[4] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[4]
--register power-up is low

J3_r_data_out[4] = DFFEAS(J3L86, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[3] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[3]
--register power-up is low

J3_r_data_out[3] = DFFEAS(J3L144, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[2] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[2]
--register power-up is low

J3_r_data_out[2] = DFFEAS(J3L145, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[1] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[1]
--register power-up is low

J3_r_data_out[1] = DFFEAS(J3L146, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[0] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[0]
--register power-up is low

J3_r_data_out[0] = DFFEAS(J3L147, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[-1] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-1]
--register power-up is low

J3_r_data_out[-1] = DFFEAS(J3L148, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[-2] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-2]
--register power-up is low

J3_r_data_out[-2] = DFFEAS(J3L149, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[-3] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-3]
--register power-up is low

J3_r_data_out[-3] = DFFEAS(J3L150, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[-4] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-4]
--register power-up is low

J3_r_data_out[-4] = DFFEAS(J3L151, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[-5] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-5]
--register power-up is low

J3_r_data_out[-5] = DFFEAS(J3L152, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[-6] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-6]
--register power-up is low

J3_r_data_out[-6] = DFFEAS(J3L153, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[-7] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-7]
--register power-up is low

J3_r_data_out[-7] = DFFEAS(J3L154, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[-8] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-8]
--register power-up is low

J3_r_data_out[-8] = DFFEAS(J3L155, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[-9] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-9]
--register power-up is low

J3_r_data_out[-9] = DFFEAS(J3L156, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J3_r_data_out[-10] is neuron_l1_n2:n2|mac:mac_n1|r_data_out[-10]
--register power-up is low

J3_r_data_out[-10] = DFFEAS(J3L157, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--D1L68 is neuron_l1_n2:n2|result~0
D1L68 = (J3_r_data_out[-11] & ((D1L29) # (D1L31))) # (!J3_r_data_out[-11] & (D1L29 & D1L31));


--D1L69 is neuron_l1_n2:n2|result~1
D1L69 = (D1L13 & ((D1L29) # (D1L31))) # (!D1L13 & (D1L29 & D1L31));


--D1L70 is neuron_l1_n2:n2|result~2
D1L70 = (D1L11 & ((D1L29) # (D1L31))) # (!D1L11 & (D1L29 & D1L31));


--D1L71 is neuron_l1_n2:n2|result~3
D1L71 = (D1L9 & ((D1L29) # (D1L31))) # (!D1L9 & (D1L29 & D1L31));


--D1L72 is neuron_l1_n2:n2|result~4
D1L72 = (D1L7 & ((D1L29) # (D1L31))) # (!D1L7 & (D1L29 & D1L31));


--D1L73 is neuron_l1_n2:n2|result~5
D1L73 = (D1L5 & ((D1L29) # (D1L31))) # (!D1L5 & (D1L29 & D1L31));


--D1L74 is neuron_l1_n2:n2|result~6
D1L74 = (D1L3 & ((D1L29) # (D1L31))) # (!D1L3 & (D1L29 & D1L31));


--D1L75 is neuron_l1_n2:n2|result~7
D1L75 = (D1L1 & ((D1L29) # (D1L31))) # (!D1L1 & (D1L29 & D1L31));


--D1L76 is neuron_l1_n2:n2|result~8
D1L76 = (D1L15 & ((D1L29) # (D1L31))) # (!D1L15 & (D1L29 & D1L31));


--D1L77 is neuron_l1_n2:n2|result~9
D1L77 = (D1L17 & ((D1L29) # (D1L31))) # (!D1L17 & (D1L29 & D1L31));


--D1L78 is neuron_l1_n2:n2|result~10
D1L78 = (D1L19 & ((D1L29) # (D1L31))) # (!D1L19 & (D1L29 & D1L31));


--D1L79 is neuron_l1_n2:n2|result~11
D1L79 = (D1L21 & ((D1L29) # (D1L31))) # (!D1L21 & (D1L29 & D1L31));


--D1L80 is neuron_l1_n2:n2|result~12
D1L80 = (D1L23 & ((D1L29) # (D1L31))) # (!D1L23 & (D1L29 & D1L31));


--D1L81 is neuron_l1_n2:n2|result~13
D1L81 = (D1L25 & ((D1L29) # (D1L31))) # (!D1L25 & (D1L29 & D1L31));


--D1L82 is neuron_l1_n2:n2|result~14
D1L82 = (D1L27 & ((D1L29) # (D1L31))) # (!D1L27 & (D1L29 & D1L31));


--J4_r_data_out[-11] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-11]
--register power-up is low

J4_r_data_out[-11] = DFFEAS(J4L143, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[4] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[4]
--register power-up is low

J4_r_data_out[4] = DFFEAS(J4L86, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[3] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[3]
--register power-up is low

J4_r_data_out[3] = DFFEAS(J4L144, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[2] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[2]
--register power-up is low

J4_r_data_out[2] = DFFEAS(J4L145, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[1] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[1]
--register power-up is low

J4_r_data_out[1] = DFFEAS(J4L146, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[0] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[0]
--register power-up is low

J4_r_data_out[0] = DFFEAS(J4L147, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[-1] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-1]
--register power-up is low

J4_r_data_out[-1] = DFFEAS(J4L148, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[-2] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-2]
--register power-up is low

J4_r_data_out[-2] = DFFEAS(J4L149, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[-3] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-3]
--register power-up is low

J4_r_data_out[-3] = DFFEAS(J4L150, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[-4] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-4]
--register power-up is low

J4_r_data_out[-4] = DFFEAS(J4L151, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[-5] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-5]
--register power-up is low

J4_r_data_out[-5] = DFFEAS(J4L152, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[-6] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-6]
--register power-up is low

J4_r_data_out[-6] = DFFEAS(J4L153, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[-7] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-7]
--register power-up is low

J4_r_data_out[-7] = DFFEAS(J4L154, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[-8] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-8]
--register power-up is low

J4_r_data_out[-8] = DFFEAS(J4L155, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[-9] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-9]
--register power-up is low

J4_r_data_out[-9] = DFFEAS(J4L156, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J4_r_data_out[-10] is neuron_l1_n3:n3|mac:mac_n1|r_data_out[-10]
--register power-up is low

J4_r_data_out[-10] = DFFEAS(J4L157, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--E1L70 is neuron_l1_n3:n3|result~0
E1L70 = (E1L1 & ((E1L31) # (E1L33))) # (!E1L1 & (E1L31 & E1L33));


--E1L71 is neuron_l1_n3:n3|result~1
E1L71 = (E1L15 & ((E1L31) # (E1L33))) # (!E1L15 & (E1L31 & E1L33));


--E1L72 is neuron_l1_n3:n3|result~2
E1L72 = (E1L13 & ((E1L31) # (E1L33))) # (!E1L13 & (E1L31 & E1L33));


--E1L73 is neuron_l1_n3:n3|result~3
E1L73 = (E1L11 & ((E1L31) # (E1L33))) # (!E1L11 & (E1L31 & E1L33));


--E1L74 is neuron_l1_n3:n3|result~4
E1L74 = (E1L9 & ((E1L31) # (E1L33))) # (!E1L9 & (E1L31 & E1L33));


--E1L75 is neuron_l1_n3:n3|result~5
E1L75 = (E1L7 & ((E1L31) # (E1L33))) # (!E1L7 & (E1L31 & E1L33));


--E1L76 is neuron_l1_n3:n3|result~6
E1L76 = (E1L5 & ((E1L31) # (E1L33))) # (!E1L5 & (E1L31 & E1L33));


--E1L77 is neuron_l1_n3:n3|result~7
E1L77 = (E1L3 & ((E1L31) # (E1L33))) # (!E1L3 & (E1L31 & E1L33));


--E1L78 is neuron_l1_n3:n3|result~8
E1L78 = (E1L17 & ((E1L31) # (E1L33))) # (!E1L17 & (E1L31 & E1L33));


--E1L79 is neuron_l1_n3:n3|result~9
E1L79 = (E1L19 & ((E1L31) # (E1L33))) # (!E1L19 & (E1L31 & E1L33));


--E1L80 is neuron_l1_n3:n3|result~10
E1L80 = (E1L21 & ((E1L31) # (E1L33))) # (!E1L21 & (E1L31 & E1L33));


--E1L81 is neuron_l1_n3:n3|result~11
E1L81 = (E1L23 & ((E1L31) # (E1L33))) # (!E1L23 & (E1L31 & E1L33));


--E1L82 is neuron_l1_n3:n3|result~12
E1L82 = (E1L25 & ((E1L31) # (E1L33))) # (!E1L25 & (E1L31 & E1L33));


--E1L83 is neuron_l1_n3:n3|result~13
E1L83 = (E1L27 & ((E1L31) # (E1L33))) # (!E1L27 & (E1L31 & E1L33));


--E1L84 is neuron_l1_n3:n3|result~14
E1L84 = (E1L29 & ((E1L31) # (E1L33))) # (!E1L29 & (E1L31 & E1L33));


--J5_r_data_out[-11] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-11]
--register power-up is low

J5_r_data_out[-11] = DFFEAS(J5L143, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[4] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[4]
--register power-up is low

J5_r_data_out[4] = DFFEAS(J5L86, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[3] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[3]
--register power-up is low

J5_r_data_out[3] = DFFEAS(J5L144, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[2] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[2]
--register power-up is low

J5_r_data_out[2] = DFFEAS(J5L145, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[1] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[1]
--register power-up is low

J5_r_data_out[1] = DFFEAS(J5L146, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[0] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[0]
--register power-up is low

J5_r_data_out[0] = DFFEAS(J5L147, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[-1] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-1]
--register power-up is low

J5_r_data_out[-1] = DFFEAS(J5L148, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[-2] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-2]
--register power-up is low

J5_r_data_out[-2] = DFFEAS(J5L149, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[-3] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-3]
--register power-up is low

J5_r_data_out[-3] = DFFEAS(J5L150, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[-4] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-4]
--register power-up is low

J5_r_data_out[-4] = DFFEAS(J5L151, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[-5] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-5]
--register power-up is low

J5_r_data_out[-5] = DFFEAS(J5L152, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[-6] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-6]
--register power-up is low

J5_r_data_out[-6] = DFFEAS(J5L153, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[-7] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-7]
--register power-up is low

J5_r_data_out[-7] = DFFEAS(J5L154, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[-8] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-8]
--register power-up is low

J5_r_data_out[-8] = DFFEAS(J5L155, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[-9] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-9]
--register power-up is low

J5_r_data_out[-9] = DFFEAS(J5L156, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J5_r_data_out[-10] is neuron_l1_n4:n4|mac:mac_n1|r_data_out[-10]
--register power-up is low

J5_r_data_out[-10] = DFFEAS(J5L157, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--F1L70 is neuron_l1_n4:n4|result~0
F1L70 = (F1L1 & ((F1L31) # (F1L33))) # (!F1L1 & (F1L31 & F1L33));


--F1L71 is neuron_l1_n4:n4|result~1
F1L71 = (F1L15 & ((F1L31) # (F1L33))) # (!F1L15 & (F1L31 & F1L33));


--F1L72 is neuron_l1_n4:n4|result~2
F1L72 = (F1L13 & ((F1L31) # (F1L33))) # (!F1L13 & (F1L31 & F1L33));


--F1L73 is neuron_l1_n4:n4|result~3
F1L73 = (F1L11 & ((F1L31) # (F1L33))) # (!F1L11 & (F1L31 & F1L33));


--F1L74 is neuron_l1_n4:n4|result~4
F1L74 = (F1L9 & ((F1L31) # (F1L33))) # (!F1L9 & (F1L31 & F1L33));


--F1L75 is neuron_l1_n4:n4|result~5
F1L75 = (F1L7 & ((F1L31) # (F1L33))) # (!F1L7 & (F1L31 & F1L33));


--F1L76 is neuron_l1_n4:n4|result~6
F1L76 = (F1L5 & ((F1L31) # (F1L33))) # (!F1L5 & (F1L31 & F1L33));


--F1L77 is neuron_l1_n4:n4|result~7
F1L77 = (F1L3 & ((F1L31) # (F1L33))) # (!F1L3 & (F1L31 & F1L33));


--F1L78 is neuron_l1_n4:n4|result~8
F1L78 = (F1L17 & ((F1L31) # (F1L33))) # (!F1L17 & (F1L31 & F1L33));


--F1L79 is neuron_l1_n4:n4|result~9
F1L79 = (F1L19 & ((F1L31) # (F1L33))) # (!F1L19 & (F1L31 & F1L33));


--F1L80 is neuron_l1_n4:n4|result~10
F1L80 = (F1L21 & ((F1L31) # (F1L33))) # (!F1L21 & (F1L31 & F1L33));


--F1L81 is neuron_l1_n4:n4|result~11
F1L81 = (F1L23 & ((F1L31) # (F1L33))) # (!F1L23 & (F1L31 & F1L33));


--F1L82 is neuron_l1_n4:n4|result~12
F1L82 = (F1L25 & ((F1L31) # (F1L33))) # (!F1L25 & (F1L31 & F1L33));


--F1L83 is neuron_l1_n4:n4|result~13
F1L83 = (F1L27 & ((F1L31) # (F1L33))) # (!F1L27 & (F1L31 & F1L33));


--F1L84 is neuron_l1_n4:n4|result~14
F1L84 = (F1L29 & ((F1L31) # (F1L33))) # (!F1L29 & (F1L31 & F1L33));


--J6_r_data_out[-11] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-11]
--register power-up is low

J6_r_data_out[-11] = DFFEAS(J6L145, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[4] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[4]
--register power-up is low

J6_r_data_out[4] = DFFEAS(J6L87, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[3] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[3]
--register power-up is low

J6_r_data_out[3] = DFFEAS(J6L146, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[2] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[2]
--register power-up is low

J6_r_data_out[2] = DFFEAS(J6L147, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[1] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[1]
--register power-up is low

J6_r_data_out[1] = DFFEAS(J6L148, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[0] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[0]
--register power-up is low

J6_r_data_out[0] = DFFEAS(J6L149, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[-1] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-1]
--register power-up is low

J6_r_data_out[-1] = DFFEAS(J6L150, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[-2] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-2]
--register power-up is low

J6_r_data_out[-2] = DFFEAS(J6L151, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[-3] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-3]
--register power-up is low

J6_r_data_out[-3] = DFFEAS(J6L152, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[-4] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-4]
--register power-up is low

J6_r_data_out[-4] = DFFEAS(J6L153, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[-5] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-5]
--register power-up is low

J6_r_data_out[-5] = DFFEAS(J6L154, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[-6] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-6]
--register power-up is low

J6_r_data_out[-6] = DFFEAS(J6L155, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[-7] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-7]
--register power-up is low

J6_r_data_out[-7] = DFFEAS(J6L156, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[-8] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-8]
--register power-up is low

J6_r_data_out[-8] = DFFEAS(J6L157, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[-9] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-9]
--register power-up is low

J6_r_data_out[-9] = DFFEAS(J6L158, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--J6_r_data_out[-10] is neuron_l1_n5:n5|mac:mac_n1|r_data_out[-10]
--register power-up is low

J6_r_data_out[-10] = DFFEAS(J6L159, i_clk, !i_rst,  , B1_r_mac_enable,  ,  ,  ,  );


--G1L70 is neuron_l1_n5:n5|result~0
G1L70 = (G1L1 & ((G1L31) # (G1L33))) # (!G1L1 & (G1L31 & G1L33));


--G1L71 is neuron_l1_n5:n5|result~1
G1L71 = (G1L15 & ((G1L31) # (G1L33))) # (!G1L15 & (G1L31 & G1L33));


--G1L72 is neuron_l1_n5:n5|result~2
G1L72 = (G1L13 & ((G1L31) # (G1L33))) # (!G1L13 & (G1L31 & G1L33));


--G1L73 is neuron_l1_n5:n5|result~3
G1L73 = (G1L11 & ((G1L31) # (G1L33))) # (!G1L11 & (G1L31 & G1L33));


--G1L74 is neuron_l1_n5:n5|result~4
G1L74 = (G1L9 & ((G1L31) # (G1L33))) # (!G1L9 & (G1L31 & G1L33));


--G1L75 is neuron_l1_n5:n5|result~5
G1L75 = (G1L7 & ((G1L31) # (G1L33))) # (!G1L7 & (G1L31 & G1L33));


--G1L76 is neuron_l1_n5:n5|result~6
G1L76 = (G1L5 & ((G1L31) # (G1L33))) # (!G1L5 & (G1L31 & G1L33));


--G1L77 is neuron_l1_n5:n5|result~7
G1L77 = (G1L3 & ((G1L31) # (G1L33))) # (!G1L3 & (G1L31 & G1L33));


--G1L78 is neuron_l1_n5:n5|result~8
G1L78 = (G1L17 & ((G1L31) # (G1L33))) # (!G1L17 & (G1L31 & G1L33));


--G1L79 is neuron_l1_n5:n5|result~9
G1L79 = (G1L19 & ((G1L31) # (G1L33))) # (!G1L19 & (G1L31 & G1L33));


--G1L80 is neuron_l1_n5:n5|result~10
G1L80 = (G1L21 & ((G1L31) # (G1L33))) # (!G1L21 & (G1L31 & G1L33));


--G1L81 is neuron_l1_n5:n5|result~11
G1L81 = (G1L23 & ((G1L31) # (G1L33))) # (!G1L23 & (G1L31 & G1L33));


--G1L82 is neuron_l1_n5:n5|result~12
G1L82 = (G1L25 & ((G1L31) # (G1L33))) # (!G1L25 & (G1L31 & G1L33));


--G1L83 is neuron_l1_n5:n5|result~13
G1L83 = (G1L27 & ((G1L31) # (G1L33))) # (!G1L27 & (G1L31 & G1L33));


--G1L84 is neuron_l1_n5:n5|result~14
G1L84 = (G1L29 & ((G1L31) # (G1L33))) # (!G1L29 & (G1L31 & G1L33));


--B1_r_sm.s_wait_weight is neuron_l1_n0:n0|r_sm.s_wait_weight
--register power-up is low

B1_r_sm.s_wait_weight = DFFEAS(B1_r_sm.s_get_weight, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1_r_sm.s_mac_result is neuron_l1_n0:n0|r_sm.s_mac_result
--register power-up is low

B1_r_sm.s_mac_result = DFFEAS(B1_r_sm.s_wait_mac, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1L214 is neuron_l1_n0:n0|Selector2~0
B1L214 = (B1_r_sm.s_wait_weight) # ((B1_r_sm.s_mac_result & !J1_o_done));


--A1L148 is Selector13~0
A1L148 = (r_sm.s_sinapse & ((!r_sinapse[0]))) # (!r_sm.s_sinapse & (!r_sm.s_clear & r_sinapse[0]));


--J1L122 is neuron_l1_n0:n0|mac:mac_n1|result~0
J1L122 = (M1L60 & (M1L64 & (M1L59 & M1L63))) # (!M1L60 & ((M1L64) # ((M1L59) # (M1L63))));


--J1L123 is neuron_l1_n0:n0|mac:mac_n1|result~1
J1L123 = (M1L61 & (M1L62 & (M1L60 & J1L122))) # (!M1L61 & (!M1L62 & (!M1L60 & !J1L122)));


--J1L124 is neuron_l1_n0:n0|mac:mac_n1|result~2
J1L124 = (J1L123 & (M1L44)) # (!J1L123 & ((!M1L64)));


--J1L161 is neuron_l1_n0:n0|mac:mac_n1|rounds~0
J1L161 = (M1_mac_out2) # ((M1L35) # ((M1L38) # (M1L39)));


--J1L162 is neuron_l1_n0:n0|mac:mac_n1|rounds~1
J1L162 = (M1L34) # ((M1L36) # ((M1L40) # (M1L41)));


--J1L163 is neuron_l1_n0:n0|mac:mac_n1|rounds~2
J1L163 = (M1L37) # ((M1L42) # ((J1L161) # (J1L162)));


--J1L159 is neuron_l1_n0:n0|mac:mac_n1|round_overflow~0
J1L159 = (M1L43 & ((J1L124) # (J1L163)));


--J1L108 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-11]~0
J1L108 = (J1L123 & ((J1L159 & (J1L35)) # (!J1L159 & ((M1L44))))) # (!J1L123 & (((M1L44))));


--J1L125 is neuron_l1_n0:n0|mac:mac_n1|result~3
J1L125 = (J1L123 & (M1L58)) # (!J1L123 & ((!M1L64)));


--J1L126 is neuron_l1_n0:n0|mac:mac_n1|result~4
J1L126 = (J1L123 & (M1L57)) # (!J1L123 & ((!M1L64)));


--J1L127 is neuron_l1_n0:n0|mac:mac_n1|result~5
J1L127 = (J1L123 & (M1L56)) # (!J1L123 & ((!M1L64)));


--J1L128 is neuron_l1_n0:n0|mac:mac_n1|result~6
J1L128 = (J1L123 & (M1L55)) # (!J1L123 & ((!M1L64)));


--J1L129 is neuron_l1_n0:n0|mac:mac_n1|result~7
J1L129 = (J1L123 & (M1L54)) # (!J1L123 & ((!M1L64)));


--J1L130 is neuron_l1_n0:n0|mac:mac_n1|result~8
J1L130 = (J1L123 & (M1L53)) # (!J1L123 & ((!M1L64)));


--J1L131 is neuron_l1_n0:n0|mac:mac_n1|result~9
J1L131 = (J1L123 & (M1L52)) # (!J1L123 & ((!M1L64)));


--J1L132 is neuron_l1_n0:n0|mac:mac_n1|result~10
J1L132 = (J1L123 & (M1L51)) # (!J1L123 & ((!M1L64)));


--J1L133 is neuron_l1_n0:n0|mac:mac_n1|result~11
J1L133 = (J1L123 & (M1L50)) # (!J1L123 & ((!M1L64)));


--J1L134 is neuron_l1_n0:n0|mac:mac_n1|result~12
J1L134 = (J1L123 & (M1L49)) # (!J1L123 & ((!M1L64)));


--J1L135 is neuron_l1_n0:n0|mac:mac_n1|result~13
J1L135 = (J1L123 & (M1L48)) # (!J1L123 & ((!M1L64)));


--J1L136 is neuron_l1_n0:n0|mac:mac_n1|result~14
J1L136 = (J1L123 & (M1L47)) # (!J1L123 & ((!M1L64)));


--J1L137 is neuron_l1_n0:n0|mac:mac_n1|result~15
J1L137 = (J1L123 & (M1L46)) # (!J1L123 & ((!M1L64)));


--J1L138 is neuron_l1_n0:n0|mac:mac_n1|result~16
J1L138 = (J1L123 & (M1L45)) # (!J1L123 & ((!M1L64)));


--J1L139 is neuron_l1_n0:n0|mac:mac_n1|result~17
J1L139 = (J1L35) # ((J1L37) # ((J1L39) # (J1L65)));


--J1L140 is neuron_l1_n0:n0|mac:mac_n1|result~18
J1L140 = (J1L41) # ((J1L43) # ((J1L45) # (J1L47)));


--J1L141 is neuron_l1_n0:n0|mac:mac_n1|result~19
J1L141 = (J1L49) # ((J1L51) # ((J1L53) # (J1L55)));


--J1L142 is neuron_l1_n0:n0|mac:mac_n1|result~20
J1L142 = (J1L57) # ((J1L59) # ((J1L61) # (J1L63)));


--J1L143 is neuron_l1_n0:n0|mac:mac_n1|result~21
J1L143 = (J1L139) # ((J1L140) # ((J1L141) # (J1L142)));


--J1L160 is neuron_l1_n0:n0|mac:mac_n1|round_overflow~1
J1L160 = (J1L67 & ((M1L64 $ (J1L65)))) # (!J1L67 & (J1L143 & (M1L64 $ (J1L65))));


--J1L116 is neuron_l1_n0:n0|mac:mac_n1|r_mult[3]~1
J1L116 = (J1L123 & ((!J1L160) # (!J1L159)));


--J1L109 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-11]~2
J1L109 = (J1L116 & (J1L108)) # (!J1L116 & ((!M1L64)));


--J1L117 is neuron_l1_n0:n0|mac:mac_n1|r_mult[3]~3
J1L117 = (J1L123 & (J1L159 & !J1L160));


--J1L120 is neuron_l1_n0:n0|mac:mac_n1|r_mult[4]~4
J1L120 = (J1L117 & (J1L65)) # (!J1L117 & ((M1L64)));


--J1L121 is neuron_l1_n0:n0|mac:mac_n1|r_mult[4]~5
J1L121 = (M1L43 & (J1L123 & ((J1L124) # (J1L163))));


--J1L118 is neuron_l1_n0:n0|mac:mac_n1|r_mult[3]~6
J1L118 = (J1L121 & (J1L63)) # (!J1L121 & ((M1L58)));


--J1L119 is neuron_l1_n0:n0|mac:mac_n1|r_mult[3]~7
J1L119 = (J1L116 & (J1L118)) # (!J1L116 & ((!M1L64)));


--J1L114 is neuron_l1_n0:n0|mac:mac_n1|r_mult[2]~8
J1L114 = (J1L121 & (J1L61)) # (!J1L121 & ((M1L57)));


--J1L115 is neuron_l1_n0:n0|mac:mac_n1|r_mult[2]~9
J1L115 = (J1L116 & (J1L114)) # (!J1L116 & ((!M1L64)));


--J1L112 is neuron_l1_n0:n0|mac:mac_n1|r_mult[1]~10
J1L112 = (J1L121 & (J1L59)) # (!J1L121 & ((M1L56)));


--J1L113 is neuron_l1_n0:n0|mac:mac_n1|r_mult[1]~11
J1L113 = (J1L116 & (J1L112)) # (!J1L116 & ((!M1L64)));


--J1L110 is neuron_l1_n0:n0|mac:mac_n1|r_mult[0]~12
J1L110 = (J1L121 & (J1L57)) # (!J1L121 & ((M1L55)));


--J1L111 is neuron_l1_n0:n0|mac:mac_n1|r_mult[0]~13
J1L111 = (J1L116 & (J1L110)) # (!J1L116 & ((!M1L64)));


--J1L88 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-1]~14
J1L88 = (J1L121 & (J1L55)) # (!J1L121 & ((M1L54)));


--J1L89 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-1]~15
J1L89 = (J1L116 & (J1L88)) # (!J1L116 & ((!M1L64)));


--J1L90 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-2]~16
J1L90 = (J1L121 & (J1L53)) # (!J1L121 & ((M1L53)));


--J1L91 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-2]~17
J1L91 = (J1L116 & (J1L90)) # (!J1L116 & ((!M1L64)));


--J1L92 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-3]~18
J1L92 = (J1L121 & (J1L51)) # (!J1L121 & ((M1L52)));


--J1L93 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-3]~19
J1L93 = (J1L116 & (J1L92)) # (!J1L116 & ((!M1L64)));


--J1L94 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-4]~20
J1L94 = (J1L121 & (J1L49)) # (!J1L121 & ((M1L51)));


--J1L95 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-4]~21
J1L95 = (J1L116 & (J1L94)) # (!J1L116 & ((!M1L64)));


--J1L96 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-5]~22
J1L96 = (J1L121 & (J1L47)) # (!J1L121 & ((M1L50)));


--J1L97 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-5]~23
J1L97 = (J1L116 & (J1L96)) # (!J1L116 & ((!M1L64)));


--J1L98 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-6]~24
J1L98 = (J1L121 & (J1L45)) # (!J1L121 & ((M1L49)));


--J1L99 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-6]~25
J1L99 = (J1L116 & (J1L98)) # (!J1L116 & ((!M1L64)));


--J1L100 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-7]~26
J1L100 = (J1L123 & ((J1L159 & (J1L43)) # (!J1L159 & ((M1L48))))) # (!J1L123 & (((M1L48))));


--J1L101 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-7]~27
J1L101 = (J1L116 & (J1L100)) # (!J1L116 & ((!M1L64)));


--J1L102 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-8]~28
J1L102 = (J1L123 & ((J1L159 & (J1L41)) # (!J1L159 & ((M1L47))))) # (!J1L123 & (((M1L47))));


--J1L103 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-8]~29
J1L103 = (J1L116 & (J1L102)) # (!J1L116 & ((!M1L64)));


--J1L104 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-9]~30
J1L104 = (J1L123 & ((J1L159 & (J1L39)) # (!J1L159 & ((M1L46))))) # (!J1L123 & (((M1L46))));


--J1L105 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-9]~31
J1L105 = (J1L116 & (J1L104)) # (!J1L116 & ((!M1L64)));


--J1L106 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-10]~32
J1L106 = (J1L123 & ((J1L159 & (J1L37)) # (!J1L159 & ((M1L45))))) # (!J1L123 & (((M1L45))));


--J1L107 is neuron_l1_n0:n0|mac:mac_n1|r_mult[-10]~33
J1L107 = (J1L116 & (J1L106)) # (!J1L116 & ((!M1L64)));


--J1L144 is neuron_l1_n0:n0|mac:mac_n1|result~22
J1L144 = (J1L1 & ((J1L31) # (J1L33))) # (!J1L1 & (J1L31 & J1L33));


--J1L145 is neuron_l1_n0:n0|mac:mac_n1|result~23
J1L145 = (J1L29 & ((J1L31) # (J1L33))) # (!J1L29 & (J1L31 & J1L33));


--J1L146 is neuron_l1_n0:n0|mac:mac_n1|result~24
J1L146 = (J1L27 & ((J1L31) # (J1L33))) # (!J1L27 & (J1L31 & J1L33));


--J1L147 is neuron_l1_n0:n0|mac:mac_n1|result~25
J1L147 = (J1L25 & ((J1L31) # (J1L33))) # (!J1L25 & (J1L31 & J1L33));


--J1L148 is neuron_l1_n0:n0|mac:mac_n1|result~26
J1L148 = (J1L23 & ((J1L31) # (J1L33))) # (!J1L23 & (J1L31 & J1L33));


--J1L149 is neuron_l1_n0:n0|mac:mac_n1|result~27
J1L149 = (J1L21 & ((J1L31) # (J1L33))) # (!J1L21 & (J1L31 & J1L33));


--J1L150 is neuron_l1_n0:n0|mac:mac_n1|result~28
J1L150 = (J1L19 & ((J1L31) # (J1L33))) # (!J1L19 & (J1L31 & J1L33));


--J1L151 is neuron_l1_n0:n0|mac:mac_n1|result~29
J1L151 = (J1L17 & ((J1L31) # (J1L33))) # (!J1L17 & (J1L31 & J1L33));


--J1L152 is neuron_l1_n0:n0|mac:mac_n1|result~30
J1L152 = (J1L15 & ((J1L31) # (J1L33))) # (!J1L15 & (J1L31 & J1L33));


--J1L153 is neuron_l1_n0:n0|mac:mac_n1|result~31
J1L153 = (J1L13 & ((J1L31) # (J1L33))) # (!J1L13 & (J1L31 & J1L33));


--J1L154 is neuron_l1_n0:n0|mac:mac_n1|result~32
J1L154 = (J1L11 & ((J1L31) # (J1L33))) # (!J1L11 & (J1L31 & J1L33));


--J1L155 is neuron_l1_n0:n0|mac:mac_n1|result~33
J1L155 = (J1L9 & ((J1L31) # (J1L33))) # (!J1L9 & (J1L31 & J1L33));


--J1L156 is neuron_l1_n0:n0|mac:mac_n1|result~34
J1L156 = (J1L7 & ((J1L31) # (J1L33))) # (!J1L7 & (J1L31 & J1L33));


--J1L157 is neuron_l1_n0:n0|mac:mac_n1|result~35
J1L157 = (J1L5 & ((J1L31) # (J1L33))) # (!J1L5 & (J1L31 & J1L33));


--J1L158 is neuron_l1_n0:n0|mac:mac_n1|result~36
J1L158 = (J1L3 & ((J1L31) # (J1L33))) # (!J1L3 & (J1L31 & J1L33));


--B1L33 is neuron_l1_n0:n0|LessThan0~0
B1L33 = (!B1_r_sinapse_count[17] & (!B1_r_sinapse_count[18] & (!B1_r_sinapse_count[19] & !B1_r_sinapse_count[20])));


--B1L34 is neuron_l1_n0:n0|LessThan0~1
B1L34 = (!B1_r_sinapse_count[3] & (!B1_r_sinapse_count[4] & ((!B1_r_sinapse_count[2]) # (!B1_r_sinapse_count[1]))));


--B1L35 is neuron_l1_n0:n0|LessThan0~2
B1L35 = (!B1_r_sinapse_count[5] & (!B1_r_sinapse_count[6] & (!B1_r_sinapse_count[7] & !B1_r_sinapse_count[8])));


--B1L36 is neuron_l1_n0:n0|LessThan0~3
B1L36 = (!B1_r_sinapse_count[9] & (!B1_r_sinapse_count[10] & (!B1_r_sinapse_count[11] & !B1_r_sinapse_count[12])));


--B1L37 is neuron_l1_n0:n0|LessThan0~4
B1L37 = (!B1_r_sinapse_count[13] & (!B1_r_sinapse_count[14] & (!B1_r_sinapse_count[15] & !B1_r_sinapse_count[16])));


--B1L38 is neuron_l1_n0:n0|LessThan0~5
B1L38 = (B1L34 & (B1L35 & (B1L36 & B1L37)));


--B1L39 is neuron_l1_n0:n0|LessThan0~6
B1L39 = (!B1_r_sinapse_count[21] & (!B1_r_sinapse_count[22] & (!B1_r_sinapse_count[23] & !B1_r_sinapse_count[24])));


--B1L40 is neuron_l1_n0:n0|LessThan0~7
B1L40 = (!B1_r_sinapse_count[25] & (!B1_r_sinapse_count[26] & (!B1_r_sinapse_count[27] & !B1_r_sinapse_count[28])));


--B1L41 is neuron_l1_n0:n0|LessThan0~8
B1L41 = (B1L39 & (B1L40 & (!B1_r_sinapse_count[29] & !B1_r_sinapse_count[30])));


--B1L42 is neuron_l1_n0:n0|LessThan0~9
B1L42 = (B1_r_sinapse_count[31]) # ((B1L33 & (B1L38 & B1L41)));


--B1L197 is neuron_l1_n0:n0|r_sm~12
B1L197 = (!B1L42 & (J1_o_done & B1_r_sm.s_mac_result));


--J2L121 is neuron_l1_n1:n1|mac:mac_n1|result~0
J2L121 = (M2L60 & (M2L64 & (M2L59 & M2L63))) # (!M2L60 & ((M2L64) # ((M2L59) # (M2L63))));


--J2L122 is neuron_l1_n1:n1|mac:mac_n1|result~1
J2L122 = (M2L61 & (M2L62 & (M2L60 & J2L121))) # (!M2L61 & (!M2L62 & (!M2L60 & !J2L121)));


--J2L123 is neuron_l1_n1:n1|mac:mac_n1|result~2
J2L123 = (J2L122 & (M2L44)) # (!J2L122 & ((!M2L64)));


--J2L160 is neuron_l1_n1:n1|mac:mac_n1|rounds~0
J2L160 = (M2_mac_out2) # ((M2L35) # ((M2L38) # (M2L39)));


--J2L161 is neuron_l1_n1:n1|mac:mac_n1|rounds~1
J2L161 = (M2L34) # ((M2L36) # ((M2L40) # (M2L41)));


--J2L162 is neuron_l1_n1:n1|mac:mac_n1|rounds~2
J2L162 = (M2L37) # ((M2L42) # ((J2L160) # (J2L161)));


--J2L158 is neuron_l1_n1:n1|mac:mac_n1|round_overflow~0
J2L158 = (M2L43 & ((J2L123) # (J2L162)));


--J2L107 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-11]~0
J2L107 = (J2L122 & ((J2L158 & (J2L35)) # (!J2L158 & ((M2L44))))) # (!J2L122 & (((M2L44))));


--J2L124 is neuron_l1_n1:n1|mac:mac_n1|result~3
J2L124 = (J2L122 & (M2L58)) # (!J2L122 & ((!M2L64)));


--J2L125 is neuron_l1_n1:n1|mac:mac_n1|result~4
J2L125 = (J2L122 & (M2L57)) # (!J2L122 & ((!M2L64)));


--J2L126 is neuron_l1_n1:n1|mac:mac_n1|result~5
J2L126 = (J2L122 & (M2L56)) # (!J2L122 & ((!M2L64)));


--J2L127 is neuron_l1_n1:n1|mac:mac_n1|result~6
J2L127 = (J2L122 & (M2L55)) # (!J2L122 & ((!M2L64)));


--J2L128 is neuron_l1_n1:n1|mac:mac_n1|result~7
J2L128 = (J2L122 & (M2L54)) # (!J2L122 & ((!M2L64)));


--J2L129 is neuron_l1_n1:n1|mac:mac_n1|result~8
J2L129 = (J2L122 & (M2L53)) # (!J2L122 & ((!M2L64)));


--J2L130 is neuron_l1_n1:n1|mac:mac_n1|result~9
J2L130 = (J2L122 & (M2L52)) # (!J2L122 & ((!M2L64)));


--J2L131 is neuron_l1_n1:n1|mac:mac_n1|result~10
J2L131 = (J2L122 & (M2L51)) # (!J2L122 & ((!M2L64)));


--J2L132 is neuron_l1_n1:n1|mac:mac_n1|result~11
J2L132 = (J2L122 & (M2L50)) # (!J2L122 & ((!M2L64)));


--J2L133 is neuron_l1_n1:n1|mac:mac_n1|result~12
J2L133 = (J2L122 & (M2L49)) # (!J2L122 & ((!M2L64)));


--J2L134 is neuron_l1_n1:n1|mac:mac_n1|result~13
J2L134 = (J2L122 & (M2L48)) # (!J2L122 & ((!M2L64)));


--J2L135 is neuron_l1_n1:n1|mac:mac_n1|result~14
J2L135 = (J2L122 & (M2L47)) # (!J2L122 & ((!M2L64)));


--J2L136 is neuron_l1_n1:n1|mac:mac_n1|result~15
J2L136 = (J2L122 & (M2L46)) # (!J2L122 & ((!M2L64)));


--J2L137 is neuron_l1_n1:n1|mac:mac_n1|result~16
J2L137 = (J2L122 & (M2L45)) # (!J2L122 & ((!M2L64)));


--J2L138 is neuron_l1_n1:n1|mac:mac_n1|result~17
J2L138 = (J2L35) # ((J2L37) # ((J2L39) # (J2L65)));


--J2L139 is neuron_l1_n1:n1|mac:mac_n1|result~18
J2L139 = (J2L41) # ((J2L43) # ((J2L45) # (J2L47)));


--J2L140 is neuron_l1_n1:n1|mac:mac_n1|result~19
J2L140 = (J2L49) # ((J2L51) # ((J2L53) # (J2L55)));


--J2L141 is neuron_l1_n1:n1|mac:mac_n1|result~20
J2L141 = (J2L57) # ((J2L59) # ((J2L61) # (J2L63)));


--J2L142 is neuron_l1_n1:n1|mac:mac_n1|result~21
J2L142 = (J2L138) # ((J2L139) # ((J2L140) # (J2L141)));


--J2L159 is neuron_l1_n1:n1|mac:mac_n1|round_overflow~1
J2L159 = (J2L67 & ((M2L64 $ (J2L65)))) # (!J2L67 & (J2L142 & (M2L64 $ (J2L65))));


--J2L115 is neuron_l1_n1:n1|mac:mac_n1|r_mult[3]~1
J2L115 = (J2L122 & ((!J2L159) # (!J2L158)));


--J2L108 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-11]~2
J2L108 = (J2L115 & (J2L107)) # (!J2L115 & ((!M2L64)));


--J2L116 is neuron_l1_n1:n1|mac:mac_n1|r_mult[3]~3
J2L116 = (J2L122 & (J2L158 & !J2L159));


--J2L119 is neuron_l1_n1:n1|mac:mac_n1|r_mult[4]~4
J2L119 = (J2L116 & (J2L65)) # (!J2L116 & ((M2L64)));


--J2L120 is neuron_l1_n1:n1|mac:mac_n1|r_mult[4]~5
J2L120 = (M2L43 & (J2L122 & ((J2L123) # (J2L162))));


--J2L117 is neuron_l1_n1:n1|mac:mac_n1|r_mult[3]~6
J2L117 = (J2L120 & (J2L63)) # (!J2L120 & ((M2L58)));


--J2L118 is neuron_l1_n1:n1|mac:mac_n1|r_mult[3]~7
J2L118 = (J2L115 & (J2L117)) # (!J2L115 & ((!M2L64)));


--J2L113 is neuron_l1_n1:n1|mac:mac_n1|r_mult[2]~8
J2L113 = (J2L120 & (J2L61)) # (!J2L120 & ((M2L57)));


--J2L114 is neuron_l1_n1:n1|mac:mac_n1|r_mult[2]~9
J2L114 = (J2L115 & (J2L113)) # (!J2L115 & ((!M2L64)));


--J2L111 is neuron_l1_n1:n1|mac:mac_n1|r_mult[1]~10
J2L111 = (J2L120 & (J2L59)) # (!J2L120 & ((M2L56)));


--J2L112 is neuron_l1_n1:n1|mac:mac_n1|r_mult[1]~11
J2L112 = (J2L115 & (J2L111)) # (!J2L115 & ((!M2L64)));


--J2L109 is neuron_l1_n1:n1|mac:mac_n1|r_mult[0]~12
J2L109 = (J2L120 & (J2L57)) # (!J2L120 & ((M2L55)));


--J2L110 is neuron_l1_n1:n1|mac:mac_n1|r_mult[0]~13
J2L110 = (J2L115 & (J2L109)) # (!J2L115 & ((!M2L64)));


--J2L87 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-1]~14
J2L87 = (J2L120 & (J2L55)) # (!J2L120 & ((M2L54)));


--J2L88 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-1]~15
J2L88 = (J2L115 & (J2L87)) # (!J2L115 & ((!M2L64)));


--J2L89 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-2]~16
J2L89 = (J2L120 & (J2L53)) # (!J2L120 & ((M2L53)));


--J2L90 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-2]~17
J2L90 = (J2L115 & (J2L89)) # (!J2L115 & ((!M2L64)));


--J2L91 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-3]~18
J2L91 = (J2L120 & (J2L51)) # (!J2L120 & ((M2L52)));


--J2L92 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-3]~19
J2L92 = (J2L115 & (J2L91)) # (!J2L115 & ((!M2L64)));


--J2L93 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-4]~20
J2L93 = (J2L120 & (J2L49)) # (!J2L120 & ((M2L51)));


--J2L94 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-4]~21
J2L94 = (J2L115 & (J2L93)) # (!J2L115 & ((!M2L64)));


--J2L95 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-5]~22
J2L95 = (J2L120 & (J2L47)) # (!J2L120 & ((M2L50)));


--J2L96 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-5]~23
J2L96 = (J2L115 & (J2L95)) # (!J2L115 & ((!M2L64)));


--J2L97 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-6]~24
J2L97 = (J2L120 & (J2L45)) # (!J2L120 & ((M2L49)));


--J2L98 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-6]~25
J2L98 = (J2L115 & (J2L97)) # (!J2L115 & ((!M2L64)));


--J2L99 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-7]~26
J2L99 = (J2L122 & ((J2L158 & (J2L43)) # (!J2L158 & ((M2L48))))) # (!J2L122 & (((M2L48))));


--J2L100 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-7]~27
J2L100 = (J2L115 & (J2L99)) # (!J2L115 & ((!M2L64)));


--J2L101 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-8]~28
J2L101 = (J2L122 & ((J2L158 & (J2L41)) # (!J2L158 & ((M2L47))))) # (!J2L122 & (((M2L47))));


--J2L102 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-8]~29
J2L102 = (J2L115 & (J2L101)) # (!J2L115 & ((!M2L64)));


--J2L103 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-9]~30
J2L103 = (J2L122 & ((J2L158 & (J2L39)) # (!J2L158 & ((M2L46))))) # (!J2L122 & (((M2L46))));


--J2L104 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-9]~31
J2L104 = (J2L115 & (J2L103)) # (!J2L115 & ((!M2L64)));


--J2L105 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-10]~32
J2L105 = (J2L122 & ((J2L158 & (J2L37)) # (!J2L158 & ((M2L45))))) # (!J2L122 & (((M2L45))));


--J2L106 is neuron_l1_n1:n1|mac:mac_n1|r_mult[-10]~33
J2L106 = (J2L115 & (J2L105)) # (!J2L115 & ((!M2L64)));


--J2L143 is neuron_l1_n1:n1|mac:mac_n1|result~22
J2L143 = (J2L1 & ((J2L31) # (J2L33))) # (!J2L1 & (J2L31 & J2L33));


--J2L144 is neuron_l1_n1:n1|mac:mac_n1|result~23
J2L144 = (J2L29 & ((J2L31) # (J2L33))) # (!J2L29 & (J2L31 & J2L33));


--J2L145 is neuron_l1_n1:n1|mac:mac_n1|result~24
J2L145 = (J2L27 & ((J2L31) # (J2L33))) # (!J2L27 & (J2L31 & J2L33));


--J2L146 is neuron_l1_n1:n1|mac:mac_n1|result~25
J2L146 = (J2L25 & ((J2L31) # (J2L33))) # (!J2L25 & (J2L31 & J2L33));


--J2L147 is neuron_l1_n1:n1|mac:mac_n1|result~26
J2L147 = (J2L23 & ((J2L31) # (J2L33))) # (!J2L23 & (J2L31 & J2L33));


--J2L148 is neuron_l1_n1:n1|mac:mac_n1|result~27
J2L148 = (J2L21 & ((J2L31) # (J2L33))) # (!J2L21 & (J2L31 & J2L33));


--J2L149 is neuron_l1_n1:n1|mac:mac_n1|result~28
J2L149 = (J2L19 & ((J2L31) # (J2L33))) # (!J2L19 & (J2L31 & J2L33));


--J2L150 is neuron_l1_n1:n1|mac:mac_n1|result~29
J2L150 = (J2L17 & ((J2L31) # (J2L33))) # (!J2L17 & (J2L31 & J2L33));


--J2L151 is neuron_l1_n1:n1|mac:mac_n1|result~30
J2L151 = (J2L15 & ((J2L31) # (J2L33))) # (!J2L15 & (J2L31 & J2L33));


--J2L152 is neuron_l1_n1:n1|mac:mac_n1|result~31
J2L152 = (J2L13 & ((J2L31) # (J2L33))) # (!J2L13 & (J2L31 & J2L33));


--J2L153 is neuron_l1_n1:n1|mac:mac_n1|result~32
J2L153 = (J2L11 & ((J2L31) # (J2L33))) # (!J2L11 & (J2L31 & J2L33));


--J2L154 is neuron_l1_n1:n1|mac:mac_n1|result~33
J2L154 = (J2L9 & ((J2L31) # (J2L33))) # (!J2L9 & (J2L31 & J2L33));


--J2L155 is neuron_l1_n1:n1|mac:mac_n1|result~34
J2L155 = (J2L7 & ((J2L31) # (J2L33))) # (!J2L7 & (J2L31 & J2L33));


--J2L156 is neuron_l1_n1:n1|mac:mac_n1|result~35
J2L156 = (J2L5 & ((J2L31) # (J2L33))) # (!J2L5 & (J2L31 & J2L33));


--J2L157 is neuron_l1_n1:n1|mac:mac_n1|result~36
J2L157 = (J2L3 & ((J2L31) # (J2L33))) # (!J2L3 & (J2L31 & J2L33));


--J3L121 is neuron_l1_n2:n2|mac:mac_n1|result~0
J3L121 = (M3L60 & (M3L64 & (M3L59 & M3L63))) # (!M3L60 & ((M3L64) # ((M3L59) # (M3L63))));


--J3L122 is neuron_l1_n2:n2|mac:mac_n1|result~1
J3L122 = (M3L61 & (M3L62 & (M3L60 & J3L121))) # (!M3L61 & (!M3L62 & (!M3L60 & !J3L121)));


--J3L123 is neuron_l1_n2:n2|mac:mac_n1|result~2
J3L123 = (J3L122 & (M3L44)) # (!J3L122 & ((!M3L64)));


--J3L160 is neuron_l1_n2:n2|mac:mac_n1|rounds~0
J3L160 = (M3_mac_out2) # ((M3L35) # ((M3L38) # (M3L39)));


--J3L161 is neuron_l1_n2:n2|mac:mac_n1|rounds~1
J3L161 = (M3L34) # ((M3L36) # ((M3L40) # (M3L41)));


--J3L162 is neuron_l1_n2:n2|mac:mac_n1|rounds~2
J3L162 = (M3L37) # ((M3L42) # ((J3L160) # (J3L161)));


--J3L158 is neuron_l1_n2:n2|mac:mac_n1|round_overflow~0
J3L158 = (M3L43 & ((J3L123) # (J3L162)));


--J3L107 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-11]~0
J3L107 = (J3L122 & ((J3L158 & (J3L35)) # (!J3L158 & ((M3L44))))) # (!J3L122 & (((M3L44))));


--J3L124 is neuron_l1_n2:n2|mac:mac_n1|result~3
J3L124 = (J3L122 & (M3L58)) # (!J3L122 & ((!M3L64)));


--J3L125 is neuron_l1_n2:n2|mac:mac_n1|result~4
J3L125 = (J3L122 & (M3L57)) # (!J3L122 & ((!M3L64)));


--J3L126 is neuron_l1_n2:n2|mac:mac_n1|result~5
J3L126 = (J3L122 & (M3L56)) # (!J3L122 & ((!M3L64)));


--J3L127 is neuron_l1_n2:n2|mac:mac_n1|result~6
J3L127 = (J3L122 & (M3L55)) # (!J3L122 & ((!M3L64)));


--J3L128 is neuron_l1_n2:n2|mac:mac_n1|result~7
J3L128 = (J3L122 & (M3L54)) # (!J3L122 & ((!M3L64)));


--J3L129 is neuron_l1_n2:n2|mac:mac_n1|result~8
J3L129 = (J3L122 & (M3L53)) # (!J3L122 & ((!M3L64)));


--J3L130 is neuron_l1_n2:n2|mac:mac_n1|result~9
J3L130 = (J3L122 & (M3L52)) # (!J3L122 & ((!M3L64)));


--J3L131 is neuron_l1_n2:n2|mac:mac_n1|result~10
J3L131 = (J3L122 & (M3L51)) # (!J3L122 & ((!M3L64)));


--J3L132 is neuron_l1_n2:n2|mac:mac_n1|result~11
J3L132 = (J3L122 & (M3L50)) # (!J3L122 & ((!M3L64)));


--J3L133 is neuron_l1_n2:n2|mac:mac_n1|result~12
J3L133 = (J3L122 & (M3L49)) # (!J3L122 & ((!M3L64)));


--J3L134 is neuron_l1_n2:n2|mac:mac_n1|result~13
J3L134 = (J3L122 & (M3L48)) # (!J3L122 & ((!M3L64)));


--J3L135 is neuron_l1_n2:n2|mac:mac_n1|result~14
J3L135 = (J3L122 & (M3L47)) # (!J3L122 & ((!M3L64)));


--J3L136 is neuron_l1_n2:n2|mac:mac_n1|result~15
J3L136 = (J3L122 & (M3L46)) # (!J3L122 & ((!M3L64)));


--J3L137 is neuron_l1_n2:n2|mac:mac_n1|result~16
J3L137 = (J3L122 & (M3L45)) # (!J3L122 & ((!M3L64)));


--J3L138 is neuron_l1_n2:n2|mac:mac_n1|result~17
J3L138 = (J3L35) # ((J3L37) # ((J3L39) # (J3L65)));


--J3L139 is neuron_l1_n2:n2|mac:mac_n1|result~18
J3L139 = (J3L41) # ((J3L43) # ((J3L45) # (J3L47)));


--J3L140 is neuron_l1_n2:n2|mac:mac_n1|result~19
J3L140 = (J3L49) # ((J3L51) # ((J3L53) # (J3L55)));


--J3L141 is neuron_l1_n2:n2|mac:mac_n1|result~20
J3L141 = (J3L57) # ((J3L59) # ((J3L61) # (J3L63)));


--J3L142 is neuron_l1_n2:n2|mac:mac_n1|result~21
J3L142 = (J3L138) # ((J3L139) # ((J3L140) # (J3L141)));


--J3L159 is neuron_l1_n2:n2|mac:mac_n1|round_overflow~1
J3L159 = (J3L67 & ((M3L64 $ (J3L65)))) # (!J3L67 & (J3L142 & (M3L64 $ (J3L65))));


--J3L115 is neuron_l1_n2:n2|mac:mac_n1|r_mult[3]~1
J3L115 = (J3L122 & ((!J3L159) # (!J3L158)));


--J3L108 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-11]~2
J3L108 = (J3L115 & (J3L107)) # (!J3L115 & ((!M3L64)));


--J3L116 is neuron_l1_n2:n2|mac:mac_n1|r_mult[3]~3
J3L116 = (J3L122 & (J3L158 & !J3L159));


--J3L119 is neuron_l1_n2:n2|mac:mac_n1|r_mult[4]~4
J3L119 = (J3L116 & (J3L65)) # (!J3L116 & ((M3L64)));


--J3L120 is neuron_l1_n2:n2|mac:mac_n1|r_mult[4]~5
J3L120 = (M3L43 & (J3L122 & ((J3L123) # (J3L162))));


--J3L117 is neuron_l1_n2:n2|mac:mac_n1|r_mult[3]~6
J3L117 = (J3L120 & (J3L63)) # (!J3L120 & ((M3L58)));


--J3L118 is neuron_l1_n2:n2|mac:mac_n1|r_mult[3]~7
J3L118 = (J3L115 & (J3L117)) # (!J3L115 & ((!M3L64)));


--J3L113 is neuron_l1_n2:n2|mac:mac_n1|r_mult[2]~8
J3L113 = (J3L120 & (J3L61)) # (!J3L120 & ((M3L57)));


--J3L114 is neuron_l1_n2:n2|mac:mac_n1|r_mult[2]~9
J3L114 = (J3L115 & (J3L113)) # (!J3L115 & ((!M3L64)));


--J3L111 is neuron_l1_n2:n2|mac:mac_n1|r_mult[1]~10
J3L111 = (J3L120 & (J3L59)) # (!J3L120 & ((M3L56)));


--J3L112 is neuron_l1_n2:n2|mac:mac_n1|r_mult[1]~11
J3L112 = (J3L115 & (J3L111)) # (!J3L115 & ((!M3L64)));


--J3L109 is neuron_l1_n2:n2|mac:mac_n1|r_mult[0]~12
J3L109 = (J3L120 & (J3L57)) # (!J3L120 & ((M3L55)));


--J3L110 is neuron_l1_n2:n2|mac:mac_n1|r_mult[0]~13
J3L110 = (J3L115 & (J3L109)) # (!J3L115 & ((!M3L64)));


--J3L87 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-1]~14
J3L87 = (J3L120 & (J3L55)) # (!J3L120 & ((M3L54)));


--J3L88 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-1]~15
J3L88 = (J3L115 & (J3L87)) # (!J3L115 & ((!M3L64)));


--J3L89 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-2]~16
J3L89 = (J3L120 & (J3L53)) # (!J3L120 & ((M3L53)));


--J3L90 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-2]~17
J3L90 = (J3L115 & (J3L89)) # (!J3L115 & ((!M3L64)));


--J3L91 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-3]~18
J3L91 = (J3L120 & (J3L51)) # (!J3L120 & ((M3L52)));


--J3L92 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-3]~19
J3L92 = (J3L115 & (J3L91)) # (!J3L115 & ((!M3L64)));


--J3L93 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-4]~20
J3L93 = (J3L120 & (J3L49)) # (!J3L120 & ((M3L51)));


--J3L94 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-4]~21
J3L94 = (J3L115 & (J3L93)) # (!J3L115 & ((!M3L64)));


--J3L95 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-5]~22
J3L95 = (J3L120 & (J3L47)) # (!J3L120 & ((M3L50)));


--J3L96 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-5]~23
J3L96 = (J3L115 & (J3L95)) # (!J3L115 & ((!M3L64)));


--J3L97 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-6]~24
J3L97 = (J3L120 & (J3L45)) # (!J3L120 & ((M3L49)));


--J3L98 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-6]~25
J3L98 = (J3L115 & (J3L97)) # (!J3L115 & ((!M3L64)));


--J3L99 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-7]~26
J3L99 = (J3L122 & ((J3L158 & (J3L43)) # (!J3L158 & ((M3L48))))) # (!J3L122 & (((M3L48))));


--J3L100 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-7]~27
J3L100 = (J3L115 & (J3L99)) # (!J3L115 & ((!M3L64)));


--J3L101 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-8]~28
J3L101 = (J3L122 & ((J3L158 & (J3L41)) # (!J3L158 & ((M3L47))))) # (!J3L122 & (((M3L47))));


--J3L102 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-8]~29
J3L102 = (J3L115 & (J3L101)) # (!J3L115 & ((!M3L64)));


--J3L103 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-9]~30
J3L103 = (J3L122 & ((J3L158 & (J3L39)) # (!J3L158 & ((M3L46))))) # (!J3L122 & (((M3L46))));


--J3L104 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-9]~31
J3L104 = (J3L115 & (J3L103)) # (!J3L115 & ((!M3L64)));


--J3L105 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-10]~32
J3L105 = (J3L122 & ((J3L158 & (J3L37)) # (!J3L158 & ((M3L45))))) # (!J3L122 & (((M3L45))));


--J3L106 is neuron_l1_n2:n2|mac:mac_n1|r_mult[-10]~33
J3L106 = (J3L115 & (J3L105)) # (!J3L115 & ((!M3L64)));


--J3L143 is neuron_l1_n2:n2|mac:mac_n1|result~22
J3L143 = (J3L1 & ((J3L31) # (J3L33))) # (!J3L1 & (J3L31 & J3L33));


--J3L144 is neuron_l1_n2:n2|mac:mac_n1|result~23
J3L144 = (J3L29 & ((J3L31) # (J3L33))) # (!J3L29 & (J3L31 & J3L33));


--J3L145 is neuron_l1_n2:n2|mac:mac_n1|result~24
J3L145 = (J3L27 & ((J3L31) # (J3L33))) # (!J3L27 & (J3L31 & J3L33));


--J3L146 is neuron_l1_n2:n2|mac:mac_n1|result~25
J3L146 = (J3L25 & ((J3L31) # (J3L33))) # (!J3L25 & (J3L31 & J3L33));


--J3L147 is neuron_l1_n2:n2|mac:mac_n1|result~26
J3L147 = (J3L23 & ((J3L31) # (J3L33))) # (!J3L23 & (J3L31 & J3L33));


--J3L148 is neuron_l1_n2:n2|mac:mac_n1|result~27
J3L148 = (J3L21 & ((J3L31) # (J3L33))) # (!J3L21 & (J3L31 & J3L33));


--J3L149 is neuron_l1_n2:n2|mac:mac_n1|result~28
J3L149 = (J3L19 & ((J3L31) # (J3L33))) # (!J3L19 & (J3L31 & J3L33));


--J3L150 is neuron_l1_n2:n2|mac:mac_n1|result~29
J3L150 = (J3L17 & ((J3L31) # (J3L33))) # (!J3L17 & (J3L31 & J3L33));


--J3L151 is neuron_l1_n2:n2|mac:mac_n1|result~30
J3L151 = (J3L15 & ((J3L31) # (J3L33))) # (!J3L15 & (J3L31 & J3L33));


--J3L152 is neuron_l1_n2:n2|mac:mac_n1|result~31
J3L152 = (J3L13 & ((J3L31) # (J3L33))) # (!J3L13 & (J3L31 & J3L33));


--J3L153 is neuron_l1_n2:n2|mac:mac_n1|result~32
J3L153 = (J3L11 & ((J3L31) # (J3L33))) # (!J3L11 & (J3L31 & J3L33));


--J3L154 is neuron_l1_n2:n2|mac:mac_n1|result~33
J3L154 = (J3L9 & ((J3L31) # (J3L33))) # (!J3L9 & (J3L31 & J3L33));


--J3L155 is neuron_l1_n2:n2|mac:mac_n1|result~34
J3L155 = (J3L7 & ((J3L31) # (J3L33))) # (!J3L7 & (J3L31 & J3L33));


--J3L156 is neuron_l1_n2:n2|mac:mac_n1|result~35
J3L156 = (J3L5 & ((J3L31) # (J3L33))) # (!J3L5 & (J3L31 & J3L33));


--J3L157 is neuron_l1_n2:n2|mac:mac_n1|result~36
J3L157 = (J3L3 & ((J3L31) # (J3L33))) # (!J3L3 & (J3L31 & J3L33));


--J4L121 is neuron_l1_n3:n3|mac:mac_n1|result~0
J4L121 = (M4L60 & (M4L64 & (M4L59 & M4L63))) # (!M4L60 & ((M4L64) # ((M4L59) # (M4L63))));


--J4L122 is neuron_l1_n3:n3|mac:mac_n1|result~1
J4L122 = (M4L61 & (M4L62 & (M4L60 & J4L121))) # (!M4L61 & (!M4L62 & (!M4L60 & !J4L121)));


--J4L123 is neuron_l1_n3:n3|mac:mac_n1|result~2
J4L123 = (J4L122 & (M4L44)) # (!J4L122 & ((!M4L64)));


--J4L160 is neuron_l1_n3:n3|mac:mac_n1|rounds~0
J4L160 = (M4_mac_out2) # ((M4L35) # ((M4L38) # (M4L39)));


--J4L161 is neuron_l1_n3:n3|mac:mac_n1|rounds~1
J4L161 = (M4L34) # ((M4L36) # ((M4L40) # (M4L41)));


--J4L162 is neuron_l1_n3:n3|mac:mac_n1|rounds~2
J4L162 = (M4L37) # ((M4L42) # ((J4L160) # (J4L161)));


--J4L158 is neuron_l1_n3:n3|mac:mac_n1|round_overflow~0
J4L158 = (M4L43 & ((J4L123) # (J4L162)));


--J4L107 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-11]~0
J4L107 = (J4L122 & ((J4L158 & (J4L35)) # (!J4L158 & ((M4L44))))) # (!J4L122 & (((M4L44))));


--J4L124 is neuron_l1_n3:n3|mac:mac_n1|result~3
J4L124 = (J4L122 & (M4L58)) # (!J4L122 & ((!M4L64)));


--J4L125 is neuron_l1_n3:n3|mac:mac_n1|result~4
J4L125 = (J4L122 & (M4L57)) # (!J4L122 & ((!M4L64)));


--J4L126 is neuron_l1_n3:n3|mac:mac_n1|result~5
J4L126 = (J4L122 & (M4L56)) # (!J4L122 & ((!M4L64)));


--J4L127 is neuron_l1_n3:n3|mac:mac_n1|result~6
J4L127 = (J4L122 & (M4L55)) # (!J4L122 & ((!M4L64)));


--J4L128 is neuron_l1_n3:n3|mac:mac_n1|result~7
J4L128 = (J4L122 & (M4L54)) # (!J4L122 & ((!M4L64)));


--J4L129 is neuron_l1_n3:n3|mac:mac_n1|result~8
J4L129 = (J4L122 & (M4L53)) # (!J4L122 & ((!M4L64)));


--J4L130 is neuron_l1_n3:n3|mac:mac_n1|result~9
J4L130 = (J4L122 & (M4L52)) # (!J4L122 & ((!M4L64)));


--J4L131 is neuron_l1_n3:n3|mac:mac_n1|result~10
J4L131 = (J4L122 & (M4L51)) # (!J4L122 & ((!M4L64)));


--J4L132 is neuron_l1_n3:n3|mac:mac_n1|result~11
J4L132 = (J4L122 & (M4L50)) # (!J4L122 & ((!M4L64)));


--J4L133 is neuron_l1_n3:n3|mac:mac_n1|result~12
J4L133 = (J4L122 & (M4L49)) # (!J4L122 & ((!M4L64)));


--J4L134 is neuron_l1_n3:n3|mac:mac_n1|result~13
J4L134 = (J4L122 & (M4L48)) # (!J4L122 & ((!M4L64)));


--J4L135 is neuron_l1_n3:n3|mac:mac_n1|result~14
J4L135 = (J4L122 & (M4L47)) # (!J4L122 & ((!M4L64)));


--J4L136 is neuron_l1_n3:n3|mac:mac_n1|result~15
J4L136 = (J4L122 & (M4L46)) # (!J4L122 & ((!M4L64)));


--J4L137 is neuron_l1_n3:n3|mac:mac_n1|result~16
J4L137 = (J4L122 & (M4L45)) # (!J4L122 & ((!M4L64)));


--J4L138 is neuron_l1_n3:n3|mac:mac_n1|result~17
J4L138 = (J4L35) # ((J4L37) # ((J4L39) # (J4L65)));


--J4L139 is neuron_l1_n3:n3|mac:mac_n1|result~18
J4L139 = (J4L41) # ((J4L43) # ((J4L45) # (J4L47)));


--J4L140 is neuron_l1_n3:n3|mac:mac_n1|result~19
J4L140 = (J4L49) # ((J4L51) # ((J4L53) # (J4L55)));


--J4L141 is neuron_l1_n3:n3|mac:mac_n1|result~20
J4L141 = (J4L57) # ((J4L59) # ((J4L61) # (J4L63)));


--J4L142 is neuron_l1_n3:n3|mac:mac_n1|result~21
J4L142 = (J4L138) # ((J4L139) # ((J4L140) # (J4L141)));


--J4L159 is neuron_l1_n3:n3|mac:mac_n1|round_overflow~1
J4L159 = (J4L67 & ((M4L64 $ (J4L65)))) # (!J4L67 & (J4L142 & (M4L64 $ (J4L65))));


--J4L115 is neuron_l1_n3:n3|mac:mac_n1|r_mult[3]~1
J4L115 = (J4L122 & ((!J4L159) # (!J4L158)));


--J4L108 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-11]~2
J4L108 = (J4L115 & (J4L107)) # (!J4L115 & ((!M4L64)));


--J4L116 is neuron_l1_n3:n3|mac:mac_n1|r_mult[3]~3
J4L116 = (J4L122 & (J4L158 & !J4L159));


--J4L119 is neuron_l1_n3:n3|mac:mac_n1|r_mult[4]~4
J4L119 = (J4L116 & (J4L65)) # (!J4L116 & ((M4L64)));


--J4L120 is neuron_l1_n3:n3|mac:mac_n1|r_mult[4]~5
J4L120 = (M4L43 & (J4L122 & ((J4L123) # (J4L162))));


--J4L117 is neuron_l1_n3:n3|mac:mac_n1|r_mult[3]~6
J4L117 = (J4L120 & (J4L63)) # (!J4L120 & ((M4L58)));


--J4L118 is neuron_l1_n3:n3|mac:mac_n1|r_mult[3]~7
J4L118 = (J4L115 & (J4L117)) # (!J4L115 & ((!M4L64)));


--J4L113 is neuron_l1_n3:n3|mac:mac_n1|r_mult[2]~8
J4L113 = (J4L120 & (J4L61)) # (!J4L120 & ((M4L57)));


--J4L114 is neuron_l1_n3:n3|mac:mac_n1|r_mult[2]~9
J4L114 = (J4L115 & (J4L113)) # (!J4L115 & ((!M4L64)));


--J4L111 is neuron_l1_n3:n3|mac:mac_n1|r_mult[1]~10
J4L111 = (J4L120 & (J4L59)) # (!J4L120 & ((M4L56)));


--J4L112 is neuron_l1_n3:n3|mac:mac_n1|r_mult[1]~11
J4L112 = (J4L115 & (J4L111)) # (!J4L115 & ((!M4L64)));


--J4L109 is neuron_l1_n3:n3|mac:mac_n1|r_mult[0]~12
J4L109 = (J4L120 & (J4L57)) # (!J4L120 & ((M4L55)));


--J4L110 is neuron_l1_n3:n3|mac:mac_n1|r_mult[0]~13
J4L110 = (J4L115 & (J4L109)) # (!J4L115 & ((!M4L64)));


--J4L87 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-1]~14
J4L87 = (J4L120 & (J4L55)) # (!J4L120 & ((M4L54)));


--J4L88 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-1]~15
J4L88 = (J4L115 & (J4L87)) # (!J4L115 & ((!M4L64)));


--J4L89 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-2]~16
J4L89 = (J4L120 & (J4L53)) # (!J4L120 & ((M4L53)));


--J4L90 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-2]~17
J4L90 = (J4L115 & (J4L89)) # (!J4L115 & ((!M4L64)));


--J4L91 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-3]~18
J4L91 = (J4L120 & (J4L51)) # (!J4L120 & ((M4L52)));


--J4L92 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-3]~19
J4L92 = (J4L115 & (J4L91)) # (!J4L115 & ((!M4L64)));


--J4L93 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-4]~20
J4L93 = (J4L120 & (J4L49)) # (!J4L120 & ((M4L51)));


--J4L94 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-4]~21
J4L94 = (J4L115 & (J4L93)) # (!J4L115 & ((!M4L64)));


--J4L95 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-5]~22
J4L95 = (J4L120 & (J4L47)) # (!J4L120 & ((M4L50)));


--J4L96 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-5]~23
J4L96 = (J4L115 & (J4L95)) # (!J4L115 & ((!M4L64)));


--J4L97 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-6]~24
J4L97 = (J4L120 & (J4L45)) # (!J4L120 & ((M4L49)));


--J4L98 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-6]~25
J4L98 = (J4L115 & (J4L97)) # (!J4L115 & ((!M4L64)));


--J4L99 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-7]~26
J4L99 = (J4L122 & ((J4L158 & (J4L43)) # (!J4L158 & ((M4L48))))) # (!J4L122 & (((M4L48))));


--J4L100 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-7]~27
J4L100 = (J4L115 & (J4L99)) # (!J4L115 & ((!M4L64)));


--J4L101 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-8]~28
J4L101 = (J4L122 & ((J4L158 & (J4L41)) # (!J4L158 & ((M4L47))))) # (!J4L122 & (((M4L47))));


--J4L102 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-8]~29
J4L102 = (J4L115 & (J4L101)) # (!J4L115 & ((!M4L64)));


--J4L103 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-9]~30
J4L103 = (J4L122 & ((J4L158 & (J4L39)) # (!J4L158 & ((M4L46))))) # (!J4L122 & (((M4L46))));


--J4L104 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-9]~31
J4L104 = (J4L115 & (J4L103)) # (!J4L115 & ((!M4L64)));


--J4L105 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-10]~32
J4L105 = (J4L122 & ((J4L158 & (J4L37)) # (!J4L158 & ((M4L45))))) # (!J4L122 & (((M4L45))));


--J4L106 is neuron_l1_n3:n3|mac:mac_n1|r_mult[-10]~33
J4L106 = (J4L115 & (J4L105)) # (!J4L115 & ((!M4L64)));


--J4L143 is neuron_l1_n3:n3|mac:mac_n1|result~22
J4L143 = (J4L1 & ((J4L31) # (J4L33))) # (!J4L1 & (J4L31 & J4L33));


--J4L144 is neuron_l1_n3:n3|mac:mac_n1|result~23
J4L144 = (J4L29 & ((J4L31) # (J4L33))) # (!J4L29 & (J4L31 & J4L33));


--J4L145 is neuron_l1_n3:n3|mac:mac_n1|result~24
J4L145 = (J4L27 & ((J4L31) # (J4L33))) # (!J4L27 & (J4L31 & J4L33));


--J4L146 is neuron_l1_n3:n3|mac:mac_n1|result~25
J4L146 = (J4L25 & ((J4L31) # (J4L33))) # (!J4L25 & (J4L31 & J4L33));


--J4L147 is neuron_l1_n3:n3|mac:mac_n1|result~26
J4L147 = (J4L23 & ((J4L31) # (J4L33))) # (!J4L23 & (J4L31 & J4L33));


--J4L148 is neuron_l1_n3:n3|mac:mac_n1|result~27
J4L148 = (J4L21 & ((J4L31) # (J4L33))) # (!J4L21 & (J4L31 & J4L33));


--J4L149 is neuron_l1_n3:n3|mac:mac_n1|result~28
J4L149 = (J4L19 & ((J4L31) # (J4L33))) # (!J4L19 & (J4L31 & J4L33));


--J4L150 is neuron_l1_n3:n3|mac:mac_n1|result~29
J4L150 = (J4L17 & ((J4L31) # (J4L33))) # (!J4L17 & (J4L31 & J4L33));


--J4L151 is neuron_l1_n3:n3|mac:mac_n1|result~30
J4L151 = (J4L15 & ((J4L31) # (J4L33))) # (!J4L15 & (J4L31 & J4L33));


--J4L152 is neuron_l1_n3:n3|mac:mac_n1|result~31
J4L152 = (J4L13 & ((J4L31) # (J4L33))) # (!J4L13 & (J4L31 & J4L33));


--J4L153 is neuron_l1_n3:n3|mac:mac_n1|result~32
J4L153 = (J4L11 & ((J4L31) # (J4L33))) # (!J4L11 & (J4L31 & J4L33));


--J4L154 is neuron_l1_n3:n3|mac:mac_n1|result~33
J4L154 = (J4L9 & ((J4L31) # (J4L33))) # (!J4L9 & (J4L31 & J4L33));


--J4L155 is neuron_l1_n3:n3|mac:mac_n1|result~34
J4L155 = (J4L7 & ((J4L31) # (J4L33))) # (!J4L7 & (J4L31 & J4L33));


--J4L156 is neuron_l1_n3:n3|mac:mac_n1|result~35
J4L156 = (J4L5 & ((J4L31) # (J4L33))) # (!J4L5 & (J4L31 & J4L33));


--J4L157 is neuron_l1_n3:n3|mac:mac_n1|result~36
J4L157 = (J4L3 & ((J4L31) # (J4L33))) # (!J4L3 & (J4L31 & J4L33));


--J5L121 is neuron_l1_n4:n4|mac:mac_n1|result~0
J5L121 = (M5L60 & (M5L64 & (M5L59 & M5L63))) # (!M5L60 & ((M5L64) # ((M5L59) # (M5L63))));


--J5L122 is neuron_l1_n4:n4|mac:mac_n1|result~1
J5L122 = (M5L61 & (M5L62 & (M5L60 & J5L121))) # (!M5L61 & (!M5L62 & (!M5L60 & !J5L121)));


--J5L123 is neuron_l1_n4:n4|mac:mac_n1|result~2
J5L123 = (J5L122 & (M5L44)) # (!J5L122 & ((!M5L64)));


--J5L160 is neuron_l1_n4:n4|mac:mac_n1|rounds~0
J5L160 = (M5_mac_out2) # ((M5L35) # ((M5L38) # (M5L39)));


--J5L161 is neuron_l1_n4:n4|mac:mac_n1|rounds~1
J5L161 = (M5L34) # ((M5L36) # ((M5L40) # (M5L41)));


--J5L162 is neuron_l1_n4:n4|mac:mac_n1|rounds~2
J5L162 = (M5L37) # ((M5L42) # ((J5L160) # (J5L161)));


--J5L158 is neuron_l1_n4:n4|mac:mac_n1|round_overflow~0
J5L158 = (M5L43 & ((J5L123) # (J5L162)));


--J5L107 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-11]~0
J5L107 = (J5L122 & ((J5L158 & (J5L35)) # (!J5L158 & ((M5L44))))) # (!J5L122 & (((M5L44))));


--J5L124 is neuron_l1_n4:n4|mac:mac_n1|result~3
J5L124 = (J5L122 & (M5L58)) # (!J5L122 & ((!M5L64)));


--J5L125 is neuron_l1_n4:n4|mac:mac_n1|result~4
J5L125 = (J5L122 & (M5L57)) # (!J5L122 & ((!M5L64)));


--J5L126 is neuron_l1_n4:n4|mac:mac_n1|result~5
J5L126 = (J5L122 & (M5L56)) # (!J5L122 & ((!M5L64)));


--J5L127 is neuron_l1_n4:n4|mac:mac_n1|result~6
J5L127 = (J5L122 & (M5L55)) # (!J5L122 & ((!M5L64)));


--J5L128 is neuron_l1_n4:n4|mac:mac_n1|result~7
J5L128 = (J5L122 & (M5L54)) # (!J5L122 & ((!M5L64)));


--J5L129 is neuron_l1_n4:n4|mac:mac_n1|result~8
J5L129 = (J5L122 & (M5L53)) # (!J5L122 & ((!M5L64)));


--J5L130 is neuron_l1_n4:n4|mac:mac_n1|result~9
J5L130 = (J5L122 & (M5L52)) # (!J5L122 & ((!M5L64)));


--J5L131 is neuron_l1_n4:n4|mac:mac_n1|result~10
J5L131 = (J5L122 & (M5L51)) # (!J5L122 & ((!M5L64)));


--J5L132 is neuron_l1_n4:n4|mac:mac_n1|result~11
J5L132 = (J5L122 & (M5L50)) # (!J5L122 & ((!M5L64)));


--J5L133 is neuron_l1_n4:n4|mac:mac_n1|result~12
J5L133 = (J5L122 & (M5L49)) # (!J5L122 & ((!M5L64)));


--J5L134 is neuron_l1_n4:n4|mac:mac_n1|result~13
J5L134 = (J5L122 & (M5L48)) # (!J5L122 & ((!M5L64)));


--J5L135 is neuron_l1_n4:n4|mac:mac_n1|result~14
J5L135 = (J5L122 & (M5L47)) # (!J5L122 & ((!M5L64)));


--J5L136 is neuron_l1_n4:n4|mac:mac_n1|result~15
J5L136 = (J5L122 & (M5L46)) # (!J5L122 & ((!M5L64)));


--J5L137 is neuron_l1_n4:n4|mac:mac_n1|result~16
J5L137 = (J5L122 & (M5L45)) # (!J5L122 & ((!M5L64)));


--J5L138 is neuron_l1_n4:n4|mac:mac_n1|result~17
J5L138 = (J5L35) # ((J5L37) # ((J5L39) # (J5L65)));


--J5L139 is neuron_l1_n4:n4|mac:mac_n1|result~18
J5L139 = (J5L41) # ((J5L43) # ((J5L45) # (J5L47)));


--J5L140 is neuron_l1_n4:n4|mac:mac_n1|result~19
J5L140 = (J5L49) # ((J5L51) # ((J5L53) # (J5L55)));


--J5L141 is neuron_l1_n4:n4|mac:mac_n1|result~20
J5L141 = (J5L57) # ((J5L59) # ((J5L61) # (J5L63)));


--J5L142 is neuron_l1_n4:n4|mac:mac_n1|result~21
J5L142 = (J5L138) # ((J5L139) # ((J5L140) # (J5L141)));


--J5L159 is neuron_l1_n4:n4|mac:mac_n1|round_overflow~1
J5L159 = (J5L67 & ((M5L64 $ (J5L65)))) # (!J5L67 & (J5L142 & (M5L64 $ (J5L65))));


--J5L115 is neuron_l1_n4:n4|mac:mac_n1|r_mult[3]~1
J5L115 = (J5L122 & ((!J5L159) # (!J5L158)));


--J5L108 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-11]~2
J5L108 = (J5L115 & (J5L107)) # (!J5L115 & ((!M5L64)));


--J5L116 is neuron_l1_n4:n4|mac:mac_n1|r_mult[3]~3
J5L116 = (J5L122 & (J5L158 & !J5L159));


--J5L119 is neuron_l1_n4:n4|mac:mac_n1|r_mult[4]~4
J5L119 = (J5L116 & (J5L65)) # (!J5L116 & ((M5L64)));


--J5L120 is neuron_l1_n4:n4|mac:mac_n1|r_mult[4]~5
J5L120 = (M5L43 & (J5L122 & ((J5L123) # (J5L162))));


--J5L117 is neuron_l1_n4:n4|mac:mac_n1|r_mult[3]~6
J5L117 = (J5L120 & (J5L63)) # (!J5L120 & ((M5L58)));


--J5L118 is neuron_l1_n4:n4|mac:mac_n1|r_mult[3]~7
J5L118 = (J5L115 & (J5L117)) # (!J5L115 & ((!M5L64)));


--J5L113 is neuron_l1_n4:n4|mac:mac_n1|r_mult[2]~8
J5L113 = (J5L120 & (J5L61)) # (!J5L120 & ((M5L57)));


--J5L114 is neuron_l1_n4:n4|mac:mac_n1|r_mult[2]~9
J5L114 = (J5L115 & (J5L113)) # (!J5L115 & ((!M5L64)));


--J5L111 is neuron_l1_n4:n4|mac:mac_n1|r_mult[1]~10
J5L111 = (J5L120 & (J5L59)) # (!J5L120 & ((M5L56)));


--J5L112 is neuron_l1_n4:n4|mac:mac_n1|r_mult[1]~11
J5L112 = (J5L115 & (J5L111)) # (!J5L115 & ((!M5L64)));


--J5L109 is neuron_l1_n4:n4|mac:mac_n1|r_mult[0]~12
J5L109 = (J5L120 & (J5L57)) # (!J5L120 & ((M5L55)));


--J5L110 is neuron_l1_n4:n4|mac:mac_n1|r_mult[0]~13
J5L110 = (J5L115 & (J5L109)) # (!J5L115 & ((!M5L64)));


--J5L87 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-1]~14
J5L87 = (J5L120 & (J5L55)) # (!J5L120 & ((M5L54)));


--J5L88 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-1]~15
J5L88 = (J5L115 & (J5L87)) # (!J5L115 & ((!M5L64)));


--J5L89 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-2]~16
J5L89 = (J5L120 & (J5L53)) # (!J5L120 & ((M5L53)));


--J5L90 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-2]~17
J5L90 = (J5L115 & (J5L89)) # (!J5L115 & ((!M5L64)));


--J5L91 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-3]~18
J5L91 = (J5L120 & (J5L51)) # (!J5L120 & ((M5L52)));


--J5L92 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-3]~19
J5L92 = (J5L115 & (J5L91)) # (!J5L115 & ((!M5L64)));


--J5L93 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-4]~20
J5L93 = (J5L120 & (J5L49)) # (!J5L120 & ((M5L51)));


--J5L94 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-4]~21
J5L94 = (J5L115 & (J5L93)) # (!J5L115 & ((!M5L64)));


--J5L95 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-5]~22
J5L95 = (J5L120 & (J5L47)) # (!J5L120 & ((M5L50)));


--J5L96 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-5]~23
J5L96 = (J5L115 & (J5L95)) # (!J5L115 & ((!M5L64)));


--J5L97 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-6]~24
J5L97 = (J5L120 & (J5L45)) # (!J5L120 & ((M5L49)));


--J5L98 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-6]~25
J5L98 = (J5L115 & (J5L97)) # (!J5L115 & ((!M5L64)));


--J5L99 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-7]~26
J5L99 = (J5L122 & ((J5L158 & (J5L43)) # (!J5L158 & ((M5L48))))) # (!J5L122 & (((M5L48))));


--J5L100 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-7]~27
J5L100 = (J5L115 & (J5L99)) # (!J5L115 & ((!M5L64)));


--J5L101 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-8]~28
J5L101 = (J5L122 & ((J5L158 & (J5L41)) # (!J5L158 & ((M5L47))))) # (!J5L122 & (((M5L47))));


--J5L102 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-8]~29
J5L102 = (J5L115 & (J5L101)) # (!J5L115 & ((!M5L64)));


--J5L103 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-9]~30
J5L103 = (J5L122 & ((J5L158 & (J5L39)) # (!J5L158 & ((M5L46))))) # (!J5L122 & (((M5L46))));


--J5L104 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-9]~31
J5L104 = (J5L115 & (J5L103)) # (!J5L115 & ((!M5L64)));


--J5L105 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-10]~32
J5L105 = (J5L122 & ((J5L158 & (J5L37)) # (!J5L158 & ((M5L45))))) # (!J5L122 & (((M5L45))));


--J5L106 is neuron_l1_n4:n4|mac:mac_n1|r_mult[-10]~33
J5L106 = (J5L115 & (J5L105)) # (!J5L115 & ((!M5L64)));


--J5L143 is neuron_l1_n4:n4|mac:mac_n1|result~22
J5L143 = (J5L1 & ((J5L31) # (J5L33))) # (!J5L1 & (J5L31 & J5L33));


--J5L144 is neuron_l1_n4:n4|mac:mac_n1|result~23
J5L144 = (J5L29 & ((J5L31) # (J5L33))) # (!J5L29 & (J5L31 & J5L33));


--J5L145 is neuron_l1_n4:n4|mac:mac_n1|result~24
J5L145 = (J5L27 & ((J5L31) # (J5L33))) # (!J5L27 & (J5L31 & J5L33));


--J5L146 is neuron_l1_n4:n4|mac:mac_n1|result~25
J5L146 = (J5L25 & ((J5L31) # (J5L33))) # (!J5L25 & (J5L31 & J5L33));


--J5L147 is neuron_l1_n4:n4|mac:mac_n1|result~26
J5L147 = (J5L23 & ((J5L31) # (J5L33))) # (!J5L23 & (J5L31 & J5L33));


--J5L148 is neuron_l1_n4:n4|mac:mac_n1|result~27
J5L148 = (J5L21 & ((J5L31) # (J5L33))) # (!J5L21 & (J5L31 & J5L33));


--J5L149 is neuron_l1_n4:n4|mac:mac_n1|result~28
J5L149 = (J5L19 & ((J5L31) # (J5L33))) # (!J5L19 & (J5L31 & J5L33));


--J5L150 is neuron_l1_n4:n4|mac:mac_n1|result~29
J5L150 = (J5L17 & ((J5L31) # (J5L33))) # (!J5L17 & (J5L31 & J5L33));


--J5L151 is neuron_l1_n4:n4|mac:mac_n1|result~30
J5L151 = (J5L15 & ((J5L31) # (J5L33))) # (!J5L15 & (J5L31 & J5L33));


--J5L152 is neuron_l1_n4:n4|mac:mac_n1|result~31
J5L152 = (J5L13 & ((J5L31) # (J5L33))) # (!J5L13 & (J5L31 & J5L33));


--J5L153 is neuron_l1_n4:n4|mac:mac_n1|result~32
J5L153 = (J5L11 & ((J5L31) # (J5L33))) # (!J5L11 & (J5L31 & J5L33));


--J5L154 is neuron_l1_n4:n4|mac:mac_n1|result~33
J5L154 = (J5L9 & ((J5L31) # (J5L33))) # (!J5L9 & (J5L31 & J5L33));


--J5L155 is neuron_l1_n4:n4|mac:mac_n1|result~34
J5L155 = (J5L7 & ((J5L31) # (J5L33))) # (!J5L7 & (J5L31 & J5L33));


--J5L156 is neuron_l1_n4:n4|mac:mac_n1|result~35
J5L156 = (J5L5 & ((J5L31) # (J5L33))) # (!J5L5 & (J5L31 & J5L33));


--J5L157 is neuron_l1_n4:n4|mac:mac_n1|result~36
J5L157 = (J5L3 & ((J5L31) # (J5L33))) # (!J5L3 & (J5L31 & J5L33));


--J6L122 is neuron_l1_n5:n5|mac:mac_n1|result~0
J6L122 = (M6L60 & (M6L64 & (M6L59 & M6L63))) # (!M6L60 & ((M6L64) # ((M6L59) # (M6L63))));


--J6L123 is neuron_l1_n5:n5|mac:mac_n1|result~1
J6L123 = (M6L61 & (M6L62 & (M6L60 & J6L122))) # (!M6L61 & (!M6L62 & (!M6L60 & !J6L122)));


--J6L124 is neuron_l1_n5:n5|mac:mac_n1|result~2
J6L124 = (J6L123 & (M6L44)) # (!J6L123 & ((!M6L64)));


--J6L161 is neuron_l1_n5:n5|mac:mac_n1|rounds~0
J6L161 = (M6_mac_out2) # ((M6L35) # ((M6L38) # (M6L39)));


--J6L162 is neuron_l1_n5:n5|mac:mac_n1|rounds~1
J6L162 = (M6L34) # ((M6L36) # ((M6L40) # (M6L41)));


--J6L163 is neuron_l1_n5:n5|mac:mac_n1|rounds~2
J6L163 = (M6L37) # ((M6L42) # ((J6L161) # (J6L162)));


--J6L160 is neuron_l1_n5:n5|mac:mac_n1|round_overflow~0
J6L160 = (M6L43 & ((J6L124) # (J6L163)));


--J6L108 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-11]~0
J6L108 = (J6L123 & ((J6L160 & (J6L35)) # (!J6L160 & ((M6L44))))) # (!J6L123 & (((M6L44))));


--J6L125 is neuron_l1_n5:n5|mac:mac_n1|result~3
J6L125 = (J6L123 & (M6L58)) # (!J6L123 & ((!M6L64)));


--J6L126 is neuron_l1_n5:n5|mac:mac_n1|result~4
J6L126 = (J6L123 & (M6L57)) # (!J6L123 & ((!M6L64)));


--J6L127 is neuron_l1_n5:n5|mac:mac_n1|result~5
J6L127 = (J6L123 & (M6L56)) # (!J6L123 & ((!M6L64)));


--J6L128 is neuron_l1_n5:n5|mac:mac_n1|result~6
J6L128 = (J6L123 & (M6L55)) # (!J6L123 & ((!M6L64)));


--J6L129 is neuron_l1_n5:n5|mac:mac_n1|result~7
J6L129 = (J6L123 & (M6L54)) # (!J6L123 & ((!M6L64)));


--J6L130 is neuron_l1_n5:n5|mac:mac_n1|result~8
J6L130 = (J6L123 & (M6L53)) # (!J6L123 & ((!M6L64)));


--J6L131 is neuron_l1_n5:n5|mac:mac_n1|result~9
J6L131 = (J6L123 & (M6L52)) # (!J6L123 & ((!M6L64)));


--J6L132 is neuron_l1_n5:n5|mac:mac_n1|result~10
J6L132 = (J6L123 & (M6L51)) # (!J6L123 & ((!M6L64)));


--J6L133 is neuron_l1_n5:n5|mac:mac_n1|result~11
J6L133 = (J6L123 & (M6L50)) # (!J6L123 & ((!M6L64)));


--J6L134 is neuron_l1_n5:n5|mac:mac_n1|result~12
J6L134 = (J6L123 & (M6L49)) # (!J6L123 & ((!M6L64)));


--J6L135 is neuron_l1_n5:n5|mac:mac_n1|result~13
J6L135 = (J6L123 & (M6L48)) # (!J6L123 & ((!M6L64)));


--J6L136 is neuron_l1_n5:n5|mac:mac_n1|result~14
J6L136 = (J6L123 & (M6L47)) # (!J6L123 & ((!M6L64)));


--J6L137 is neuron_l1_n5:n5|mac:mac_n1|result~15
J6L137 = (J6L123 & (M6L46)) # (!J6L123 & ((!M6L64)));


--J6L138 is neuron_l1_n5:n5|mac:mac_n1|result~16
J6L138 = (J6L123 & (M6L45)) # (!J6L123 & ((!M6L64)));


--J6L69 is neuron_l1_n5:n5|mac:mac_n1|overflowx~0
J6L69 = M6L64 $ (J6L65);


--J6L139 is neuron_l1_n5:n5|mac:mac_n1|result~17
J6L139 = (J6L37) # (J6L39);


--J6L140 is neuron_l1_n5:n5|mac:mac_n1|result~18
J6L140 = (J6L41) # ((J6L43) # ((J6L45) # (J6L47)));


--J6L141 is neuron_l1_n5:n5|mac:mac_n1|result~19
J6L141 = (J6L35) # ((J6L65) # ((J6L139) # (J6L140)));


--J6L142 is neuron_l1_n5:n5|mac:mac_n1|result~20
J6L142 = (J6L49) # ((J6L51) # ((J6L53) # (J6L55)));


--J6L143 is neuron_l1_n5:n5|mac:mac_n1|result~21
J6L143 = (J6L57) # ((J6L59) # ((J6L61) # (J6L63)));


--J6L144 is neuron_l1_n5:n5|mac:mac_n1|result~22
J6L144 = (J6L67) # ((J6L141) # ((J6L142) # (J6L143)));


--J6L116 is neuron_l1_n5:n5|mac:mac_n1|r_mult[3]~1
J6L116 = (J6L123 & (((!J6L144) # (!J6L69)) # (!J6L160)));


--J6L109 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-11]~2
J6L109 = (J6L116 & (J6L108)) # (!J6L116 & ((!M6L64)));


--J6L117 is neuron_l1_n5:n5|mac:mac_n1|r_mult[3]~3
J6L117 = (J6L123 & (J6L160 & ((!J6L144) # (!J6L69))));


--J6L120 is neuron_l1_n5:n5|mac:mac_n1|r_mult[4]~4
J6L120 = (J6L117 & (J6L65)) # (!J6L117 & ((M6L64)));


--J6L121 is neuron_l1_n5:n5|mac:mac_n1|r_mult[4]~5
J6L121 = (M6L43 & (J6L123 & ((J6L124) # (J6L163))));


--J6L118 is neuron_l1_n5:n5|mac:mac_n1|r_mult[3]~6
J6L118 = (J6L121 & (J6L63)) # (!J6L121 & ((M6L58)));


--J6L119 is neuron_l1_n5:n5|mac:mac_n1|r_mult[3]~7
J6L119 = (J6L116 & (J6L118)) # (!J6L116 & ((!M6L64)));


--J6L114 is neuron_l1_n5:n5|mac:mac_n1|r_mult[2]~8
J6L114 = (J6L121 & (J6L61)) # (!J6L121 & ((M6L57)));


--J6L115 is neuron_l1_n5:n5|mac:mac_n1|r_mult[2]~9
J6L115 = (J6L116 & (J6L114)) # (!J6L116 & ((!M6L64)));


--J6L112 is neuron_l1_n5:n5|mac:mac_n1|r_mult[1]~10
J6L112 = (J6L121 & (J6L59)) # (!J6L121 & ((M6L56)));


--J6L113 is neuron_l1_n5:n5|mac:mac_n1|r_mult[1]~11
J6L113 = (J6L116 & (J6L112)) # (!J6L116 & ((!M6L64)));


--J6L110 is neuron_l1_n5:n5|mac:mac_n1|r_mult[0]~12
J6L110 = (J6L121 & (J6L57)) # (!J6L121 & ((M6L55)));


--J6L111 is neuron_l1_n5:n5|mac:mac_n1|r_mult[0]~13
J6L111 = (J6L116 & (J6L110)) # (!J6L116 & ((!M6L64)));


--J6L88 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-1]~14
J6L88 = (J6L121 & (J6L55)) # (!J6L121 & ((M6L54)));


--J6L89 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-1]~15
J6L89 = (J6L116 & (J6L88)) # (!J6L116 & ((!M6L64)));


--J6L90 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-2]~16
J6L90 = (J6L121 & (J6L53)) # (!J6L121 & ((M6L53)));


--J6L91 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-2]~17
J6L91 = (J6L116 & (J6L90)) # (!J6L116 & ((!M6L64)));


--J6L92 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-3]~18
J6L92 = (J6L121 & (J6L51)) # (!J6L121 & ((M6L52)));


--J6L93 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-3]~19
J6L93 = (J6L116 & (J6L92)) # (!J6L116 & ((!M6L64)));


--J6L94 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-4]~20
J6L94 = (J6L121 & (J6L49)) # (!J6L121 & ((M6L51)));


--J6L95 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-4]~21
J6L95 = (J6L116 & (J6L94)) # (!J6L116 & ((!M6L64)));


--J6L96 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-5]~22
J6L96 = (J6L121 & (J6L47)) # (!J6L121 & ((M6L50)));


--J6L97 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-5]~23
J6L97 = (J6L116 & (J6L96)) # (!J6L116 & ((!M6L64)));


--J6L98 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-6]~24
J6L98 = (J6L121 & (J6L45)) # (!J6L121 & ((M6L49)));


--J6L99 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-6]~25
J6L99 = (J6L116 & (J6L98)) # (!J6L116 & ((!M6L64)));


--J6L100 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-7]~26
J6L100 = (J6L123 & ((J6L160 & (J6L43)) # (!J6L160 & ((M6L48))))) # (!J6L123 & (((M6L48))));


--J6L101 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-7]~27
J6L101 = (J6L116 & (J6L100)) # (!J6L116 & ((!M6L64)));


--J6L102 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-8]~28
J6L102 = (J6L123 & ((J6L160 & (J6L41)) # (!J6L160 & ((M6L47))))) # (!J6L123 & (((M6L47))));


--J6L103 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-8]~29
J6L103 = (J6L116 & (J6L102)) # (!J6L116 & ((!M6L64)));


--J6L104 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-9]~30
J6L104 = (J6L123 & ((J6L160 & (J6L39)) # (!J6L160 & ((M6L46))))) # (!J6L123 & (((M6L46))));


--J6L105 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-9]~31
J6L105 = (J6L116 & (J6L104)) # (!J6L116 & ((!M6L64)));


--J6L106 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-10]~32
J6L106 = (J6L123 & ((J6L160 & (J6L37)) # (!J6L160 & ((M6L45))))) # (!J6L123 & (((M6L45))));


--J6L107 is neuron_l1_n5:n5|mac:mac_n1|r_mult[-10]~33
J6L107 = (J6L116 & (J6L106)) # (!J6L116 & ((!M6L64)));


--J6L145 is neuron_l1_n5:n5|mac:mac_n1|result~23
J6L145 = (J6L1 & ((J6L31) # (J6L33))) # (!J6L1 & (J6L31 & J6L33));


--J6L146 is neuron_l1_n5:n5|mac:mac_n1|result~24
J6L146 = (J6L29 & ((J6L31) # (J6L33))) # (!J6L29 & (J6L31 & J6L33));


--J6L147 is neuron_l1_n5:n5|mac:mac_n1|result~25
J6L147 = (J6L27 & ((J6L31) # (J6L33))) # (!J6L27 & (J6L31 & J6L33));


--J6L148 is neuron_l1_n5:n5|mac:mac_n1|result~26
J6L148 = (J6L25 & ((J6L31) # (J6L33))) # (!J6L25 & (J6L31 & J6L33));


--J6L149 is neuron_l1_n5:n5|mac:mac_n1|result~27
J6L149 = (J6L23 & ((J6L31) # (J6L33))) # (!J6L23 & (J6L31 & J6L33));


--J6L150 is neuron_l1_n5:n5|mac:mac_n1|result~28
J6L150 = (J6L21 & ((J6L31) # (J6L33))) # (!J6L21 & (J6L31 & J6L33));


--J6L151 is neuron_l1_n5:n5|mac:mac_n1|result~29
J6L151 = (J6L19 & ((J6L31) # (J6L33))) # (!J6L19 & (J6L31 & J6L33));


--J6L152 is neuron_l1_n5:n5|mac:mac_n1|result~30
J6L152 = (J6L17 & ((J6L31) # (J6L33))) # (!J6L17 & (J6L31 & J6L33));


--J6L153 is neuron_l1_n5:n5|mac:mac_n1|result~31
J6L153 = (J6L15 & ((J6L31) # (J6L33))) # (!J6L15 & (J6L31 & J6L33));


--J6L154 is neuron_l1_n5:n5|mac:mac_n1|result~32
J6L154 = (J6L13 & ((J6L31) # (J6L33))) # (!J6L13 & (J6L31 & J6L33));


--J6L155 is neuron_l1_n5:n5|mac:mac_n1|result~33
J6L155 = (J6L11 & ((J6L31) # (J6L33))) # (!J6L11 & (J6L31 & J6L33));


--J6L156 is neuron_l1_n5:n5|mac:mac_n1|result~34
J6L156 = (J6L9 & ((J6L31) # (J6L33))) # (!J6L9 & (J6L31 & J6L33));


--J6L157 is neuron_l1_n5:n5|mac:mac_n1|result~35
J6L157 = (J6L7 & ((J6L31) # (J6L33))) # (!J6L7 & (J6L31 & J6L33));


--J6L158 is neuron_l1_n5:n5|mac:mac_n1|result~36
J6L158 = (J6L5 & ((J6L31) # (J6L33))) # (!J6L5 & (J6L31 & J6L33));


--J6L159 is neuron_l1_n5:n5|mac:mac_n1|result~37
J6L159 = (J6L3 & ((J6L31) # (J6L33))) # (!J6L3 & (J6L31 & J6L33));


--B1_r_sm.s_get_weight is neuron_l1_n0:n0|r_sm.s_get_weight
--register power-up is low

B1_r_sm.s_get_weight = DFFEAS(B1L213, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1L229 is neuron_l1_n0:n0|Selector17~0
B1L229 = (B1_r_sinapse_count[17] & !B1_r_sm.s_clear);


--B1L228 is neuron_l1_n0:n0|Selector16~0
B1L228 = (B1_r_sinapse_count[18] & !B1_r_sm.s_clear);


--B1L227 is neuron_l1_n0:n0|Selector15~0
B1L227 = (B1_r_sinapse_count[19] & !B1_r_sm.s_clear);


--B1L226 is neuron_l1_n0:n0|Selector14~0
B1L226 = (B1_r_sinapse_count[20] & !B1_r_sm.s_clear);


--B1L215 is neuron_l1_n0:n0|Selector3~0
B1L215 = (B1_r_sinapse_count[31] & !B1_r_sm.s_clear);


--B1L245 is neuron_l1_n0:n0|Selector33~0
B1L245 = (B1_r_sinapse_count[1] & !B1_r_sm.s_clear);


--B1L244 is neuron_l1_n0:n0|Selector32~0
B1L244 = (B1_r_sinapse_count[2] & !B1_r_sm.s_clear);


--B1L243 is neuron_l1_n0:n0|Selector31~0
B1L243 = (B1_r_sinapse_count[3] & !B1_r_sm.s_clear);


--B1L242 is neuron_l1_n0:n0|Selector30~0
B1L242 = (B1_r_sinapse_count[4] & !B1_r_sm.s_clear);


--B1L241 is neuron_l1_n0:n0|Selector29~0
B1L241 = (B1_r_sinapse_count[5] & !B1_r_sm.s_clear);


--B1L240 is neuron_l1_n0:n0|Selector28~0
B1L240 = (B1_r_sinapse_count[6] & !B1_r_sm.s_clear);


--B1L239 is neuron_l1_n0:n0|Selector27~0
B1L239 = (B1_r_sinapse_count[7] & !B1_r_sm.s_clear);


--B1L238 is neuron_l1_n0:n0|Selector26~0
B1L238 = (B1_r_sinapse_count[8] & !B1_r_sm.s_clear);


--B1L237 is neuron_l1_n0:n0|Selector25~0
B1L237 = (B1_r_sinapse_count[9] & !B1_r_sm.s_clear);


--B1L236 is neuron_l1_n0:n0|Selector24~0
B1L236 = (B1_r_sinapse_count[10] & !B1_r_sm.s_clear);


--B1L235 is neuron_l1_n0:n0|Selector23~0
B1L235 = (B1_r_sinapse_count[11] & !B1_r_sm.s_clear);


--B1L234 is neuron_l1_n0:n0|Selector22~0
B1L234 = (B1_r_sinapse_count[12] & !B1_r_sm.s_clear);


--B1L233 is neuron_l1_n0:n0|Selector21~0
B1L233 = (B1_r_sinapse_count[13] & !B1_r_sm.s_clear);


--B1L232 is neuron_l1_n0:n0|Selector20~0
B1L232 = (B1_r_sinapse_count[14] & !B1_r_sm.s_clear);


--B1L231 is neuron_l1_n0:n0|Selector19~0
B1L231 = (B1_r_sinapse_count[15] & !B1_r_sm.s_clear);


--B1L230 is neuron_l1_n0:n0|Selector18~0
B1L230 = (B1_r_sinapse_count[16] & !B1_r_sm.s_clear);


--B1L225 is neuron_l1_n0:n0|Selector13~0
B1L225 = (B1_r_sinapse_count[21] & !B1_r_sm.s_clear);


--B1L224 is neuron_l1_n0:n0|Selector12~0
B1L224 = (B1_r_sinapse_count[22] & !B1_r_sm.s_clear);


--B1L223 is neuron_l1_n0:n0|Selector11~0
B1L223 = (B1_r_sinapse_count[23] & !B1_r_sm.s_clear);


--B1L222 is neuron_l1_n0:n0|Selector10~0
B1L222 = (B1_r_sinapse_count[24] & !B1_r_sm.s_clear);


--B1L221 is neuron_l1_n0:n0|Selector9~0
B1L221 = (B1_r_sinapse_count[25] & !B1_r_sm.s_clear);


--B1L220 is neuron_l1_n0:n0|Selector8~0
B1L220 = (B1_r_sinapse_count[26] & !B1_r_sm.s_clear);


--B1L219 is neuron_l1_n0:n0|Selector7~0
B1L219 = (B1_r_sinapse_count[27] & !B1_r_sm.s_clear);


--B1L218 is neuron_l1_n0:n0|Selector6~0
B1L218 = (B1_r_sinapse_count[28] & !B1_r_sm.s_clear);


--B1L217 is neuron_l1_n0:n0|Selector5~0
B1L217 = (B1_r_sinapse_count[29] & !B1_r_sm.s_clear);


--B1L216 is neuron_l1_n0:n0|Selector4~0
B1L216 = (B1_r_sinapse_count[30] & !B1_r_sm.s_clear);


--B1_r_sm.s_idle is neuron_l1_n0:n0|r_sm.s_idle
--register power-up is low

B1_r_sm.s_idle = DFFEAS(B1L190, i_clk,  ,  , r_enable_n0,  ,  ,  ,  );


--B1L213 is neuron_l1_n0:n0|Selector1~0
B1L213 = ((J1_o_done & (B1_r_sm.s_mac_result & B1L42))) # (!B1_r_sm.s_idle);


--i_fxp[0] is i_fxp[0]
i_fxp[0] = INPUT();


--i_fxp[1] is i_fxp[1]
i_fxp[1] = INPUT();


--i_fxp[2] is i_fxp[2]
i_fxp[2] = INPUT();


--i_fxp[3] is i_fxp[3]
i_fxp[3] = INPUT();


--i_fxp[4] is i_fxp[4]
i_fxp[4] = INPUT();


--i_fxp[5] is i_fxp[5]
i_fxp[5] = INPUT();


--i_fxp[6] is i_fxp[6]
i_fxp[6] = INPUT();


--i_fxp[7] is i_fxp[7]
i_fxp[7] = INPUT();


--i_fxp[8] is i_fxp[8]
i_fxp[8] = INPUT();


--i_fxp[9] is i_fxp[9]
i_fxp[9] = INPUT();


--i_fxp[10] is i_fxp[10]
i_fxp[10] = INPUT();


--i_fxp[11] is i_fxp[11]
i_fxp[11] = INPUT();


--i_fxp[12] is i_fxp[12]
i_fxp[12] = INPUT();


--i_fxp[13] is i_fxp[13]
i_fxp[13] = INPUT();


--i_fxp[14] is i_fxp[14]
i_fxp[14] = INPUT();


--i_fxp[15] is i_fxp[15]
i_fxp[15] = INPUT();


--B1L246 is neuron_l1_n0:n0|Selector34~0
B1L246 = (B1_r_sinapse_count[0] & !B1_r_sm.s_clear);


--B1_r_addr[0] is neuron_l1_n0:n0|r_addr[0]
--register power-up is low

B1_r_addr[0] = DFFEAS(B1_r_sinapse_count[0], i_clk,  ,  , B1L45,  ,  ,  ,  );


--B1_r_addr[1] is neuron_l1_n0:n0|r_addr[1]
--register power-up is low

B1_r_addr[1] = DFFEAS(B1_r_sinapse_count[1], i_clk,  ,  , B1L45,  ,  ,  ,  );


--B1_r_addr[2] is neuron_l1_n0:n0|r_addr[2]
--register power-up is low

B1_r_addr[2] = DFFEAS(B1_r_sinapse_count[2], i_clk,  ,  , B1L45,  ,  ,  ,  );


--B1_r_addr[3] is neuron_l1_n0:n0|r_addr[3]
--register power-up is low

B1_r_addr[3] = DFFEAS(B1_r_sinapse_count[3], i_clk,  ,  , B1L45,  ,  ,  ,  );


--B1_r_addr[4] is neuron_l1_n0:n0|r_addr[4]
--register power-up is low

B1_r_addr[4] = DFFEAS(B1_r_sinapse_count[4], i_clk,  ,  , B1L45,  ,  ,  ,  );


--B1L45 is neuron_l1_n0:n0|r_addr[0]~0
B1L45 = (r_enable_n0 & B1_r_sm.s_get_weight);


--B1L68 is neuron_l1_n0:n0|r_bias[15]~1
B1L68 = !B1L31;


--C1L46 is neuron_l1_n1:n1|r_bias[15]~0
C1L46 = !C1L27;


--D1L50 is neuron_l1_n2:n2|r_bias[15]~0
D1L50 = !D1L31;


--E1L52 is neuron_l1_n3:n3|r_bias[15]~0
E1L52 = !E1L33;


--F1L52 is neuron_l1_n4:n4|r_bias[15]~0
F1L52 = !F1L33;


--G1L52 is neuron_l1_n5:n5|r_bias[15]~0
G1L52 = !G1L33;


--J1L87 is neuron_l1_n0:n0|mac:mac_n1|r_data_out[4]~0
J1L87 = !J1L33;


--J2L86 is neuron_l1_n1:n1|mac:mac_n1|r_data_out[4]~0
J2L86 = !J2L33;


--J3L86 is neuron_l1_n2:n2|mac:mac_n1|r_data_out[4]~0
J3L86 = !J3L33;


--J4L86 is neuron_l1_n3:n3|mac:mac_n1|r_data_out[4]~0
J4L86 = !J4L33;


--J5L86 is neuron_l1_n4:n4|mac:mac_n1|r_data_out[4]~0
J5L86 = !J5L33;


--J6L87 is neuron_l1_n5:n5|mac:mac_n1|r_data_out[4]~0
J6L87 = !J6L33;


--B1L190 is neuron_l1_n0:n0|r_sm.s_idle~0
B1L190 = !B1_r_sm.s_clear;


--A1L149 is ~GND
A1L149 = GND;


