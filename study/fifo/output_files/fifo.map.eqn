-- Copyright (C) 2020  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and any partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details, at
-- https://fpgasoftware.intel.com/eula.
--r_fifo_count[3] is r_fifo_count[3]
--register power-up is low

r_fifo_count[3] = DFFEAS(A1L46, i_clk,  ,  , A1L38,  ,  , i_rst_sync,  );


--r_fifo_count[1] is r_fifo_count[1]
--register power-up is low

r_fifo_count[1] = DFFEAS(A1L40, i_clk,  ,  , A1L38,  ,  , i_rst_sync,  );


--r_fifo_count[0] is r_fifo_count[0]
--register power-up is low

r_fifo_count[0] = DFFEAS(A1L36, i_clk,  ,  , A1L38,  ,  , i_rst_sync,  );


--r_fifo_count[2] is r_fifo_count[2]
--register power-up is low

r_fifo_count[2] = DFFEAS(A1L43, i_clk,  ,  , A1L38,  ,  , i_rst_sync,  );


--r_fifo_count[4] is r_fifo_count[4]
--register power-up is low

r_fifo_count[4] = DFFEAS(A1L49, i_clk,  ,  , A1L38,  ,  , i_rst_sync,  );


--C1_ram_block1a0 is altsyncram:r_fifo_data_rtl_0|altsyncram_e5g1:auto_generated|ram_block1a0
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
C1_ram_block1a0_PORT_A_data_in = i_wr_data[0];
C1_ram_block1a0_PORT_A_data_in_reg = DFFE(C1_ram_block1a0_PORT_A_data_in, C1_ram_block1a0_clock_0, , , );
C1_ram_block1a0_PORT_A_address = BUS(r_wr_index[0], r_wr_index[1], r_wr_index[2], r_wr_index[3]);
C1_ram_block1a0_PORT_A_address_reg = DFFE(C1_ram_block1a0_PORT_A_address, C1_ram_block1a0_clock_0, , , );
C1_ram_block1a0_PORT_B_address = BUS(A1L94, A1L96, A1L97, A1L99);
C1_ram_block1a0_PORT_B_address_reg = DFFE(C1_ram_block1a0_PORT_B_address, C1_ram_block1a0_clock_0, , , );
C1_ram_block1a0_PORT_A_write_enable = A1L88;
C1_ram_block1a0_PORT_A_write_enable_reg = DFFE(C1_ram_block1a0_PORT_A_write_enable, C1_ram_block1a0_clock_0, , , );
C1_ram_block1a0_PORT_B_read_enable = VCC;
C1_ram_block1a0_PORT_B_read_enable_reg = DFFE(C1_ram_block1a0_PORT_B_read_enable, C1_ram_block1a0_clock_0, , , );
C1_ram_block1a0_clock_0 = i_clk;
C1_ram_block1a0_PORT_B_data_out = MEMORY(C1_ram_block1a0_PORT_A_data_in_reg, , C1_ram_block1a0_PORT_A_address_reg, C1_ram_block1a0_PORT_B_address_reg, C1_ram_block1a0_PORT_A_write_enable_reg, , , C1_ram_block1a0_PORT_B_read_enable_reg, , , C1_ram_block1a0_clock_0, , , , , , , );
C1_ram_block1a0 = C1_ram_block1a0_PORT_B_data_out[0];


--C1_ram_block1a1 is altsyncram:r_fifo_data_rtl_0|altsyncram_e5g1:auto_generated|ram_block1a1
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
C1_ram_block1a1_PORT_A_data_in = i_wr_data[1];
C1_ram_block1a1_PORT_A_data_in_reg = DFFE(C1_ram_block1a1_PORT_A_data_in, C1_ram_block1a1_clock_0, , , );
C1_ram_block1a1_PORT_A_address = BUS(r_wr_index[0], r_wr_index[1], r_wr_index[2], r_wr_index[3]);
C1_ram_block1a1_PORT_A_address_reg = DFFE(C1_ram_block1a1_PORT_A_address, C1_ram_block1a1_clock_0, , , );
C1_ram_block1a1_PORT_B_address = BUS(A1L94, A1L96, A1L97, A1L99);
C1_ram_block1a1_PORT_B_address_reg = DFFE(C1_ram_block1a1_PORT_B_address, C1_ram_block1a1_clock_0, , , );
C1_ram_block1a1_PORT_A_write_enable = A1L88;
C1_ram_block1a1_PORT_A_write_enable_reg = DFFE(C1_ram_block1a1_PORT_A_write_enable, C1_ram_block1a1_clock_0, , , );
C1_ram_block1a1_PORT_B_read_enable = VCC;
C1_ram_block1a1_PORT_B_read_enable_reg = DFFE(C1_ram_block1a1_PORT_B_read_enable, C1_ram_block1a1_clock_0, , , );
C1_ram_block1a1_clock_0 = i_clk;
C1_ram_block1a1_PORT_B_data_out = MEMORY(C1_ram_block1a1_PORT_A_data_in_reg, , C1_ram_block1a1_PORT_A_address_reg, C1_ram_block1a1_PORT_B_address_reg, C1_ram_block1a1_PORT_A_write_enable_reg, , , C1_ram_block1a1_PORT_B_read_enable_reg, , , C1_ram_block1a1_clock_0, , , , , , , );
C1_ram_block1a1 = C1_ram_block1a1_PORT_B_data_out[0];


--C1_ram_block1a2 is altsyncram:r_fifo_data_rtl_0|altsyncram_e5g1:auto_generated|ram_block1a2
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
C1_ram_block1a2_PORT_A_data_in = i_wr_data[2];
C1_ram_block1a2_PORT_A_data_in_reg = DFFE(C1_ram_block1a2_PORT_A_data_in, C1_ram_block1a2_clock_0, , , );
C1_ram_block1a2_PORT_A_address = BUS(r_wr_index[0], r_wr_index[1], r_wr_index[2], r_wr_index[3]);
C1_ram_block1a2_PORT_A_address_reg = DFFE(C1_ram_block1a2_PORT_A_address, C1_ram_block1a2_clock_0, , , );
C1_ram_block1a2_PORT_B_address = BUS(A1L94, A1L96, A1L97, A1L99);
C1_ram_block1a2_PORT_B_address_reg = DFFE(C1_ram_block1a2_PORT_B_address, C1_ram_block1a2_clock_0, , , );
C1_ram_block1a2_PORT_A_write_enable = A1L88;
C1_ram_block1a2_PORT_A_write_enable_reg = DFFE(C1_ram_block1a2_PORT_A_write_enable, C1_ram_block1a2_clock_0, , , );
C1_ram_block1a2_PORT_B_read_enable = VCC;
C1_ram_block1a2_PORT_B_read_enable_reg = DFFE(C1_ram_block1a2_PORT_B_read_enable, C1_ram_block1a2_clock_0, , , );
C1_ram_block1a2_clock_0 = i_clk;
C1_ram_block1a2_PORT_B_data_out = MEMORY(C1_ram_block1a2_PORT_A_data_in_reg, , C1_ram_block1a2_PORT_A_address_reg, C1_ram_block1a2_PORT_B_address_reg, C1_ram_block1a2_PORT_A_write_enable_reg, , , C1_ram_block1a2_PORT_B_read_enable_reg, , , C1_ram_block1a2_clock_0, , , , , , , );
C1_ram_block1a2 = C1_ram_block1a2_PORT_B_data_out[0];


--C1_ram_block1a3 is altsyncram:r_fifo_data_rtl_0|altsyncram_e5g1:auto_generated|ram_block1a3
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
C1_ram_block1a3_PORT_A_data_in = i_wr_data[3];
C1_ram_block1a3_PORT_A_data_in_reg = DFFE(C1_ram_block1a3_PORT_A_data_in, C1_ram_block1a3_clock_0, , , );
C1_ram_block1a3_PORT_A_address = BUS(r_wr_index[0], r_wr_index[1], r_wr_index[2], r_wr_index[3]);
C1_ram_block1a3_PORT_A_address_reg = DFFE(C1_ram_block1a3_PORT_A_address, C1_ram_block1a3_clock_0, , , );
C1_ram_block1a3_PORT_B_address = BUS(A1L94, A1L96, A1L97, A1L99);
C1_ram_block1a3_PORT_B_address_reg = DFFE(C1_ram_block1a3_PORT_B_address, C1_ram_block1a3_clock_0, , , );
C1_ram_block1a3_PORT_A_write_enable = A1L88;
C1_ram_block1a3_PORT_A_write_enable_reg = DFFE(C1_ram_block1a3_PORT_A_write_enable, C1_ram_block1a3_clock_0, , , );
C1_ram_block1a3_PORT_B_read_enable = VCC;
C1_ram_block1a3_PORT_B_read_enable_reg = DFFE(C1_ram_block1a3_PORT_B_read_enable, C1_ram_block1a3_clock_0, , , );
C1_ram_block1a3_clock_0 = i_clk;
C1_ram_block1a3_PORT_B_data_out = MEMORY(C1_ram_block1a3_PORT_A_data_in_reg, , C1_ram_block1a3_PORT_A_address_reg, C1_ram_block1a3_PORT_B_address_reg, C1_ram_block1a3_PORT_A_write_enable_reg, , , C1_ram_block1a3_PORT_B_read_enable_reg, , , C1_ram_block1a3_clock_0, , , , , , , );
C1_ram_block1a3 = C1_ram_block1a3_PORT_B_data_out[0];


--C1_ram_block1a4 is altsyncram:r_fifo_data_rtl_0|altsyncram_e5g1:auto_generated|ram_block1a4
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
C1_ram_block1a4_PORT_A_data_in = i_wr_data[4];
C1_ram_block1a4_PORT_A_data_in_reg = DFFE(C1_ram_block1a4_PORT_A_data_in, C1_ram_block1a4_clock_0, , , );
C1_ram_block1a4_PORT_A_address = BUS(r_wr_index[0], r_wr_index[1], r_wr_index[2], r_wr_index[3]);
C1_ram_block1a4_PORT_A_address_reg = DFFE(C1_ram_block1a4_PORT_A_address, C1_ram_block1a4_clock_0, , , );
C1_ram_block1a4_PORT_B_address = BUS(A1L94, A1L96, A1L97, A1L99);
C1_ram_block1a4_PORT_B_address_reg = DFFE(C1_ram_block1a4_PORT_B_address, C1_ram_block1a4_clock_0, , , );
C1_ram_block1a4_PORT_A_write_enable = A1L88;
C1_ram_block1a4_PORT_A_write_enable_reg = DFFE(C1_ram_block1a4_PORT_A_write_enable, C1_ram_block1a4_clock_0, , , );
C1_ram_block1a4_PORT_B_read_enable = VCC;
C1_ram_block1a4_PORT_B_read_enable_reg = DFFE(C1_ram_block1a4_PORT_B_read_enable, C1_ram_block1a4_clock_0, , , );
C1_ram_block1a4_clock_0 = i_clk;
C1_ram_block1a4_PORT_B_data_out = MEMORY(C1_ram_block1a4_PORT_A_data_in_reg, , C1_ram_block1a4_PORT_A_address_reg, C1_ram_block1a4_PORT_B_address_reg, C1_ram_block1a4_PORT_A_write_enable_reg, , , C1_ram_block1a4_PORT_B_read_enable_reg, , , C1_ram_block1a4_clock_0, , , , , , , );
C1_ram_block1a4 = C1_ram_block1a4_PORT_B_data_out[0];


--C1_ram_block1a5 is altsyncram:r_fifo_data_rtl_0|altsyncram_e5g1:auto_generated|ram_block1a5
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
C1_ram_block1a5_PORT_A_data_in = i_wr_data[5];
C1_ram_block1a5_PORT_A_data_in_reg = DFFE(C1_ram_block1a5_PORT_A_data_in, C1_ram_block1a5_clock_0, , , );
C1_ram_block1a5_PORT_A_address = BUS(r_wr_index[0], r_wr_index[1], r_wr_index[2], r_wr_index[3]);
C1_ram_block1a5_PORT_A_address_reg = DFFE(C1_ram_block1a5_PORT_A_address, C1_ram_block1a5_clock_0, , , );
C1_ram_block1a5_PORT_B_address = BUS(A1L94, A1L96, A1L97, A1L99);
C1_ram_block1a5_PORT_B_address_reg = DFFE(C1_ram_block1a5_PORT_B_address, C1_ram_block1a5_clock_0, , , );
C1_ram_block1a5_PORT_A_write_enable = A1L88;
C1_ram_block1a5_PORT_A_write_enable_reg = DFFE(C1_ram_block1a5_PORT_A_write_enable, C1_ram_block1a5_clock_0, , , );
C1_ram_block1a5_PORT_B_read_enable = VCC;
C1_ram_block1a5_PORT_B_read_enable_reg = DFFE(C1_ram_block1a5_PORT_B_read_enable, C1_ram_block1a5_clock_0, , , );
C1_ram_block1a5_clock_0 = i_clk;
C1_ram_block1a5_PORT_B_data_out = MEMORY(C1_ram_block1a5_PORT_A_data_in_reg, , C1_ram_block1a5_PORT_A_address_reg, C1_ram_block1a5_PORT_B_address_reg, C1_ram_block1a5_PORT_A_write_enable_reg, , , C1_ram_block1a5_PORT_B_read_enable_reg, , , C1_ram_block1a5_clock_0, , , , , , , );
C1_ram_block1a5 = C1_ram_block1a5_PORT_B_data_out[0];


--C1_ram_block1a6 is altsyncram:r_fifo_data_rtl_0|altsyncram_e5g1:auto_generated|ram_block1a6
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
C1_ram_block1a6_PORT_A_data_in = i_wr_data[6];
C1_ram_block1a6_PORT_A_data_in_reg = DFFE(C1_ram_block1a6_PORT_A_data_in, C1_ram_block1a6_clock_0, , , );
C1_ram_block1a6_PORT_A_address = BUS(r_wr_index[0], r_wr_index[1], r_wr_index[2], r_wr_index[3]);
C1_ram_block1a6_PORT_A_address_reg = DFFE(C1_ram_block1a6_PORT_A_address, C1_ram_block1a6_clock_0, , , );
C1_ram_block1a6_PORT_B_address = BUS(A1L94, A1L96, A1L97, A1L99);
C1_ram_block1a6_PORT_B_address_reg = DFFE(C1_ram_block1a6_PORT_B_address, C1_ram_block1a6_clock_0, , , );
C1_ram_block1a6_PORT_A_write_enable = A1L88;
C1_ram_block1a6_PORT_A_write_enable_reg = DFFE(C1_ram_block1a6_PORT_A_write_enable, C1_ram_block1a6_clock_0, , , );
C1_ram_block1a6_PORT_B_read_enable = VCC;
C1_ram_block1a6_PORT_B_read_enable_reg = DFFE(C1_ram_block1a6_PORT_B_read_enable, C1_ram_block1a6_clock_0, , , );
C1_ram_block1a6_clock_0 = i_clk;
C1_ram_block1a6_PORT_B_data_out = MEMORY(C1_ram_block1a6_PORT_A_data_in_reg, , C1_ram_block1a6_PORT_A_address_reg, C1_ram_block1a6_PORT_B_address_reg, C1_ram_block1a6_PORT_A_write_enable_reg, , , C1_ram_block1a6_PORT_B_read_enable_reg, , , C1_ram_block1a6_clock_0, , , , , , , );
C1_ram_block1a6 = C1_ram_block1a6_PORT_B_data_out[0];


--C1_ram_block1a7 is altsyncram:r_fifo_data_rtl_0|altsyncram_e5g1:auto_generated|ram_block1a7
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
C1_ram_block1a7_PORT_A_data_in = i_wr_data[7];
C1_ram_block1a7_PORT_A_data_in_reg = DFFE(C1_ram_block1a7_PORT_A_data_in, C1_ram_block1a7_clock_0, , , );
C1_ram_block1a7_PORT_A_address = BUS(r_wr_index[0], r_wr_index[1], r_wr_index[2], r_wr_index[3]);
C1_ram_block1a7_PORT_A_address_reg = DFFE(C1_ram_block1a7_PORT_A_address, C1_ram_block1a7_clock_0, , , );
C1_ram_block1a7_PORT_B_address = BUS(A1L94, A1L96, A1L97, A1L99);
C1_ram_block1a7_PORT_B_address_reg = DFFE(C1_ram_block1a7_PORT_B_address, C1_ram_block1a7_clock_0, , , );
C1_ram_block1a7_PORT_A_write_enable = A1L88;
C1_ram_block1a7_PORT_A_write_enable_reg = DFFE(C1_ram_block1a7_PORT_A_write_enable, C1_ram_block1a7_clock_0, , , );
C1_ram_block1a7_PORT_B_read_enable = VCC;
C1_ram_block1a7_PORT_B_read_enable_reg = DFFE(C1_ram_block1a7_PORT_B_read_enable, C1_ram_block1a7_clock_0, , , );
C1_ram_block1a7_clock_0 = i_clk;
C1_ram_block1a7_PORT_B_data_out = MEMORY(C1_ram_block1a7_PORT_A_data_in_reg, , C1_ram_block1a7_PORT_A_address_reg, C1_ram_block1a7_PORT_B_address_reg, C1_ram_block1a7_PORT_A_write_enable_reg, , , C1_ram_block1a7_PORT_B_read_enable_reg, , , C1_ram_block1a7_clock_0, , , , , , , );
C1_ram_block1a7 = C1_ram_block1a7_PORT_B_data_out[0];


--A1L36 is r_fifo_count[0]~5
A1L36 = r_fifo_count[0] $ (VCC);

--A1L37 is r_fifo_count[0]~6
A1L37 = CARRY(r_fifo_count[0]);


--A1L40 is r_fifo_count[1]~7
A1L40 = (r_fifo_count[1] & ((A1L32 & (!A1L37)) # (!A1L32 & (A1L37 & VCC)))) # (!r_fifo_count[1] & ((A1L32 & ((A1L37) # (GND))) # (!A1L32 & (!A1L37))));

--A1L41 is r_fifo_count[1]~8
A1L41 = CARRY((r_fifo_count[1] & (A1L32 & !A1L37)) # (!r_fifo_count[1] & ((A1L32) # (!A1L37))));


--A1L43 is r_fifo_count[2]~9
A1L43 = ((r_fifo_count[2] $ (A1L32 $ (A1L41)))) # (GND);

--A1L44 is r_fifo_count[2]~10
A1L44 = CARRY((r_fifo_count[2] & ((!A1L41) # (!A1L32))) # (!r_fifo_count[2] & (!A1L32 & !A1L41)));


--A1L46 is r_fifo_count[3]~11
A1L46 = (r_fifo_count[3] & ((A1L32 & (!A1L44)) # (!A1L32 & (A1L44 & VCC)))) # (!r_fifo_count[3] & ((A1L32 & ((A1L44) # (GND))) # (!A1L32 & (!A1L44))));

--A1L47 is r_fifo_count[3]~12
A1L47 = CARRY((r_fifo_count[3] & (A1L32 & !A1L44)) # (!r_fifo_count[3] & ((A1L32) # (!A1L44))));


--A1L49 is r_fifo_count[4]~14
A1L49 = r_fifo_count[4] $ (A1L32 $ (A1L47));


--o_full is o_full
o_full = OUTPUT(A1L5);


--o_rd_data[0] is o_rd_data[0]
o_rd_data[0] = OUTPUT(A1L80);


--o_rd_data[1] is o_rd_data[1]
o_rd_data[1] = OUTPUT(A1L81);


--o_rd_data[2] is o_rd_data[2]
o_rd_data[2] = OUTPUT(A1L82);


--o_rd_data[3] is o_rd_data[3]
o_rd_data[3] = OUTPUT(A1L83);


--o_rd_data[4] is o_rd_data[4]
o_rd_data[4] = OUTPUT(A1L84);


--o_rd_data[5] is o_rd_data[5]
o_rd_data[5] = OUTPUT(A1L85);


--o_rd_data[6] is o_rd_data[6]
o_rd_data[6] = OUTPUT(A1L86);


--o_rd_data[7] is o_rd_data[7]
o_rd_data[7] = OUTPUT(A1L87);


--o_empty is o_empty
o_empty = OUTPUT(A1L7);


--A1L4 is Equal2~0
A1L4 = (r_fifo_count[1] & (!r_fifo_count[0] & (!r_fifo_count[2] & !r_fifo_count[4])));


--A1L5 is Equal2~1
A1L5 = (r_fifo_count[3] & A1L4);


--A1L61Q is r_fifo_data_rtl_0_bypass[9]
--register power-up is low

A1L61Q = DFFEAS(i_wr_data[0], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L62Q is r_fifo_data_rtl_0_bypass[10]
--register power-up is low

A1L62Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L53Q is r_fifo_data_rtl_0_bypass[1]
--register power-up is low

A1L53Q = DFFEAS(r_wr_index[0], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L55Q is r_fifo_data_rtl_0_bypass[3]
--register power-up is low

A1L55Q = DFFEAS(r_wr_index[1], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L56Q is r_fifo_data_rtl_0_bypass[4]
--register power-up is low

A1L56Q = DFFEAS(A1L96, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L54Q is r_fifo_data_rtl_0_bypass[2]
--register power-up is low

A1L54Q = DFFEAS(A1L94, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L77 is r_fifo_data~13
A1L77 = (A1L53Q & (A1L54Q & (A1L55Q $ (!A1L56Q)))) # (!A1L53Q & (!A1L54Q & (A1L55Q $ (!A1L56Q))));


--A1L52Q is r_fifo_data_rtl_0_bypass[0]
--register power-up is low

A1L52Q = DFFEAS(A1L88, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L57Q is r_fifo_data_rtl_0_bypass[5]
--register power-up is low

A1L57Q = DFFEAS(r_wr_index[2], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L59Q is r_fifo_data_rtl_0_bypass[7]
--register power-up is low

A1L59Q = DFFEAS(r_wr_index[3], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L60Q is r_fifo_data_rtl_0_bypass[8]
--register power-up is low

A1L60Q = DFFEAS(A1L99, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L58Q is r_fifo_data_rtl_0_bypass[6]
--register power-up is low

A1L58Q = DFFEAS(A1L97, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L78 is r_fifo_data~14
A1L78 = (A1L57Q & (A1L58Q & (A1L59Q $ (!A1L60Q)))) # (!A1L57Q & (!A1L58Q & (A1L59Q $ (!A1L60Q))));


--A1L79 is r_fifo_data~15
A1L79 = (A1L77 & (A1L52Q & A1L78));


--A1L80 is r_fifo_data~16
A1L80 = (A1L62Q & ((A1L79 & (A1L61Q)) # (!A1L79 & ((C1_ram_block1a0))))) # (!A1L62Q & (A1L61Q));


--A1L63Q is r_fifo_data_rtl_0_bypass[11]
--register power-up is low

A1L63Q = DFFEAS(i_wr_data[1], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L64Q is r_fifo_data_rtl_0_bypass[12]
--register power-up is low

A1L64Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L81 is r_fifo_data~17
A1L81 = (A1L64Q & ((A1L79 & (A1L63Q)) # (!A1L79 & ((C1_ram_block1a1))))) # (!A1L64Q & (A1L63Q));


--A1L65Q is r_fifo_data_rtl_0_bypass[13]
--register power-up is low

A1L65Q = DFFEAS(i_wr_data[2], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L66Q is r_fifo_data_rtl_0_bypass[14]
--register power-up is low

A1L66Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L82 is r_fifo_data~18
A1L82 = (A1L66Q & ((A1L79 & (A1L65Q)) # (!A1L79 & ((C1_ram_block1a2))))) # (!A1L66Q & (A1L65Q));


--A1L67Q is r_fifo_data_rtl_0_bypass[15]
--register power-up is low

A1L67Q = DFFEAS(i_wr_data[3], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L68Q is r_fifo_data_rtl_0_bypass[16]
--register power-up is low

A1L68Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L83 is r_fifo_data~19
A1L83 = (A1L68Q & ((A1L79 & (A1L67Q)) # (!A1L79 & ((C1_ram_block1a3))))) # (!A1L68Q & (A1L67Q));


--A1L69Q is r_fifo_data_rtl_0_bypass[17]
--register power-up is low

A1L69Q = DFFEAS(i_wr_data[4], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L70Q is r_fifo_data_rtl_0_bypass[18]
--register power-up is low

A1L70Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L84 is r_fifo_data~20
A1L84 = (A1L70Q & ((A1L79 & (A1L69Q)) # (!A1L79 & ((C1_ram_block1a4))))) # (!A1L70Q & (A1L69Q));


--A1L71Q is r_fifo_data_rtl_0_bypass[19]
--register power-up is low

A1L71Q = DFFEAS(i_wr_data[5], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L72Q is r_fifo_data_rtl_0_bypass[20]
--register power-up is low

A1L72Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L85 is r_fifo_data~21
A1L85 = (A1L72Q & ((A1L79 & (A1L71Q)) # (!A1L79 & ((C1_ram_block1a5))))) # (!A1L72Q & (A1L71Q));


--A1L73Q is r_fifo_data_rtl_0_bypass[21]
--register power-up is low

A1L73Q = DFFEAS(i_wr_data[6], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L74Q is r_fifo_data_rtl_0_bypass[22]
--register power-up is low

A1L74Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L86 is r_fifo_data~22
A1L86 = (A1L74Q & ((A1L79 & (A1L73Q)) # (!A1L79 & ((C1_ram_block1a6))))) # (!A1L74Q & (A1L73Q));


--A1L75Q is r_fifo_data_rtl_0_bypass[23]
--register power-up is low

A1L75Q = DFFEAS(i_wr_data[7], i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L76Q is r_fifo_data_rtl_0_bypass[24]
--register power-up is low

A1L76Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L87 is r_fifo_data~23
A1L87 = (A1L76Q & ((A1L79 & (A1L75Q)) # (!A1L79 & ((C1_ram_block1a7))))) # (!A1L76Q & (A1L75Q));


--A1L6 is Equal3~0
A1L6 = (!r_fifo_count[1] & (!r_fifo_count[0] & (!r_fifo_count[2] & !r_fifo_count[4])));


--A1L7 is Equal3~1
A1L7 = (A1L6 & !r_fifo_count[3]);


--i_clk is i_clk
i_clk = INPUT();


--i_wr_en is i_wr_en
i_wr_en = INPUT();


--i_rd_en is i_rd_en
i_rd_en = INPUT();


--A1L32 is p_control~0
A1L32 = (i_wr_en & !i_rd_en);


--i_rst_sync is i_rst_sync
i_rst_sync = INPUT();


--A1L38 is r_fifo_count[0]~13
A1L38 = (i_rst_sync) # (i_wr_en $ (i_rd_en));


--i_wr_data[0] is i_wr_data[0]
i_wr_data[0] = INPUT();


--A1L88 is r_fifo_data~24
A1L88 = (i_wr_en & !i_rst_sync);


--r_wr_index[0] is r_wr_index[0]
--register power-up is low

r_wr_index[0] = DFFEAS(A1L107, i_clk,  ,  , A1L102,  ,  ,  ,  );


--r_wr_index[1] is r_wr_index[1]
--register power-up is low

r_wr_index[1] = DFFEAS(A1L108, i_clk,  ,  , A1L102,  ,  ,  ,  );


--r_wr_index[2] is r_wr_index[2]
--register power-up is low

r_wr_index[2] = DFFEAS(A1L109, i_clk,  ,  , A1L102,  ,  ,  ,  );


--r_wr_index[3] is r_wr_index[3]
--register power-up is low

r_wr_index[3] = DFFEAS(A1L110, i_clk,  ,  , A1L102,  ,  ,  ,  );


--r_rd_index[0] is r_rd_index[0]
--register power-up is low

r_rd_index[0] = DFFEAS(A1L94, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L94 is r_rd_index~0
A1L94 = (!i_rst_sync & (r_rd_index[0] $ (((!A1L7 & i_rd_en)))));


--r_rd_index[2] is r_rd_index[2]
--register power-up is low

r_rd_index[2] = DFFEAS(A1L97, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_rd_index[3] is r_rd_index[3]
--register power-up is low

r_rd_index[3] = DFFEAS(A1L99, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_rd_index[1] is r_rd_index[1]
--register power-up is low

r_rd_index[1] = DFFEAS(A1L96, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L95 is r_rd_index~1
A1L95 = (r_rd_index[1] & (((!r_rd_index[0])))) # (!r_rd_index[1] & (r_rd_index[0] & ((r_rd_index[2]) # (!r_rd_index[3]))));


--A1L33 is p_control~1
A1L33 = (i_rd_en & ((r_fifo_count[3]) # (!A1L6)));


--A1L96 is r_rd_index~2
A1L96 = (!i_rst_sync & ((A1L33 & (A1L95)) # (!A1L33 & ((r_rd_index[1])))));


--A1L3 is Add3~0
A1L3 = r_rd_index[2] $ (((r_rd_index[0] & r_rd_index[1])));


--A1L97 is r_rd_index~3
A1L97 = (!i_rst_sync & ((A1L33 & (A1L3)) # (!A1L33 & ((r_rd_index[2])))));


--A1L98 is r_rd_index~4
A1L98 = (r_rd_index[3] & ((r_rd_index[1] $ (r_rd_index[2])) # (!r_rd_index[0]))) # (!r_rd_index[3] & (r_rd_index[1] & (r_rd_index[2] & r_rd_index[0])));


--A1L99 is r_rd_index~5
A1L99 = (!i_rst_sync & ((A1L33 & (A1L98)) # (!A1L33 & ((r_rd_index[3])))));


--i_wr_data[1] is i_wr_data[1]
i_wr_data[1] = INPUT();


--i_wr_data[2] is i_wr_data[2]
i_wr_data[2] = INPUT();


--i_wr_data[3] is i_wr_data[3]
i_wr_data[3] = INPUT();


--i_wr_data[4] is i_wr_data[4]
i_wr_data[4] = INPUT();


--i_wr_data[5] is i_wr_data[5]
i_wr_data[5] = INPUT();


--i_wr_data[6] is i_wr_data[6]
i_wr_data[6] = INPUT();


--i_wr_data[7] is i_wr_data[7]
i_wr_data[7] = INPUT();


--A1L107 is r_wr_index~0
A1L107 = (!i_rst_sync & !r_wr_index[0]);


--A1L102 is r_wr_index[0]~1
A1L102 = (i_rst_sync) # ((i_wr_en & ((!A1L4) # (!r_fifo_count[3]))));


--A1L103 is r_wr_index[0]~2
A1L103 = (r_wr_index[1]) # ((r_wr_index[2]) # ((!r_wr_index[3]) # (!r_wr_index[0])));


--A1L108 is r_wr_index~3
A1L108 = (A1L103 & (!i_rst_sync & (r_wr_index[0] $ (r_wr_index[1]))));


--A1L1 is Add2~0
A1L1 = r_wr_index[2] $ (((r_wr_index[0] & r_wr_index[1])));


--A1L109 is r_wr_index~4
A1L109 = (A1L103 & (A1L1 & !i_rst_sync));


--A1L2 is Add2~1
A1L2 = r_wr_index[3] $ (((r_wr_index[0] & (r_wr_index[1] & r_wr_index[2]))));


--A1L110 is r_wr_index~5
A1L110 = (A1L103 & (A1L2 & !i_rst_sync));


