-- Copyright (C) 2020  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and any partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details, at
-- https://fpgasoftware.intel.com/eula.
--B2_r_fifo_count[3] is fifo:fifo_tx|r_fifo_count[3]
--register power-up is low

B2_r_fifo_count[3] = DFFEAS(B2L16, clk,  ,  , B2L18,  ,  , rst,  );


--B2_r_fifo_count[1] is fifo:fifo_tx|r_fifo_count[1]
--register power-up is low

B2_r_fifo_count[1] = DFFEAS(B2L10, clk,  ,  , B2L18,  ,  , rst,  );


--B2_r_fifo_count[0] is fifo:fifo_tx|r_fifo_count[0]
--register power-up is low

B2_r_fifo_count[0] = DFFEAS(B2L7, clk,  ,  , B2L18,  ,  , rst,  );


--B2_r_fifo_count[2] is fifo:fifo_tx|r_fifo_count[2]
--register power-up is low

B2_r_fifo_count[2] = DFFEAS(B2L13, clk,  ,  , B2L18,  ,  , rst,  );


--B2_r_fifo_count[4] is fifo:fifo_tx|r_fifo_count[4]
--register power-up is low

B2_r_fifo_count[4] = DFFEAS(B2L20, clk,  ,  , B2L18,  ,  , rst,  );


--B2L7 is fifo:fifo_tx|r_fifo_count[0]~5
B2L7 = B2_r_fifo_count[0] $ (VCC);

--B2L8 is fifo:fifo_tx|r_fifo_count[0]~6
B2L8 = CARRY(B2_r_fifo_count[0]);


--B2L10 is fifo:fifo_tx|r_fifo_count[1]~7
B2L10 = (B2_r_fifo_count[1] & (B2L8 & VCC)) # (!B2_r_fifo_count[1] & (!B2L8));

--B2L11 is fifo:fifo_tx|r_fifo_count[1]~8
B2L11 = CARRY((!B2_r_fifo_count[1] & !B2L8));


--B2L13 is fifo:fifo_tx|r_fifo_count[2]~9
B2L13 = (B2_r_fifo_count[2] & ((GND) # (!B2L11))) # (!B2_r_fifo_count[2] & (B2L11 $ (GND)));

--B2L14 is fifo:fifo_tx|r_fifo_count[2]~10
B2L14 = CARRY((B2_r_fifo_count[2]) # (!B2L11));


--B2L16 is fifo:fifo_tx|r_fifo_count[3]~11
B2L16 = (B2_r_fifo_count[3] & (B2L14 & VCC)) # (!B2_r_fifo_count[3] & (!B2L14));

--B2L17 is fifo:fifo_tx|r_fifo_count[3]~12
B2L17 = CARRY((!B2_r_fifo_count[3] & !B2L14));


--B2L20 is fifo:fifo_tx|r_fifo_count[4]~14
B2L20 = B2_r_fifo_count[4] $ (B2L17);


--D1_r_clk_count[10] is uart_tx:transmitter|r_clk_count[10]
--register power-up is low

D1_r_clk_count[10] = DFFEAS(D1L44, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[11] is uart_tx:transmitter|r_clk_count[11]
--register power-up is low

D1_r_clk_count[11] = DFFEAS(D1L47, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[3] is uart_tx:transmitter|r_clk_count[3]
--register power-up is low

D1_r_clk_count[3] = DFFEAS(D1L22, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[4] is uart_tx:transmitter|r_clk_count[4]
--register power-up is low

D1_r_clk_count[4] = DFFEAS(D1L25, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[5] is uart_tx:transmitter|r_clk_count[5]
--register power-up is low

D1_r_clk_count[5] = DFFEAS(D1L28, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[6] is uart_tx:transmitter|r_clk_count[6]
--register power-up is low

D1_r_clk_count[6] = DFFEAS(D1L31, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[7] is uart_tx:transmitter|r_clk_count[7]
--register power-up is low

D1_r_clk_count[7] = DFFEAS(D1L34, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[8] is uart_tx:transmitter|r_clk_count[8]
--register power-up is low

D1_r_clk_count[8] = DFFEAS(D1L37, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[9] is uart_tx:transmitter|r_clk_count[9]
--register power-up is low

D1_r_clk_count[9] = DFFEAS(D1L40, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[12] is uart_tx:transmitter|r_clk_count[12]
--register power-up is low

D1_r_clk_count[12] = DFFEAS(D1L50, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--C1_r_clk_count[12] is uart_rx:receiver|r_clk_count[12]
--register power-up is low

C1_r_clk_count[12] = DFFEAS(C1L63, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[3] is uart_rx:receiver|r_clk_count[3]
--register power-up is low

C1_r_clk_count[3] = DFFEAS(C1L32, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[4] is uart_rx:receiver|r_clk_count[4]
--register power-up is low

C1_r_clk_count[4] = DFFEAS(C1L35, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[5] is uart_rx:receiver|r_clk_count[5]
--register power-up is low

C1_r_clk_count[5] = DFFEAS(C1L38, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[6] is uart_rx:receiver|r_clk_count[6]
--register power-up is low

C1_r_clk_count[6] = DFFEAS(C1L41, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[11] is uart_rx:receiver|r_clk_count[11]
--register power-up is low

C1_r_clk_count[11] = DFFEAS(C1L60, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[7] is uart_rx:receiver|r_clk_count[7]
--register power-up is low

C1_r_clk_count[7] = DFFEAS(C1L44, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[8] is uart_rx:receiver|r_clk_count[8]
--register power-up is low

C1_r_clk_count[8] = DFFEAS(C1L47, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[9] is uart_rx:receiver|r_clk_count[9]
--register power-up is low

C1_r_clk_count[9] = DFFEAS(C1L54, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[10] is uart_rx:receiver|r_clk_count[10]
--register power-up is low

C1_r_clk_count[10] = DFFEAS(C1L57, clk,  ,  , C1L52,  ,  , C1L51,  );


--D1_r_clk_count[2] is uart_tx:transmitter|r_clk_count[2]
--register power-up is low

D1_r_clk_count[2] = DFFEAS(D1L19, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[1] is uart_tx:transmitter|r_clk_count[1]
--register power-up is low

D1_r_clk_count[1] = DFFEAS(D1L16, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1_r_clk_count[0] is uart_tx:transmitter|r_clk_count[0]
--register power-up is low

D1_r_clk_count[0] = DFFEAS(D1L13, clk,  ,  , !D1_r_sm_main.s_cleanup,  ,  , D1L42,  );


--D1L13 is uart_tx:transmitter|r_clk_count[0]~13
D1L13 = D1_r_clk_count[0] $ (VCC);

--D1L14 is uart_tx:transmitter|r_clk_count[0]~14
D1L14 = CARRY(D1_r_clk_count[0]);


--D1L16 is uart_tx:transmitter|r_clk_count[1]~15
D1L16 = (D1_r_clk_count[1] & (!D1L14)) # (!D1_r_clk_count[1] & ((D1L14) # (GND)));

--D1L17 is uart_tx:transmitter|r_clk_count[1]~16
D1L17 = CARRY((!D1L14) # (!D1_r_clk_count[1]));


--D1L19 is uart_tx:transmitter|r_clk_count[2]~17
D1L19 = (D1_r_clk_count[2] & (D1L17 $ (GND))) # (!D1_r_clk_count[2] & (!D1L17 & VCC));

--D1L20 is uart_tx:transmitter|r_clk_count[2]~18
D1L20 = CARRY((D1_r_clk_count[2] & !D1L17));


--D1L22 is uart_tx:transmitter|r_clk_count[3]~19
D1L22 = (D1_r_clk_count[3] & (!D1L20)) # (!D1_r_clk_count[3] & ((D1L20) # (GND)));

--D1L23 is uart_tx:transmitter|r_clk_count[3]~20
D1L23 = CARRY((!D1L20) # (!D1_r_clk_count[3]));


--D1L25 is uart_tx:transmitter|r_clk_count[4]~21
D1L25 = (D1_r_clk_count[4] & (D1L23 $ (GND))) # (!D1_r_clk_count[4] & (!D1L23 & VCC));

--D1L26 is uart_tx:transmitter|r_clk_count[4]~22
D1L26 = CARRY((D1_r_clk_count[4] & !D1L23));


--D1L28 is uart_tx:transmitter|r_clk_count[5]~23
D1L28 = (D1_r_clk_count[5] & (!D1L26)) # (!D1_r_clk_count[5] & ((D1L26) # (GND)));

--D1L29 is uart_tx:transmitter|r_clk_count[5]~24
D1L29 = CARRY((!D1L26) # (!D1_r_clk_count[5]));


--D1L31 is uart_tx:transmitter|r_clk_count[6]~25
D1L31 = (D1_r_clk_count[6] & (D1L29 $ (GND))) # (!D1_r_clk_count[6] & (!D1L29 & VCC));

--D1L32 is uart_tx:transmitter|r_clk_count[6]~26
D1L32 = CARRY((D1_r_clk_count[6] & !D1L29));


--D1L34 is uart_tx:transmitter|r_clk_count[7]~27
D1L34 = (D1_r_clk_count[7] & (!D1L32)) # (!D1_r_clk_count[7] & ((D1L32) # (GND)));

--D1L35 is uart_tx:transmitter|r_clk_count[7]~28
D1L35 = CARRY((!D1L32) # (!D1_r_clk_count[7]));


--D1L37 is uart_tx:transmitter|r_clk_count[8]~29
D1L37 = (D1_r_clk_count[8] & (D1L35 $ (GND))) # (!D1_r_clk_count[8] & (!D1L35 & VCC));

--D1L38 is uart_tx:transmitter|r_clk_count[8]~30
D1L38 = CARRY((D1_r_clk_count[8] & !D1L35));


--D1L40 is uart_tx:transmitter|r_clk_count[9]~31
D1L40 = (D1_r_clk_count[9] & (!D1L38)) # (!D1_r_clk_count[9] & ((D1L38) # (GND)));

--D1L41 is uart_tx:transmitter|r_clk_count[9]~32
D1L41 = CARRY((!D1L38) # (!D1_r_clk_count[9]));


--D1L44 is uart_tx:transmitter|r_clk_count[10]~33
D1L44 = (D1_r_clk_count[10] & (D1L41 $ (GND))) # (!D1_r_clk_count[10] & (!D1L41 & VCC));

--D1L45 is uart_tx:transmitter|r_clk_count[10]~34
D1L45 = CARRY((D1_r_clk_count[10] & !D1L41));


--D1L47 is uart_tx:transmitter|r_clk_count[11]~36
D1L47 = (D1_r_clk_count[11] & (!D1L45)) # (!D1_r_clk_count[11] & ((D1L45) # (GND)));

--D1L48 is uart_tx:transmitter|r_clk_count[11]~37
D1L48 = CARRY((!D1L45) # (!D1_r_clk_count[11]));


--D1L50 is uart_tx:transmitter|r_clk_count[12]~38
D1L50 = D1_r_clk_count[12] $ (!D1L48);


--C1_r_clk_count[2] is uart_rx:receiver|r_clk_count[2]
--register power-up is low

C1_r_clk_count[2] = DFFEAS(C1L29, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[1] is uart_rx:receiver|r_clk_count[1]
--register power-up is low

C1_r_clk_count[1] = DFFEAS(C1L26, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1_r_clk_count[0] is uart_rx:receiver|r_clk_count[0]
--register power-up is low

C1_r_clk_count[0] = DFFEAS(C1L23, clk,  ,  , C1L52,  ,  , C1L51,  );


--C1L23 is uart_rx:receiver|r_clk_count[0]~13
C1L23 = C1_r_clk_count[0] $ (VCC);

--C1L24 is uart_rx:receiver|r_clk_count[0]~14
C1L24 = CARRY(C1_r_clk_count[0]);


--C1L26 is uart_rx:receiver|r_clk_count[1]~15
C1L26 = (C1_r_clk_count[1] & (!C1L24)) # (!C1_r_clk_count[1] & ((C1L24) # (GND)));

--C1L27 is uart_rx:receiver|r_clk_count[1]~16
C1L27 = CARRY((!C1L24) # (!C1_r_clk_count[1]));


--C1L29 is uart_rx:receiver|r_clk_count[2]~17
C1L29 = (C1_r_clk_count[2] & (C1L27 $ (GND))) # (!C1_r_clk_count[2] & (!C1L27 & VCC));

--C1L30 is uart_rx:receiver|r_clk_count[2]~18
C1L30 = CARRY((C1_r_clk_count[2] & !C1L27));


--C1L32 is uart_rx:receiver|r_clk_count[3]~19
C1L32 = (C1_r_clk_count[3] & (!C1L30)) # (!C1_r_clk_count[3] & ((C1L30) # (GND)));

--C1L33 is uart_rx:receiver|r_clk_count[3]~20
C1L33 = CARRY((!C1L30) # (!C1_r_clk_count[3]));


--C1L35 is uart_rx:receiver|r_clk_count[4]~21
C1L35 = (C1_r_clk_count[4] & (C1L33 $ (GND))) # (!C1_r_clk_count[4] & (!C1L33 & VCC));

--C1L36 is uart_rx:receiver|r_clk_count[4]~22
C1L36 = CARRY((C1_r_clk_count[4] & !C1L33));


--C1L38 is uart_rx:receiver|r_clk_count[5]~23
C1L38 = (C1_r_clk_count[5] & (!C1L36)) # (!C1_r_clk_count[5] & ((C1L36) # (GND)));

--C1L39 is uart_rx:receiver|r_clk_count[5]~24
C1L39 = CARRY((!C1L36) # (!C1_r_clk_count[5]));


--C1L41 is uart_rx:receiver|r_clk_count[6]~25
C1L41 = (C1_r_clk_count[6] & (C1L39 $ (GND))) # (!C1_r_clk_count[6] & (!C1L39 & VCC));

--C1L42 is uart_rx:receiver|r_clk_count[6]~26
C1L42 = CARRY((C1_r_clk_count[6] & !C1L39));


--C1L44 is uart_rx:receiver|r_clk_count[7]~27
C1L44 = (C1_r_clk_count[7] & (!C1L42)) # (!C1_r_clk_count[7] & ((C1L42) # (GND)));

--C1L45 is uart_rx:receiver|r_clk_count[7]~28
C1L45 = CARRY((!C1L42) # (!C1_r_clk_count[7]));


--C1L47 is uart_rx:receiver|r_clk_count[8]~29
C1L47 = (C1_r_clk_count[8] & (C1L45 $ (GND))) # (!C1_r_clk_count[8] & (!C1L45 & VCC));

--C1L48 is uart_rx:receiver|r_clk_count[8]~30
C1L48 = CARRY((C1_r_clk_count[8] & !C1L45));


--C1L54 is uart_rx:receiver|r_clk_count[9]~31
C1L54 = (C1_r_clk_count[9] & (!C1L48)) # (!C1_r_clk_count[9] & ((C1L48) # (GND)));

--C1L55 is uart_rx:receiver|r_clk_count[9]~32
C1L55 = CARRY((!C1L48) # (!C1_r_clk_count[9]));


--C1L57 is uart_rx:receiver|r_clk_count[10]~33
C1L57 = (C1_r_clk_count[10] & (C1L55 $ (GND))) # (!C1_r_clk_count[10] & (!C1L55 & VCC));

--C1L58 is uart_rx:receiver|r_clk_count[10]~34
C1L58 = CARRY((C1_r_clk_count[10] & !C1L55));


--C1L60 is uart_rx:receiver|r_clk_count[11]~35
C1L60 = (C1_r_clk_count[11] & (!C1L58)) # (!C1_r_clk_count[11] & ((C1L58) # (GND)));

--C1L61 is uart_rx:receiver|r_clk_count[11]~36
C1L61 = CARRY((!C1L58) # (!C1_r_clk_count[11]));


--C1L63 is uart_rx:receiver|r_clk_count[12]~37
C1L63 = C1_r_clk_count[12] $ (!C1L61);


--i_fifo_rx_wr_en is i_fifo_rx_wr_en
i_fifo_rx_wr_en = INPUT();


--i_fifo_rx_wr_data[0] is i_fifo_rx_wr_data[0]
i_fifo_rx_wr_data[0] = INPUT();


--i_fifo_rx_wr_data[1] is i_fifo_rx_wr_data[1]
i_fifo_rx_wr_data[1] = INPUT();


--i_fifo_rx_wr_data[2] is i_fifo_rx_wr_data[2]
i_fifo_rx_wr_data[2] = INPUT();


--i_fifo_rx_wr_data[3] is i_fifo_rx_wr_data[3]
i_fifo_rx_wr_data[3] = INPUT();


--i_fifo_rx_wr_data[4] is i_fifo_rx_wr_data[4]
i_fifo_rx_wr_data[4] = INPUT();


--i_fifo_rx_wr_data[5] is i_fifo_rx_wr_data[5]
i_fifo_rx_wr_data[5] = INPUT();


--i_fifo_rx_wr_data[6] is i_fifo_rx_wr_data[6]
i_fifo_rx_wr_data[6] = INPUT();


--i_fifo_rx_wr_data[7] is i_fifo_rx_wr_data[7]
i_fifo_rx_wr_data[7] = INPUT();


--o_fifo_rx_full is o_fifo_rx_full
o_fifo_rx_full = OUTPUT(A1L73);


--i_fifo_rx_rd_en is i_fifo_rx_rd_en
i_fifo_rx_rd_en = INPUT();


--o_fifo_rx_rd_data[0] is o_fifo_rx_rd_data[0]
o_fifo_rx_rd_data[0] = OUTPUT(A1L73);


--o_fifo_rx_rd_data[1] is o_fifo_rx_rd_data[1]
o_fifo_rx_rd_data[1] = OUTPUT(A1L73);


--o_fifo_rx_rd_data[2] is o_fifo_rx_rd_data[2]
o_fifo_rx_rd_data[2] = OUTPUT(A1L73);


--o_fifo_rx_rd_data[3] is o_fifo_rx_rd_data[3]
o_fifo_rx_rd_data[3] = OUTPUT(A1L73);


--o_fifo_rx_rd_data[4] is o_fifo_rx_rd_data[4]
o_fifo_rx_rd_data[4] = OUTPUT(A1L73);


--o_fifo_rx_rd_data[5] is o_fifo_rx_rd_data[5]
o_fifo_rx_rd_data[5] = OUTPUT(A1L73);


--o_fifo_rx_rd_data[6] is o_fifo_rx_rd_data[6]
o_fifo_rx_rd_data[6] = OUTPUT(A1L73);


--o_fifo_rx_rd_data[7] is o_fifo_rx_rd_data[7]
o_fifo_rx_rd_data[7] = OUTPUT(A1L73);


--o_fifo_rx_empty is o_fifo_rx_empty
o_fifo_rx_empty = OUTPUT(A1L74);


--i_fifo_tx_wr_en is i_fifo_tx_wr_en
i_fifo_tx_wr_en = INPUT();


--i_fifo_tx_wr_data[0] is i_fifo_tx_wr_data[0]
i_fifo_tx_wr_data[0] = INPUT();


--i_fifo_tx_wr_data[1] is i_fifo_tx_wr_data[1]
i_fifo_tx_wr_data[1] = INPUT();


--i_fifo_tx_wr_data[2] is i_fifo_tx_wr_data[2]
i_fifo_tx_wr_data[2] = INPUT();


--i_fifo_tx_wr_data[3] is i_fifo_tx_wr_data[3]
i_fifo_tx_wr_data[3] = INPUT();


--i_fifo_tx_wr_data[4] is i_fifo_tx_wr_data[4]
i_fifo_tx_wr_data[4] = INPUT();


--i_fifo_tx_wr_data[5] is i_fifo_tx_wr_data[5]
i_fifo_tx_wr_data[5] = INPUT();


--i_fifo_tx_wr_data[6] is i_fifo_tx_wr_data[6]
i_fifo_tx_wr_data[6] = INPUT();


--i_fifo_tx_wr_data[7] is i_fifo_tx_wr_data[7]
i_fifo_tx_wr_data[7] = INPUT();


--o_fifo_tx_full is o_fifo_tx_full
o_fifo_tx_full = OUTPUT(B2L2);


--i_fifo_tx_rd_en is i_fifo_tx_rd_en
i_fifo_tx_rd_en = INPUT();


--o_fifo_tx_rd_data[0] is o_fifo_tx_rd_data[0]
o_fifo_tx_rd_data[0] = OUTPUT(A1L73);


--o_fifo_tx_rd_data[1] is o_fifo_tx_rd_data[1]
o_fifo_tx_rd_data[1] = OUTPUT(A1L73);


--o_fifo_tx_rd_data[2] is o_fifo_tx_rd_data[2]
o_fifo_tx_rd_data[2] = OUTPUT(A1L73);


--o_fifo_tx_rd_data[3] is o_fifo_tx_rd_data[3]
o_fifo_tx_rd_data[3] = OUTPUT(A1L73);


--o_fifo_tx_rd_data[4] is o_fifo_tx_rd_data[4]
o_fifo_tx_rd_data[4] = OUTPUT(A1L73);


--o_fifo_tx_rd_data[5] is o_fifo_tx_rd_data[5]
o_fifo_tx_rd_data[5] = OUTPUT(A1L73);


--o_fifo_tx_rd_data[6] is o_fifo_tx_rd_data[6]
o_fifo_tx_rd_data[6] = OUTPUT(A1L73);


--o_fifo_tx_rd_data[7] is o_fifo_tx_rd_data[7]
o_fifo_tx_rd_data[7] = OUTPUT(A1L73);


--o_fifo_tx_empty is o_fifo_tx_empty
o_fifo_tx_empty = OUTPUT(B2L4);


--i_tx_dv is i_tx_dv
i_tx_dv = INPUT();


--tx_data[0] is tx_data[0]
tx_data[0] = INPUT();


--tx_data[1] is tx_data[1]
tx_data[1] = INPUT();


--tx_data[2] is tx_data[2]
tx_data[2] = INPUT();


--tx_data[3] is tx_data[3]
tx_data[3] = INPUT();


--tx_data[4] is tx_data[4]
tx_data[4] = INPUT();


--tx_data[5] is tx_data[5]
tx_data[5] = INPUT();


--tx_data[6] is tx_data[6]
tx_data[6] = INPUT();


--tx_data[7] is tx_data[7]
tx_data[7] = INPUT();


--o_tx_active is o_tx_active
o_tx_active = OUTPUT(D1_o_tx_active);


--o_tx_serial is o_tx_serial
o_tx_serial = OUTPUT(D1_o_tx_serial);


--o_tx_done is o_tx_done
o_tx_done = OUTPUT(D1_r_tx_done);


--o_rx_dv is o_rx_dv
o_rx_dv = OUTPUT(C1_r_rx_dv);


--rx_data[0] is rx_data[0]
rx_data[0] = OUTPUT(C1_r_rx_byte[0]);


--rx_data[1] is rx_data[1]
rx_data[1] = OUTPUT(C1_r_rx_byte[1]);


--rx_data[2] is rx_data[2]
rx_data[2] = OUTPUT(C1_r_rx_byte[2]);


--rx_data[3] is rx_data[3]
rx_data[3] = OUTPUT(C1_r_rx_byte[3]);


--rx_data[4] is rx_data[4]
rx_data[4] = OUTPUT(C1_r_rx_byte[4]);


--rx_data[5] is rx_data[5]
rx_data[5] = OUTPUT(C1_r_rx_byte[5]);


--rx_data[6] is rx_data[6]
rx_data[6] = OUTPUT(C1_r_rx_byte[6]);


--rx_data[7] is rx_data[7]
rx_data[7] = OUTPUT(C1_r_rx_byte[7]);


--B2L3 is fifo:fifo_tx|Equal3~0
B2L3 = (!B2_r_fifo_count[0] & (!B2_r_fifo_count[2] & !B2_r_fifo_count[4]));


--B2L1 is fifo:fifo_tx|Equal2~0
B2L1 = ((!B2L3) # (!B2_r_fifo_count[1])) # (!B2_r_fifo_count[3]);


--B2L4 is fifo:fifo_tx|Equal3~1
B2L4 = (B2L3 & (!B2_r_fifo_count[3] & !B2_r_fifo_count[1]));


--D1_o_tx_active is uart_tx:transmitter|o_tx_active
--register power-up is low

D1_o_tx_active = DFFEAS(D1L61, clk,  ,  ,  ,  ,  ,  ,  );


--D1_o_tx_serial is uart_tx:transmitter|o_tx_serial
--register power-up is low

D1_o_tx_serial = DFFEAS(D1L62, clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_tx_done is uart_tx:transmitter|r_tx_done
--register power-up is low

D1_r_tx_done = DFFEAS(D1L64, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_dv is uart_rx:receiver|r_rx_dv
--register power-up is low

C1_r_rx_dv = DFFEAS(C1L93, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[0] is uart_rx:receiver|r_rx_byte[0]
--register power-up is low

C1_r_rx_byte[0] = DFFEAS(C1L67, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[1] is uart_rx:receiver|r_rx_byte[1]
--register power-up is low

C1_r_rx_byte[1] = DFFEAS(C1L69, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[2] is uart_rx:receiver|r_rx_byte[2]
--register power-up is low

C1_r_rx_byte[2] = DFFEAS(C1L71, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[3] is uart_rx:receiver|r_rx_byte[3]
--register power-up is low

C1_r_rx_byte[3] = DFFEAS(C1L73, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[4] is uart_rx:receiver|r_rx_byte[4]
--register power-up is low

C1_r_rx_byte[4] = DFFEAS(C1L75, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[5] is uart_rx:receiver|r_rx_byte[5]
--register power-up is low

C1_r_rx_byte[5] = DFFEAS(C1L77, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[6] is uart_rx:receiver|r_rx_byte[6]
--register power-up is low

C1_r_rx_byte[6] = DFFEAS(C1L79, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[7] is uart_rx:receiver|r_rx_byte[7]
--register power-up is low

C1_r_rx_byte[7] = DFFEAS(C1L81, clk,  ,  ,  ,  ,  ,  ,  );


--clk is clk
clk = INPUT();


--rst is rst
rst = INPUT();


--r_tx_dv is r_tx_dv
--register power-up is low

r_tx_dv = DFFEAS(A1L53, clk,  ,  ,  ,  ,  ,  ,  );


--B2L18 is fifo:fifo_tx|r_fifo_count[3]~13
B2L18 = (rst) # (r_tx_dv);


--D1_r_sm_main.s_tx_start_bit is uart_tx:transmitter|r_sm_main.s_tx_start_bit
--register power-up is low

D1_r_sm_main.s_tx_start_bit = DFFEAS(D1L72, clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_sm_main.s_tx_data_bits is uart_tx:transmitter|r_sm_main.s_tx_data_bits
--register power-up is low

D1_r_sm_main.s_tx_data_bits = DFFEAS(D1L73, clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_sm_main.s_tx_stop_bit is uart_tx:transmitter|r_sm_main.s_tx_stop_bit
--register power-up is low

D1_r_sm_main.s_tx_stop_bit = DFFEAS(D1L58, clk,  ,  ,  ,  ,  ,  ,  );


--D1L61 is uart_tx:transmitter|Selector0~0
D1L61 = (D1_r_sm_main.s_tx_start_bit) # ((D1_o_tx_active & ((D1_r_sm_main.s_tx_data_bits) # (D1_r_sm_main.s_tx_stop_bit))));


--D1_r_sm_main.s_cleanup is uart_tx:transmitter|r_sm_main.s_cleanup
--register power-up is low

D1_r_sm_main.s_cleanup = DFFEAS(D1L59, clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_sm_main.s_idle is uart_tx:transmitter|r_sm_main.s_idle
--register power-up is low

D1_r_sm_main.s_idle = DFFEAS(D1L71, clk,  ,  ,  ,  ,  ,  ,  );


--D1L62 is uart_tx:transmitter|Selector1~0
D1L62 = (D1_r_sm_main.s_tx_stop_bit) # (((D1_o_tx_serial & D1_r_sm_main.s_cleanup)) # (!D1_r_sm_main.s_idle));


--D1L63 is uart_tx:transmitter|Selector2~0
D1L63 = (D1_r_tx_done & ((D1_r_sm_main.s_tx_start_bit) # ((D1_r_sm_main.s_tx_data_bits) # (D1_r_sm_main.s_tx_stop_bit))));


--D1L1 is uart_tx:transmitter|LessThan1~0
D1L1 = (!D1_r_clk_count[10] & !D1_r_clk_count[11]);


--D1L2 is uart_tx:transmitter|LessThan1~1
D1L2 = ((!D1_r_clk_count[5] & ((!D1_r_clk_count[4]) # (!D1_r_clk_count[3])))) # (!D1_r_clk_count[6]);


--D1L3 is uart_tx:transmitter|LessThan1~2
D1L3 = (!D1_r_clk_count[11] & (!D1_r_clk_count[7] & (!D1_r_clk_count[8] & !D1_r_clk_count[9])));


--D1L4 is uart_tx:transmitter|LessThan1~3
D1L4 = (D1L1) # (((D1L2 & D1L3)) # (!D1_r_clk_count[12]));


--D1L64 is uart_tx:transmitter|Selector2~1
D1L64 = (D1_r_sm_main.s_cleanup) # ((D1L63) # ((D1_r_sm_main.s_tx_stop_bit & !D1L4)));


--C1L14 is uart_rx:receiver|LessThan1~0
C1L14 = ((!C1_r_clk_count[5] & ((!C1_r_clk_count[4]) # (!C1_r_clk_count[3])))) # (!C1_r_clk_count[6]);


--C1_r_sm_main.s_rx_stop_bit is uart_rx:receiver|r_sm_main.s_rx_stop_bit
--register power-up is low

C1_r_sm_main.s_rx_stop_bit = DFFEAS(C1L90, clk,  ,  ,  ,  ,  ,  ,  );


--C1L91 is uart_rx:receiver|r_sm_main~7
C1L91 = (C1L16 & C1_r_sm_main.s_rx_stop_bit);


--C1_r_sm_main.s_rx_start_bit is uart_rx:receiver|r_sm_main.s_rx_start_bit
--register power-up is low

C1_r_sm_main.s_rx_start_bit = DFFEAS(C1L102, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_sm_main.s_rx_data_bits is uart_rx:receiver|r_sm_main.s_rx_data_bits
--register power-up is low

C1_r_sm_main.s_rx_data_bits = DFFEAS(C1L104, clk,  ,  ,  ,  ,  ,  ,  );


--C1L92 is uart_rx:receiver|Selector0~0
C1L92 = (!C1_r_sm_main.s_rx_stop_bit & !C1_r_sm_main.s_rx_data_bits);


--C1L93 is uart_rx:receiver|Selector0~1
C1L93 = (C1L91) # ((C1_r_rx_dv & ((C1_r_sm_main.s_rx_start_bit) # (!C1L92))));


--C1_r_rx_data is uart_rx:receiver|r_rx_data
--register power-up is low

C1_r_rx_data = DFFEAS(C1_r_rx_data_r, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_bit_index[0] is uart_rx:receiver|r_bit_index[0]
--register power-up is low

C1_r_bit_index[0] = DFFEAS(C1L100, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_bit_index[1] is uart_rx:receiver|r_bit_index[1]
--register power-up is low

C1_r_bit_index[1] = DFFEAS(C1L99, clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_bit_index[2] is uart_rx:receiver|r_bit_index[2]
--register power-up is low

C1_r_bit_index[2] = DFFEAS(C1L97, clk,  ,  ,  ,  ,  ,  ,  );


--C1L1 is uart_rx:receiver|Decoder0~0
C1L1 = (C1L16 & C1_r_sm_main.s_rx_data_bits);


--C1L2 is uart_rx:receiver|Decoder0~1
C1L2 = (!C1_r_bit_index[0] & (!C1_r_bit_index[1] & (!C1_r_bit_index[2] & C1L1)));


--C1L67 is uart_rx:receiver|r_rx_byte[0]~0
C1L67 = (C1L2 & (C1_r_rx_data)) # (!C1L2 & ((C1_r_rx_byte[0])));


--C1L3 is uart_rx:receiver|Decoder0~2
C1L3 = (C1_r_bit_index[0] & (!C1_r_bit_index[1] & (!C1_r_bit_index[2] & C1L1)));


--C1L69 is uart_rx:receiver|r_rx_byte[1]~1
C1L69 = (C1L3 & (C1_r_rx_data)) # (!C1L3 & ((C1_r_rx_byte[1])));


--C1L4 is uart_rx:receiver|Decoder0~3
C1L4 = (!C1_r_bit_index[0] & (C1_r_bit_index[1] & (!C1_r_bit_index[2] & C1L1)));


--C1L71 is uart_rx:receiver|r_rx_byte[2]~2
C1L71 = (C1L4 & (C1_r_rx_data)) # (!C1L4 & ((C1_r_rx_byte[2])));


--C1L5 is uart_rx:receiver|Decoder0~4
C1L5 = (C1_r_bit_index[0] & (C1_r_bit_index[1] & (!C1_r_bit_index[2] & C1L1)));


--C1L73 is uart_rx:receiver|r_rx_byte[3]~3
C1L73 = (C1L5 & (C1_r_rx_data)) # (!C1L5 & ((C1_r_rx_byte[3])));


--C1L6 is uart_rx:receiver|Decoder0~5
C1L6 = (!C1_r_bit_index[0] & (!C1_r_bit_index[1] & (C1_r_bit_index[2] & C1L1)));


--C1L75 is uart_rx:receiver|r_rx_byte[4]~4
C1L75 = (C1L6 & (C1_r_rx_data)) # (!C1L6 & ((C1_r_rx_byte[4])));


--C1L7 is uart_rx:receiver|Decoder0~6
C1L7 = (C1_r_bit_index[0] & (!C1_r_bit_index[1] & (C1_r_bit_index[2] & C1L1)));


--C1L77 is uart_rx:receiver|r_rx_byte[5]~5
C1L77 = (C1L7 & (C1_r_rx_data)) # (!C1L7 & ((C1_r_rx_byte[5])));


--C1L8 is uart_rx:receiver|Decoder0~7
C1L8 = (!C1_r_bit_index[0] & (C1_r_bit_index[1] & (C1_r_bit_index[2] & C1L1)));


--C1L79 is uart_rx:receiver|r_rx_byte[6]~6
C1L79 = (C1L8 & (C1_r_rx_data)) # (!C1L8 & ((C1_r_rx_byte[6])));


--C1L9 is uart_rx:receiver|Decoder0~8
C1L9 = (C1_r_bit_index[0] & (C1_r_bit_index[1] & (C1_r_bit_index[2] & C1L1)));


--C1L81 is uart_rx:receiver|r_rx_byte[7]~7
C1L81 = (C1L9 & (C1_r_rx_data)) # (!C1L9 & ((C1_r_rx_byte[7])));


--A1L53 is r_tx_dv~0
A1L53 = (B2L4 & (r_tx_dv)) # (!B2L4 & ((!D1_r_tx_done)));


--D1L72 is uart_tx:transmitter|Selector20~0
D1L72 = (D1_r_sm_main.s_tx_start_bit & ((D1L4) # ((r_tx_dv & !D1_r_sm_main.s_idle)))) # (!D1_r_sm_main.s_tx_start_bit & (((r_tx_dv & !D1_r_sm_main.s_idle))));


--D1_r_bit_index[0] is uart_tx:transmitter|r_bit_index[0]
--register power-up is low

D1_r_bit_index[0] = DFFEAS(D1L70, clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_bit_index[1] is uart_tx:transmitter|r_bit_index[1]
--register power-up is low

D1_r_bit_index[1] = DFFEAS(D1L68, clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_bit_index[2] is uart_tx:transmitter|r_bit_index[2]
--register power-up is low

D1_r_bit_index[2] = DFFEAS(D1L66, clk,  ,  ,  ,  ,  ,  ,  );


--D1L57 is uart_tx:transmitter|r_sm_main.s_tx_stop_bit~0
D1L57 = (D1_r_bit_index[0] & (D1_r_bit_index[1] & (D1_r_bit_index[2] & !D1L4)));


--D1L73 is uart_tx:transmitter|Selector21~0
D1L73 = (D1_r_sm_main.s_tx_start_bit & (((D1_r_sm_main.s_tx_data_bits & !D1L57)) # (!D1L4))) # (!D1_r_sm_main.s_tx_start_bit & (D1_r_sm_main.s_tx_data_bits & ((!D1L57))));


--D1L58 is uart_tx:transmitter|r_sm_main.s_tx_stop_bit~1
D1L58 = (D1_r_sm_main.s_tx_data_bits & ((D1L57) # ((D1_r_sm_main.s_tx_stop_bit & D1L4)))) # (!D1_r_sm_main.s_tx_data_bits & (D1_r_sm_main.s_tx_stop_bit & (D1L4)));


--D1L59 is uart_tx:transmitter|r_sm_main~7
D1L59 = (!D1L4 & D1_r_sm_main.s_tx_stop_bit);


--D1L71 is uart_tx:transmitter|Selector19~0
D1L71 = (!D1_r_sm_main.s_cleanup & ((r_tx_dv) # (D1_r_sm_main.s_idle)));


--D1L42 is uart_tx:transmitter|r_clk_count[9]~35
D1L42 = (!D1L4) # (!D1_r_sm_main.s_idle);


--C1_r_sm_main.s_idle is uart_rx:receiver|r_sm_main.s_idle
--register power-up is low

C1_r_sm_main.s_idle = DFFEAS(C1L101, clk,  ,  ,  ,  ,  ,  ,  );


--C1L10 is uart_rx:receiver|Equal0~0
C1L10 = (C1_r_clk_count[3] & (!C1_r_clk_count[4] & (!C1_r_clk_count[7] & !C1_r_clk_count[8])));


--C1L11 is uart_rx:receiver|Equal0~1
C1L11 = (C1_r_clk_count[5] & (C1_r_clk_count[9] & (!C1_r_clk_count[10] & !C1_r_clk_count[6])));


--C1L12 is uart_rx:receiver|Equal0~2
C1L12 = (C1_r_clk_count[11] & (!C1_r_clk_count[12] & (!C1_r_clk_count[1] & !C1_r_clk_count[0])));


--C1L49 is uart_rx:receiver|r_clk_count[8]~39
C1L49 = (C1_r_sm_main.s_rx_start_bit & C1_r_clk_count[2]);


--C1L50 is uart_rx:receiver|r_clk_count[8]~40
C1L50 = (C1L10 & (C1L11 & (C1L12 & C1L49)));


--C1L51 is uart_rx:receiver|r_clk_count[8]~41
C1L51 = C1_r_sm_main.s_idle $ (C1L50 $ (((C1L92) # (!C1L16))));


--C1L13 is uart_rx:receiver|Equal0~3
C1L13 = (C1_r_clk_count[2] & (C1L10 & (C1L11 & C1L12)));


--C1_r_sm_main.s_cleanup is uart_rx:receiver|r_sm_main.s_cleanup
--register power-up is low

C1_r_sm_main.s_cleanup = DFFEAS(C1L91, clk,  ,  ,  ,  ,  ,  ,  );


--C1L52 is uart_rx:receiver|r_clk_count[8]~42
C1L52 = (!C1_r_sm_main.s_cleanup & (((!C1L13) # (!C1_r_rx_data)) # (!C1_r_sm_main.s_rx_start_bit)));


--C1L90 is uart_rx:receiver|r_sm_main.s_rx_stop_bit~0
C1L90 = (C1L9) # ((C1_r_sm_main.s_rx_stop_bit & !C1L16));


--C1L102 is uart_rx:receiver|Selector18~0
C1L102 = (C1_r_sm_main.s_rx_start_bit & (((!C1_r_rx_data & !C1_r_sm_main.s_idle)) # (!C1L13))) # (!C1_r_sm_main.s_rx_start_bit & (!C1_r_rx_data & (!C1_r_sm_main.s_idle)));


--C1L103 is uart_rx:receiver|Selector19~0
C1L103 = (C1L16 & (C1_r_bit_index[0] & (C1_r_bit_index[1] & C1_r_bit_index[2])));


--C1L104 is uart_rx:receiver|Selector19~1
C1L104 = (C1_r_sm_main.s_rx_data_bits & (((C1L50 & !C1_r_rx_data)) # (!C1L103))) # (!C1_r_sm_main.s_rx_data_bits & (C1L50 & (!C1_r_rx_data)));


--C1_r_rx_data_r is uart_rx:receiver|r_rx_data_r
--register power-up is low

C1_r_rx_data_r = DFFEAS(i_rx_serial, clk,  ,  ,  ,  ,  ,  ,  );


--C1L100 is uart_rx:receiver|Selector16~0
C1L100 = (C1_r_sm_main.s_rx_data_bits & (C1_r_bit_index[0] $ (((C1L16))))) # (!C1_r_sm_main.s_rx_data_bits & (C1_r_bit_index[0] & (C1_r_sm_main.s_idle)));


--C1L98 is uart_rx:receiver|Selector15~2
C1L98 = (C1_r_sm_main.s_rx_data_bits & (C1_r_bit_index[1] $ (((C1L16 & C1_r_bit_index[0])))));


--C1L94 is uart_rx:receiver|Selector14~0
C1L94 = (C1_r_sm_main.s_idle & !C1_r_sm_main.s_rx_data_bits);


--C1L95 is uart_rx:receiver|Selector14~1
C1L95 = (C1_r_bit_index[0] & (C1L1 & (C1_r_bit_index[1] $ (C1_r_bit_index[2]))));


--C1L96 is uart_rx:receiver|Selector14~2
C1L96 = (C1_r_sm_main.s_rx_data_bits & (C1_r_bit_index[2] & ((!C1_r_bit_index[0]) # (!C1L16))));


--C1L97 is uart_rx:receiver|Selector14~3
C1L97 = (C1L95) # ((C1L96) # ((C1_r_bit_index[2] & C1L94)));


--D1L69 is uart_tx:transmitter|Selector18~0
D1L69 = (D1_r_clk_count[12] & (!D1L1 & ((!D1L3) # (!D1L2))));


--D1L70 is uart_tx:transmitter|Selector18~1
D1L70 = (D1_r_sm_main.s_tx_data_bits & (D1_r_bit_index[0] $ (((D1L69))))) # (!D1_r_sm_main.s_tx_data_bits & (D1_r_bit_index[0] & (D1_r_sm_main.s_idle)));


--D1L67 is uart_tx:transmitter|Selector17~0
D1L67 = (D1_r_bit_index[1] & ((D1_r_sm_main.s_tx_data_bits) # (D1_r_sm_main.s_idle)));


--D1L68 is uart_tx:transmitter|Selector17~1
D1L68 = D1L67 $ (((D1_r_bit_index[0] & (!D1L4 & D1_r_sm_main.s_tx_data_bits))));


--D1L65 is uart_tx:transmitter|Selector16~0
D1L65 = (D1_r_bit_index[1] & (D1_r_bit_index[0] & !D1L4));


--D1L66 is uart_tx:transmitter|Selector16~1
D1L66 = (D1_r_sm_main.s_tx_data_bits & (D1_r_bit_index[2] $ (((D1L65))))) # (!D1_r_sm_main.s_tx_data_bits & (D1_r_bit_index[2] & (D1_r_sm_main.s_idle)));


--C1L101 is uart_rx:receiver|Selector17~0
C1L101 = (!C1_r_sm_main.s_cleanup & (((!C1L50 & C1_r_sm_main.s_idle)) # (!C1_r_rx_data)));


--i_rx_serial is i_rx_serial
i_rx_serial = INPUT();


--C1L99 is uart_rx:receiver|Selector15~3
C1L99 = (C1L98) # ((C1_r_sm_main.s_idle & (!C1_r_sm_main.s_rx_data_bits & C1_r_bit_index[1])));


--C1L15 is uart_rx:receiver|LessThan1~1
C1L15 = (C1_r_clk_count[9]) # ((C1_r_clk_count[8]) # ((C1_r_clk_count[7]) # (!C1L14)));


--C1L16 is uart_rx:receiver|LessThan1~2
C1L16 = (C1_r_clk_count[12] & ((C1_r_clk_count[11]) # ((C1_r_clk_count[10] & C1L15))));


--A1L73 is ~GND
A1L73 = GND;


--A1L74 is ~VCC
A1L74 = VCC;


--B2L2 is fifo:fifo_tx|Equal2~0_wirecell
B2L2 = !B2L1;


