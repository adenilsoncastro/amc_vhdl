-- Copyright (C) 2020  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and any partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details, at
-- https://fpgasoftware.intel.com/eula.
--C1_r_fifo_count[3] is uart:uart_unit|fifo:fifo_rx|r_fifo_count[3]
--register power-up is low

C1_r_fifo_count[3] = DFFEAS(C1L23, i_clk,  ,  , C1L25,  ,  , !i_rst_sync,  );


--C1_r_fifo_count[1] is uart:uart_unit|fifo:fifo_rx|r_fifo_count[1]
--register power-up is low

C1_r_fifo_count[1] = DFFEAS(C1L17, i_clk,  ,  , C1L25,  ,  , !i_rst_sync,  );


--C1_r_fifo_count[0] is uart:uart_unit|fifo:fifo_rx|r_fifo_count[0]
--register power-up is low

C1_r_fifo_count[0] = DFFEAS(C1L14, i_clk,  ,  , C1L25,  ,  , !i_rst_sync,  );


--C1_r_fifo_count[2] is uart:uart_unit|fifo:fifo_rx|r_fifo_count[2]
--register power-up is low

C1_r_fifo_count[2] = DFFEAS(C1L20, i_clk,  ,  , C1L25,  ,  , !i_rst_sync,  );


--C1_r_fifo_count[4] is uart:uart_unit|fifo:fifo_rx|r_fifo_count[4]
--register power-up is low

C1_r_fifo_count[4] = DFFEAS(C1L27, i_clk,  ,  , C1L25,  ,  , !i_rst_sync,  );


--C2_r_fifo_count[3] is uart:uart_unit|fifo:fifo_tx|r_fifo_count[3]
--register power-up is low

C2_r_fifo_count[3] = DFFEAS(C2L23, i_clk,  ,  , C2L18,  ,  , !i_rst_sync,  );


--C2_r_fifo_count[1] is uart:uart_unit|fifo:fifo_tx|r_fifo_count[1]
--register power-up is low

C2_r_fifo_count[1] = DFFEAS(C2L16, i_clk,  ,  , C2L18,  ,  , !i_rst_sync,  );


--C2_r_fifo_count[0] is uart:uart_unit|fifo:fifo_tx|r_fifo_count[0]
--register power-up is low

C2_r_fifo_count[0] = DFFEAS(C2L13, i_clk,  ,  , C2L18,  ,  , !i_rst_sync,  );


--C2_r_fifo_count[2] is uart:uart_unit|fifo:fifo_tx|r_fifo_count[2]
--register power-up is low

C2_r_fifo_count[2] = DFFEAS(C2L20, i_clk,  ,  , C2L18,  ,  , !i_rst_sync,  );


--C2_r_fifo_count[4] is uart:uart_unit|fifo:fifo_tx|r_fifo_count[4]
--register power-up is low

C2_r_fifo_count[4] = DFFEAS(C2L26, i_clk,  ,  , C2L18,  ,  , !i_rst_sync,  );


--r_addr[0] is r_addr[0]
--register power-up is low

r_addr[0] = DFFEAS(A1L174, i_clk,  ,  , i_rst, A1L369,  ,  , !r_sm.s_process);


--r_addr[1] is r_addr[1]
--register power-up is low

r_addr[1] = DFFEAS(A1L177, i_clk,  ,  , i_rst, A1L368,  ,  , !r_sm.s_process);


--r_addr[2] is r_addr[2]
--register power-up is low

r_addr[2] = DFFEAS(A1L180, i_clk,  ,  , i_rst, A1L367,  ,  , !r_sm.s_process);


--r_addr[3] is r_addr[3]
--register power-up is low

r_addr[3] = DFFEAS(A1L183, i_clk,  ,  , i_rst, A1L366,  ,  , !r_sm.s_process);


--r_addr[4] is r_addr[4]
--register power-up is low

r_addr[4] = DFFEAS(A1L186, i_clk,  ,  , i_rst, A1L365,  ,  , !r_sm.s_process);


--r_addr[5] is r_addr[5]
--register power-up is low

r_addr[5] = DFFEAS(A1L189, i_clk,  ,  , i_rst, A1L364,  ,  , !r_sm.s_process);


--r_addr[6] is r_addr[6]
--register power-up is low

r_addr[6] = DFFEAS(A1L192, i_clk,  ,  , i_rst, A1L363,  ,  , !r_sm.s_process);


--r_addr[7] is r_addr[7]
--register power-up is low

r_addr[7] = DFFEAS(A1L195, i_clk,  ,  , i_rst, A1L362,  ,  , !r_sm.s_process);


--r_addr[8] is r_addr[8]
--register power-up is low

r_addr[8] = DFFEAS(A1L198, i_clk,  ,  , i_rst, A1L361,  ,  , !r_sm.s_process);


--r_addr[9] is r_addr[9]
--register power-up is low

r_addr[9] = DFFEAS(A1L201, i_clk,  ,  , i_rst, A1L360,  ,  , !r_sm.s_process);


--r_addr[10] is r_addr[10]
--register power-up is low

r_addr[10] = DFFEAS(A1L204, i_clk,  ,  , i_rst, A1L359,  ,  , !r_sm.s_process);


--r_addr[11] is r_addr[11]
--register power-up is low

r_addr[11] = DFFEAS(A1L207, i_clk,  ,  , i_rst, A1L358,  ,  , !r_sm.s_process);


--r_addr[12] is r_addr[12]
--register power-up is low

r_addr[12] = DFFEAS(A1L210, i_clk,  ,  , i_rst, A1L357,  ,  , !r_sm.s_process);


--r_addr[13] is r_addr[13]
--register power-up is low

r_addr[13] = DFFEAS(A1L213, i_clk,  ,  , i_rst, A1L356,  ,  , !r_sm.s_process);


--r_addr[14] is r_addr[14]
--register power-up is low

r_addr[14] = DFFEAS(A1L216, i_clk,  ,  , i_rst, A1L355,  ,  , !r_sm.s_process);


--r_addr[15] is r_addr[15]
--register power-up is low

r_addr[15] = DFFEAS(A1L219, i_clk,  ,  , i_rst, A1L354,  ,  , !r_sm.s_process);


--r_addr[16] is r_addr[16]
--register power-up is low

r_addr[16] = DFFEAS(A1L222, i_clk,  ,  , i_rst, A1L353,  ,  , !r_sm.s_process);


--r_addr[17] is r_addr[17]
--register power-up is low

r_addr[17] = DFFEAS(A1L225, i_clk,  ,  , i_rst, A1L352,  ,  , !r_sm.s_process);


--r_addr[18] is r_addr[18]
--register power-up is low

r_addr[18] = DFFEAS(A1L228, i_clk,  ,  , i_rst, A1L351,  ,  , !r_sm.s_process);


--r_addr[19] is r_addr[19]
--register power-up is low

r_addr[19] = DFFEAS(A1L231, i_clk,  ,  , i_rst, A1L350,  ,  , !r_sm.s_process);


--C1L14 is uart:uart_unit|fifo:fifo_rx|r_fifo_count[0]~5
C1L14 = C1_r_fifo_count[0] $ (VCC);

--C1L15 is uart:uart_unit|fifo:fifo_rx|r_fifo_count[0]~6
C1L15 = CARRY(C1_r_fifo_count[0]);


--C1L17 is uart:uart_unit|fifo:fifo_rx|r_fifo_count[1]~7
C1L17 = (C1_r_fifo_count[1] & ((C1L10 & (!C1L15)) # (!C1L10 & (C1L15 & VCC)))) # (!C1_r_fifo_count[1] & ((C1L10 & ((C1L15) # (GND))) # (!C1L10 & (!C1L15))));

--C1L18 is uart:uart_unit|fifo:fifo_rx|r_fifo_count[1]~8
C1L18 = CARRY((C1_r_fifo_count[1] & (C1L10 & !C1L15)) # (!C1_r_fifo_count[1] & ((C1L10) # (!C1L15))));


--C1L20 is uart:uart_unit|fifo:fifo_rx|r_fifo_count[2]~9
C1L20 = ((C1_r_fifo_count[2] $ (C1L10 $ (C1L18)))) # (GND);

--C1L21 is uart:uart_unit|fifo:fifo_rx|r_fifo_count[2]~10
C1L21 = CARRY((C1_r_fifo_count[2] & ((!C1L18) # (!C1L10))) # (!C1_r_fifo_count[2] & (!C1L10 & !C1L18)));


--C1L23 is uart:uart_unit|fifo:fifo_rx|r_fifo_count[3]~11
C1L23 = (C1_r_fifo_count[3] & ((C1L10 & (!C1L21)) # (!C1L10 & (C1L21 & VCC)))) # (!C1_r_fifo_count[3] & ((C1L10 & ((C1L21) # (GND))) # (!C1L10 & (!C1L21))));

--C1L24 is uart:uart_unit|fifo:fifo_rx|r_fifo_count[3]~12
C1L24 = CARRY((C1_r_fifo_count[3] & (C1L10 & !C1L21)) # (!C1_r_fifo_count[3] & ((C1L10) # (!C1L21))));


--C1L27 is uart:uart_unit|fifo:fifo_rx|r_fifo_count[4]~14
C1L27 = C1_r_fifo_count[4] $ (C1L10 $ (C1L24));


--C2L13 is uart:uart_unit|fifo:fifo_tx|r_fifo_count[0]~5
C2L13 = C2_r_fifo_count[0] $ (VCC);

--C2L14 is uart:uart_unit|fifo:fifo_tx|r_fifo_count[0]~6
C2L14 = CARRY(C2_r_fifo_count[0]);


--C2L16 is uart:uart_unit|fifo:fifo_tx|r_fifo_count[1]~7
C2L16 = (C2_r_fifo_count[1] & ((C2L9 & (!C2L14)) # (!C2L9 & (C2L14 & VCC)))) # (!C2_r_fifo_count[1] & ((C2L9 & ((C2L14) # (GND))) # (!C2L9 & (!C2L14))));

--C2L17 is uart:uart_unit|fifo:fifo_tx|r_fifo_count[1]~8
C2L17 = CARRY((C2_r_fifo_count[1] & (C2L9 & !C2L14)) # (!C2_r_fifo_count[1] & ((C2L9) # (!C2L14))));


--C2L20 is uart:uart_unit|fifo:fifo_tx|r_fifo_count[2]~9
C2L20 = ((C2_r_fifo_count[2] $ (C2L9 $ (C2L17)))) # (GND);

--C2L21 is uart:uart_unit|fifo:fifo_tx|r_fifo_count[2]~10
C2L21 = CARRY((C2_r_fifo_count[2] & ((!C2L17) # (!C2L9))) # (!C2_r_fifo_count[2] & (!C2L9 & !C2L17)));


--C2L23 is uart:uart_unit|fifo:fifo_tx|r_fifo_count[3]~11
C2L23 = (C2_r_fifo_count[3] & ((C2L9 & (!C2L21)) # (!C2L9 & (C2L21 & VCC)))) # (!C2_r_fifo_count[3] & ((C2L9 & ((C2L21) # (GND))) # (!C2L9 & (!C2L21))));

--C2L24 is uart:uart_unit|fifo:fifo_tx|r_fifo_count[3]~12
C2L24 = CARRY((C2_r_fifo_count[3] & (C2L9 & !C2L21)) # (!C2_r_fifo_count[3] & ((C2L9) # (!C2L21))));


--C2L26 is uart:uart_unit|fifo:fifo_tx|r_fifo_count[4]~14
C2L26 = C2_r_fifo_count[4] $ (C2L9 $ (C2L24));


--A1L174 is r_addr[0]~0
A1L174 = (A1L85 & ((A1L102))) # (!A1L85 & (r_addr[0]));


--A1L177 is r_addr[1]~1
A1L177 = (A1L86 & ((A1L102))) # (!A1L86 & (r_addr[1]));


--A1L180 is r_addr[2]~2
A1L180 = (A1L87 & ((A1L102))) # (!A1L87 & (r_addr[2]));


--A1L183 is r_addr[3]~3
A1L183 = (A1L88 & ((A1L102))) # (!A1L88 & (r_addr[3]));


--A1L186 is r_addr[4]~4
A1L186 = (A1L72 & ((A1L102))) # (!A1L72 & (r_addr[4]));


--A1L189 is r_addr[5]~5
A1L189 = (A1L73 & ((A1L102))) # (!A1L73 & (r_addr[5]));


--A1L192 is r_addr[6]~6
A1L192 = (A1L74 & ((A1L102))) # (!A1L74 & (r_addr[6]));


--A1L195 is r_addr[7]~7
A1L195 = (A1L75 & ((A1L102))) # (!A1L75 & (r_addr[7]));


--A1L198 is r_addr[8]~8
A1L198 = (A1L76 & ((A1L102))) # (!A1L76 & (r_addr[8]));


--A1L201 is r_addr[9]~9
A1L201 = (A1L77 & ((A1L102))) # (!A1L77 & (r_addr[9]));


--A1L204 is r_addr[10]~10
A1L204 = (A1L78 & ((A1L102))) # (!A1L78 & (r_addr[10]));


--A1L207 is r_addr[11]~11
A1L207 = (A1L79 & ((A1L102))) # (!A1L79 & (r_addr[11]));


--A1L210 is r_addr[12]~12
A1L210 = (A1L80 & ((A1L102))) # (!A1L80 & (r_addr[12]));


--A1L213 is r_addr[13]~13
A1L213 = (A1L81 & ((A1L102))) # (!A1L81 & (r_addr[13]));


--A1L216 is r_addr[14]~14
A1L216 = (A1L82 & ((A1L102))) # (!A1L82 & (r_addr[14]));


--A1L219 is r_addr[15]~15
A1L219 = (A1L83 & ((A1L102))) # (!A1L83 & (r_addr[15]));


--A1L222 is r_addr[16]~16
A1L222 = (A1L89 & ((A1L102))) # (!A1L89 & (r_addr[16]));


--A1L225 is r_addr[17]~17
A1L225 = (A1L90 & ((A1L102))) # (!A1L90 & (r_addr[17]));


--A1L228 is r_addr[18]~18
A1L228 = (A1L91 & ((A1L102))) # (!A1L91 & (r_addr[18]));


--A1L231 is r_addr[19]~19
A1L231 = (A1L92 & ((A1L102))) # (!A1L92 & (r_addr[19]));


--D1_r_clk_count[12] is uart:uart_unit|uart_rx:receiver|r_clk_count[12]
--register power-up is low

D1_r_clk_count[12] = DFFEAS(D1L60, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[3] is uart:uart_unit|uart_rx:receiver|r_clk_count[3]
--register power-up is low

D1_r_clk_count[3] = DFFEAS(D1L33, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[4] is uart:uart_unit|uart_rx:receiver|r_clk_count[4]
--register power-up is low

D1_r_clk_count[4] = DFFEAS(D1L36, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[5] is uart:uart_unit|uart_rx:receiver|r_clk_count[5]
--register power-up is low

D1_r_clk_count[5] = DFFEAS(D1L39, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[6] is uart:uart_unit|uart_rx:receiver|r_clk_count[6]
--register power-up is low

D1_r_clk_count[6] = DFFEAS(D1L42, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[11] is uart:uart_unit|uart_rx:receiver|r_clk_count[11]
--register power-up is low

D1_r_clk_count[11] = DFFEAS(D1L57, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[7] is uart:uart_unit|uart_rx:receiver|r_clk_count[7]
--register power-up is low

D1_r_clk_count[7] = DFFEAS(D1L45, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[8] is uart:uart_unit|uart_rx:receiver|r_clk_count[8]
--register power-up is low

D1_r_clk_count[8] = DFFEAS(D1L48, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[9] is uart:uart_unit|uart_rx:receiver|r_clk_count[9]
--register power-up is low

D1_r_clk_count[9] = DFFEAS(D1L51, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[10] is uart:uart_unit|uart_rx:receiver|r_clk_count[10]
--register power-up is low

D1_r_clk_count[10] = DFFEAS(D1L54, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--G1_ram_block1a6 is uart:uart_unit|fifo:fifo_tx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a6
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G1_ram_block1a6_PORT_A_data_in = A1L370;
G1_ram_block1a6_PORT_A_data_in_reg = DFFE(G1_ram_block1a6_PORT_A_data_in, G1_ram_block1a6_clock_0, , , );
G1_ram_block1a6_PORT_A_address = BUS(C2_r_wr_index[0], C2_r_wr_index[1], C2_r_wr_index[2], C2_r_wr_index[3]);
G1_ram_block1a6_PORT_A_address_reg = DFFE(G1_ram_block1a6_PORT_A_address, G1_ram_block1a6_clock_0, , , );
G1_ram_block1a6_PORT_B_address = BUS(C2L65, C2L68, C2L69, C2L70);
G1_ram_block1a6_PORT_B_address_reg = DFFE(G1_ram_block1a6_PORT_B_address, G1_ram_block1a6_clock_0, , , );
G1_ram_block1a6_PORT_A_write_enable = C2L59;
G1_ram_block1a6_PORT_A_write_enable_reg = DFFE(G1_ram_block1a6_PORT_A_write_enable, G1_ram_block1a6_clock_0, , , );
G1_ram_block1a6_PORT_B_read_enable = VCC;
G1_ram_block1a6_PORT_B_read_enable_reg = DFFE(G1_ram_block1a6_PORT_B_read_enable, G1_ram_block1a6_clock_0, , , );
G1_ram_block1a6_clock_0 = i_clk;
G1_ram_block1a6_PORT_B_data_out = MEMORY(G1_ram_block1a6_PORT_A_data_in_reg, , G1_ram_block1a6_PORT_A_address_reg, G1_ram_block1a6_PORT_B_address_reg, G1_ram_block1a6_PORT_A_write_enable_reg, , , G1_ram_block1a6_PORT_B_read_enable_reg, , , G1_ram_block1a6_clock_0, , , , , , , );
G1_ram_block1a6 = G1_ram_block1a6_PORT_B_data_out[0];


--E1_r_clk_count[3] is uart:uart_unit|uart_tx:transmitter|r_clk_count[3]
--register power-up is low

E1_r_clk_count[3] = DFFEAS(E1L25, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[4] is uart:uart_unit|uart_tx:transmitter|r_clk_count[4]
--register power-up is low

E1_r_clk_count[4] = DFFEAS(E1L28, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[5] is uart:uart_unit|uart_tx:transmitter|r_clk_count[5]
--register power-up is low

E1_r_clk_count[5] = DFFEAS(E1L31, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[6] is uart:uart_unit|uart_tx:transmitter|r_clk_count[6]
--register power-up is low

E1_r_clk_count[6] = DFFEAS(E1L34, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[11] is uart:uart_unit|uart_tx:transmitter|r_clk_count[11]
--register power-up is low

E1_r_clk_count[11] = DFFEAS(E1L50, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[7] is uart:uart_unit|uart_tx:transmitter|r_clk_count[7]
--register power-up is low

E1_r_clk_count[7] = DFFEAS(E1L37, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[8] is uart:uart_unit|uart_tx:transmitter|r_clk_count[8]
--register power-up is low

E1_r_clk_count[8] = DFFEAS(E1L40, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[9] is uart:uart_unit|uart_tx:transmitter|r_clk_count[9]
--register power-up is low

E1_r_clk_count[9] = DFFEAS(E1L43, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[10] is uart:uart_unit|uart_tx:transmitter|r_clk_count[10]
--register power-up is low

E1_r_clk_count[10] = DFFEAS(E1L46, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[12] is uart:uart_unit|uart_tx:transmitter|r_clk_count[12]
--register power-up is low

E1_r_clk_count[12] = DFFEAS(E1L53, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--G1_ram_block1a5 is uart:uart_unit|fifo:fifo_tx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a5
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G1_ram_block1a5_PORT_A_data_in = A1L370;
G1_ram_block1a5_PORT_A_data_in_reg = DFFE(G1_ram_block1a5_PORT_A_data_in, G1_ram_block1a5_clock_0, , , );
G1_ram_block1a5_PORT_A_address = BUS(C2_r_wr_index[0], C2_r_wr_index[1], C2_r_wr_index[2], C2_r_wr_index[3]);
G1_ram_block1a5_PORT_A_address_reg = DFFE(G1_ram_block1a5_PORT_A_address, G1_ram_block1a5_clock_0, , , );
G1_ram_block1a5_PORT_B_address = BUS(C2L65, C2L68, C2L69, C2L70);
G1_ram_block1a5_PORT_B_address_reg = DFFE(G1_ram_block1a5_PORT_B_address, G1_ram_block1a5_clock_0, , , );
G1_ram_block1a5_PORT_A_write_enable = C2L59;
G1_ram_block1a5_PORT_A_write_enable_reg = DFFE(G1_ram_block1a5_PORT_A_write_enable, G1_ram_block1a5_clock_0, , , );
G1_ram_block1a5_PORT_B_read_enable = VCC;
G1_ram_block1a5_PORT_B_read_enable_reg = DFFE(G1_ram_block1a5_PORT_B_read_enable, G1_ram_block1a5_clock_0, , , );
G1_ram_block1a5_clock_0 = i_clk;
G1_ram_block1a5_PORT_B_data_out = MEMORY(G1_ram_block1a5_PORT_A_data_in_reg, , G1_ram_block1a5_PORT_A_address_reg, G1_ram_block1a5_PORT_B_address_reg, G1_ram_block1a5_PORT_A_write_enable_reg, , , G1_ram_block1a5_PORT_B_read_enable_reg, , , G1_ram_block1a5_clock_0, , , , , , , );
G1_ram_block1a5 = G1_ram_block1a5_PORT_B_data_out[0];


--G1_ram_block1a4 is uart:uart_unit|fifo:fifo_tx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a4
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G1_ram_block1a4_PORT_A_data_in = A1L370;
G1_ram_block1a4_PORT_A_data_in_reg = DFFE(G1_ram_block1a4_PORT_A_data_in, G1_ram_block1a4_clock_0, , , );
G1_ram_block1a4_PORT_A_address = BUS(C2_r_wr_index[0], C2_r_wr_index[1], C2_r_wr_index[2], C2_r_wr_index[3]);
G1_ram_block1a4_PORT_A_address_reg = DFFE(G1_ram_block1a4_PORT_A_address, G1_ram_block1a4_clock_0, , , );
G1_ram_block1a4_PORT_B_address = BUS(C2L65, C2L68, C2L69, C2L70);
G1_ram_block1a4_PORT_B_address_reg = DFFE(G1_ram_block1a4_PORT_B_address, G1_ram_block1a4_clock_0, , , );
G1_ram_block1a4_PORT_A_write_enable = C2L59;
G1_ram_block1a4_PORT_A_write_enable_reg = DFFE(G1_ram_block1a4_PORT_A_write_enable, G1_ram_block1a4_clock_0, , , );
G1_ram_block1a4_PORT_B_read_enable = VCC;
G1_ram_block1a4_PORT_B_read_enable_reg = DFFE(G1_ram_block1a4_PORT_B_read_enable, G1_ram_block1a4_clock_0, , , );
G1_ram_block1a4_clock_0 = i_clk;
G1_ram_block1a4_PORT_B_data_out = MEMORY(G1_ram_block1a4_PORT_A_data_in_reg, , G1_ram_block1a4_PORT_A_address_reg, G1_ram_block1a4_PORT_B_address_reg, G1_ram_block1a4_PORT_A_write_enable_reg, , , G1_ram_block1a4_PORT_B_read_enable_reg, , , G1_ram_block1a4_clock_0, , , , , , , );
G1_ram_block1a4 = G1_ram_block1a4_PORT_B_data_out[0];


--G1_ram_block1a7 is uart:uart_unit|fifo:fifo_tx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a7
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G1_ram_block1a7_PORT_A_data_in = A1L370;
G1_ram_block1a7_PORT_A_data_in_reg = DFFE(G1_ram_block1a7_PORT_A_data_in, G1_ram_block1a7_clock_0, , , );
G1_ram_block1a7_PORT_A_address = BUS(C2_r_wr_index[0], C2_r_wr_index[1], C2_r_wr_index[2], C2_r_wr_index[3]);
G1_ram_block1a7_PORT_A_address_reg = DFFE(G1_ram_block1a7_PORT_A_address, G1_ram_block1a7_clock_0, , , );
G1_ram_block1a7_PORT_B_address = BUS(C2L65, C2L68, C2L69, C2L70);
G1_ram_block1a7_PORT_B_address_reg = DFFE(G1_ram_block1a7_PORT_B_address, G1_ram_block1a7_clock_0, , , );
G1_ram_block1a7_PORT_A_write_enable = C2L59;
G1_ram_block1a7_PORT_A_write_enable_reg = DFFE(G1_ram_block1a7_PORT_A_write_enable, G1_ram_block1a7_clock_0, , , );
G1_ram_block1a7_PORT_B_read_enable = VCC;
G1_ram_block1a7_PORT_B_read_enable_reg = DFFE(G1_ram_block1a7_PORT_B_read_enable, G1_ram_block1a7_clock_0, , , );
G1_ram_block1a7_clock_0 = i_clk;
G1_ram_block1a7_PORT_B_data_out = MEMORY(G1_ram_block1a7_PORT_A_data_in_reg, , G1_ram_block1a7_PORT_A_address_reg, G1_ram_block1a7_PORT_B_address_reg, G1_ram_block1a7_PORT_A_write_enable_reg, , , G1_ram_block1a7_PORT_B_read_enable_reg, , , G1_ram_block1a7_clock_0, , , , , , , );
G1_ram_block1a7 = G1_ram_block1a7_PORT_B_data_out[0];


--G1_ram_block1a2 is uart:uart_unit|fifo:fifo_tx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a2
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G1_ram_block1a2_PORT_A_data_in = r_tx_data[1];
G1_ram_block1a2_PORT_A_data_in_reg = DFFE(G1_ram_block1a2_PORT_A_data_in, G1_ram_block1a2_clock_0, , , );
G1_ram_block1a2_PORT_A_address = BUS(C2_r_wr_index[0], C2_r_wr_index[1], C2_r_wr_index[2], C2_r_wr_index[3]);
G1_ram_block1a2_PORT_A_address_reg = DFFE(G1_ram_block1a2_PORT_A_address, G1_ram_block1a2_clock_0, , , );
G1_ram_block1a2_PORT_B_address = BUS(C2L65, C2L68, C2L69, C2L70);
G1_ram_block1a2_PORT_B_address_reg = DFFE(G1_ram_block1a2_PORT_B_address, G1_ram_block1a2_clock_0, , , );
G1_ram_block1a2_PORT_A_write_enable = C2L59;
G1_ram_block1a2_PORT_A_write_enable_reg = DFFE(G1_ram_block1a2_PORT_A_write_enable, G1_ram_block1a2_clock_0, , , );
G1_ram_block1a2_PORT_B_read_enable = VCC;
G1_ram_block1a2_PORT_B_read_enable_reg = DFFE(G1_ram_block1a2_PORT_B_read_enable, G1_ram_block1a2_clock_0, , , );
G1_ram_block1a2_clock_0 = i_clk;
G1_ram_block1a2_PORT_B_data_out = MEMORY(G1_ram_block1a2_PORT_A_data_in_reg, , G1_ram_block1a2_PORT_A_address_reg, G1_ram_block1a2_PORT_B_address_reg, G1_ram_block1a2_PORT_A_write_enable_reg, , , G1_ram_block1a2_PORT_B_read_enable_reg, , , G1_ram_block1a2_clock_0, , , , , , , );
G1_ram_block1a2 = G1_ram_block1a2_PORT_B_data_out[0];


--G1_ram_block1a1 is uart:uart_unit|fifo:fifo_tx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a1
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G1_ram_block1a1_PORT_A_data_in = r_tx_data[1];
G1_ram_block1a1_PORT_A_data_in_reg = DFFE(G1_ram_block1a1_PORT_A_data_in, G1_ram_block1a1_clock_0, , , );
G1_ram_block1a1_PORT_A_address = BUS(C2_r_wr_index[0], C2_r_wr_index[1], C2_r_wr_index[2], C2_r_wr_index[3]);
G1_ram_block1a1_PORT_A_address_reg = DFFE(G1_ram_block1a1_PORT_A_address, G1_ram_block1a1_clock_0, , , );
G1_ram_block1a1_PORT_B_address = BUS(C2L65, C2L68, C2L69, C2L70);
G1_ram_block1a1_PORT_B_address_reg = DFFE(G1_ram_block1a1_PORT_B_address, G1_ram_block1a1_clock_0, , , );
G1_ram_block1a1_PORT_A_write_enable = C2L59;
G1_ram_block1a1_PORT_A_write_enable_reg = DFFE(G1_ram_block1a1_PORT_A_write_enable, G1_ram_block1a1_clock_0, , , );
G1_ram_block1a1_PORT_B_read_enable = VCC;
G1_ram_block1a1_PORT_B_read_enable_reg = DFFE(G1_ram_block1a1_PORT_B_read_enable, G1_ram_block1a1_clock_0, , , );
G1_ram_block1a1_clock_0 = i_clk;
G1_ram_block1a1_PORT_B_data_out = MEMORY(G1_ram_block1a1_PORT_A_data_in_reg, , G1_ram_block1a1_PORT_A_address_reg, G1_ram_block1a1_PORT_B_address_reg, G1_ram_block1a1_PORT_A_write_enable_reg, , , G1_ram_block1a1_PORT_B_read_enable_reg, , , G1_ram_block1a1_clock_0, , , , , , , );
G1_ram_block1a1 = G1_ram_block1a1_PORT_B_data_out[0];


--G1_ram_block1a0 is uart:uart_unit|fifo:fifo_tx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a0
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G1_ram_block1a0_PORT_A_data_in = A1L370;
G1_ram_block1a0_PORT_A_data_in_reg = DFFE(G1_ram_block1a0_PORT_A_data_in, G1_ram_block1a0_clock_0, , , );
G1_ram_block1a0_PORT_A_address = BUS(C2_r_wr_index[0], C2_r_wr_index[1], C2_r_wr_index[2], C2_r_wr_index[3]);
G1_ram_block1a0_PORT_A_address_reg = DFFE(G1_ram_block1a0_PORT_A_address, G1_ram_block1a0_clock_0, , , );
G1_ram_block1a0_PORT_B_address = BUS(C2L65, C2L68, C2L69, C2L70);
G1_ram_block1a0_PORT_B_address_reg = DFFE(G1_ram_block1a0_PORT_B_address, G1_ram_block1a0_clock_0, , , );
G1_ram_block1a0_PORT_A_write_enable = C2L59;
G1_ram_block1a0_PORT_A_write_enable_reg = DFFE(G1_ram_block1a0_PORT_A_write_enable, G1_ram_block1a0_clock_0, , , );
G1_ram_block1a0_PORT_B_read_enable = VCC;
G1_ram_block1a0_PORT_B_read_enable_reg = DFFE(G1_ram_block1a0_PORT_B_read_enable, G1_ram_block1a0_clock_0, , , );
G1_ram_block1a0_clock_0 = i_clk;
G1_ram_block1a0_PORT_B_data_out = MEMORY(G1_ram_block1a0_PORT_A_data_in_reg, , G1_ram_block1a0_PORT_A_address_reg, G1_ram_block1a0_PORT_B_address_reg, G1_ram_block1a0_PORT_A_write_enable_reg, , , G1_ram_block1a0_PORT_B_read_enable_reg, , , G1_ram_block1a0_clock_0, , , , , , , );
G1_ram_block1a0 = G1_ram_block1a0_PORT_B_data_out[0];


--G1_ram_block1a3 is uart:uart_unit|fifo:fifo_tx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a3
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G1_ram_block1a3_PORT_A_data_in = A1L370;
G1_ram_block1a3_PORT_A_data_in_reg = DFFE(G1_ram_block1a3_PORT_A_data_in, G1_ram_block1a3_clock_0, , , );
G1_ram_block1a3_PORT_A_address = BUS(C2_r_wr_index[0], C2_r_wr_index[1], C2_r_wr_index[2], C2_r_wr_index[3]);
G1_ram_block1a3_PORT_A_address_reg = DFFE(G1_ram_block1a3_PORT_A_address, G1_ram_block1a3_clock_0, , , );
G1_ram_block1a3_PORT_B_address = BUS(C2L65, C2L68, C2L69, C2L70);
G1_ram_block1a3_PORT_B_address_reg = DFFE(G1_ram_block1a3_PORT_B_address, G1_ram_block1a3_clock_0, , , );
G1_ram_block1a3_PORT_A_write_enable = C2L59;
G1_ram_block1a3_PORT_A_write_enable_reg = DFFE(G1_ram_block1a3_PORT_A_write_enable, G1_ram_block1a3_clock_0, , , );
G1_ram_block1a3_PORT_B_read_enable = VCC;
G1_ram_block1a3_PORT_B_read_enable_reg = DFFE(G1_ram_block1a3_PORT_B_read_enable, G1_ram_block1a3_clock_0, , , );
G1_ram_block1a3_clock_0 = i_clk;
G1_ram_block1a3_PORT_B_data_out = MEMORY(G1_ram_block1a3_PORT_A_data_in_reg, , G1_ram_block1a3_PORT_A_address_reg, G1_ram_block1a3_PORT_B_address_reg, G1_ram_block1a3_PORT_A_write_enable_reg, , , G1_ram_block1a3_PORT_B_read_enable_reg, , , G1_ram_block1a3_clock_0, , , , , , , );
G1_ram_block1a3 = G1_ram_block1a3_PORT_B_data_out[0];


--G2_ram_block1a0 is uart:uart_unit|fifo:fifo_rx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a0
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G2_ram_block1a0_PORT_A_data_in = D1_r_rx_byte[0];
G2_ram_block1a0_PORT_A_data_in_reg = DFFE(G2_ram_block1a0_PORT_A_data_in, G2_ram_block1a0_clock_0, , , );
G2_ram_block1a0_PORT_A_address = BUS(C1_r_wr_index[0], C1_r_wr_index[1], C1_r_wr_index[2], C1_r_wr_index[3]);
G2_ram_block1a0_PORT_A_address_reg = DFFE(G2_ram_block1a0_PORT_A_address, G2_ram_block1a0_clock_0, , , );
G2_ram_block1a0_PORT_B_address = BUS(C1L63, C1L66, C1L67, C1L68);
G2_ram_block1a0_PORT_B_address_reg = DFFE(G2_ram_block1a0_PORT_B_address, G2_ram_block1a0_clock_0, , , );
G2_ram_block1a0_PORT_A_write_enable = C1L57;
G2_ram_block1a0_PORT_A_write_enable_reg = DFFE(G2_ram_block1a0_PORT_A_write_enable, G2_ram_block1a0_clock_0, , , );
G2_ram_block1a0_PORT_B_read_enable = VCC;
G2_ram_block1a0_PORT_B_read_enable_reg = DFFE(G2_ram_block1a0_PORT_B_read_enable, G2_ram_block1a0_clock_0, , , );
G2_ram_block1a0_clock_0 = i_clk;
G2_ram_block1a0_PORT_B_data_out = MEMORY(G2_ram_block1a0_PORT_A_data_in_reg, , G2_ram_block1a0_PORT_A_address_reg, G2_ram_block1a0_PORT_B_address_reg, G2_ram_block1a0_PORT_A_write_enable_reg, , , G2_ram_block1a0_PORT_B_read_enable_reg, , , G2_ram_block1a0_clock_0, , , , , , , );
G2_ram_block1a0 = G2_ram_block1a0_PORT_B_data_out[0];


--G2_ram_block1a5 is uart:uart_unit|fifo:fifo_rx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a5
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G2_ram_block1a5_PORT_A_data_in = D1_r_rx_byte[5];
G2_ram_block1a5_PORT_A_data_in_reg = DFFE(G2_ram_block1a5_PORT_A_data_in, G2_ram_block1a5_clock_0, , , );
G2_ram_block1a5_PORT_A_address = BUS(C1_r_wr_index[0], C1_r_wr_index[1], C1_r_wr_index[2], C1_r_wr_index[3]);
G2_ram_block1a5_PORT_A_address_reg = DFFE(G2_ram_block1a5_PORT_A_address, G2_ram_block1a5_clock_0, , , );
G2_ram_block1a5_PORT_B_address = BUS(C1L63, C1L66, C1L67, C1L68);
G2_ram_block1a5_PORT_B_address_reg = DFFE(G2_ram_block1a5_PORT_B_address, G2_ram_block1a5_clock_0, , , );
G2_ram_block1a5_PORT_A_write_enable = C1L57;
G2_ram_block1a5_PORT_A_write_enable_reg = DFFE(G2_ram_block1a5_PORT_A_write_enable, G2_ram_block1a5_clock_0, , , );
G2_ram_block1a5_PORT_B_read_enable = VCC;
G2_ram_block1a5_PORT_B_read_enable_reg = DFFE(G2_ram_block1a5_PORT_B_read_enable, G2_ram_block1a5_clock_0, , , );
G2_ram_block1a5_clock_0 = i_clk;
G2_ram_block1a5_PORT_B_data_out = MEMORY(G2_ram_block1a5_PORT_A_data_in_reg, , G2_ram_block1a5_PORT_A_address_reg, G2_ram_block1a5_PORT_B_address_reg, G2_ram_block1a5_PORT_A_write_enable_reg, , , G2_ram_block1a5_PORT_B_read_enable_reg, , , G2_ram_block1a5_clock_0, , , , , , , );
G2_ram_block1a5 = G2_ram_block1a5_PORT_B_data_out[0];


--G2_ram_block1a4 is uart:uart_unit|fifo:fifo_rx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a4
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G2_ram_block1a4_PORT_A_data_in = D1_r_rx_byte[4];
G2_ram_block1a4_PORT_A_data_in_reg = DFFE(G2_ram_block1a4_PORT_A_data_in, G2_ram_block1a4_clock_0, , , );
G2_ram_block1a4_PORT_A_address = BUS(C1_r_wr_index[0], C1_r_wr_index[1], C1_r_wr_index[2], C1_r_wr_index[3]);
G2_ram_block1a4_PORT_A_address_reg = DFFE(G2_ram_block1a4_PORT_A_address, G2_ram_block1a4_clock_0, , , );
G2_ram_block1a4_PORT_B_address = BUS(C1L63, C1L66, C1L67, C1L68);
G2_ram_block1a4_PORT_B_address_reg = DFFE(G2_ram_block1a4_PORT_B_address, G2_ram_block1a4_clock_0, , , );
G2_ram_block1a4_PORT_A_write_enable = C1L57;
G2_ram_block1a4_PORT_A_write_enable_reg = DFFE(G2_ram_block1a4_PORT_A_write_enable, G2_ram_block1a4_clock_0, , , );
G2_ram_block1a4_PORT_B_read_enable = VCC;
G2_ram_block1a4_PORT_B_read_enable_reg = DFFE(G2_ram_block1a4_PORT_B_read_enable, G2_ram_block1a4_clock_0, , , );
G2_ram_block1a4_clock_0 = i_clk;
G2_ram_block1a4_PORT_B_data_out = MEMORY(G2_ram_block1a4_PORT_A_data_in_reg, , G2_ram_block1a4_PORT_A_address_reg, G2_ram_block1a4_PORT_B_address_reg, G2_ram_block1a4_PORT_A_write_enable_reg, , , G2_ram_block1a4_PORT_B_read_enable_reg, , , G2_ram_block1a4_clock_0, , , , , , , );
G2_ram_block1a4 = G2_ram_block1a4_PORT_B_data_out[0];


--G2_ram_block1a7 is uart:uart_unit|fifo:fifo_rx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a7
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G2_ram_block1a7_PORT_A_data_in = D1_r_rx_byte[7];
G2_ram_block1a7_PORT_A_data_in_reg = DFFE(G2_ram_block1a7_PORT_A_data_in, G2_ram_block1a7_clock_0, , , );
G2_ram_block1a7_PORT_A_address = BUS(C1_r_wr_index[0], C1_r_wr_index[1], C1_r_wr_index[2], C1_r_wr_index[3]);
G2_ram_block1a7_PORT_A_address_reg = DFFE(G2_ram_block1a7_PORT_A_address, G2_ram_block1a7_clock_0, , , );
G2_ram_block1a7_PORT_B_address = BUS(C1L63, C1L66, C1L67, C1L68);
G2_ram_block1a7_PORT_B_address_reg = DFFE(G2_ram_block1a7_PORT_B_address, G2_ram_block1a7_clock_0, , , );
G2_ram_block1a7_PORT_A_write_enable = C1L57;
G2_ram_block1a7_PORT_A_write_enable_reg = DFFE(G2_ram_block1a7_PORT_A_write_enable, G2_ram_block1a7_clock_0, , , );
G2_ram_block1a7_PORT_B_read_enable = VCC;
G2_ram_block1a7_PORT_B_read_enable_reg = DFFE(G2_ram_block1a7_PORT_B_read_enable, G2_ram_block1a7_clock_0, , , );
G2_ram_block1a7_clock_0 = i_clk;
G2_ram_block1a7_PORT_B_data_out = MEMORY(G2_ram_block1a7_PORT_A_data_in_reg, , G2_ram_block1a7_PORT_A_address_reg, G2_ram_block1a7_PORT_B_address_reg, G2_ram_block1a7_PORT_A_write_enable_reg, , , G2_ram_block1a7_PORT_B_read_enable_reg, , , G2_ram_block1a7_clock_0, , , , , , , );
G2_ram_block1a7 = G2_ram_block1a7_PORT_B_data_out[0];


--G2_ram_block1a6 is uart:uart_unit|fifo:fifo_rx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a6
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G2_ram_block1a6_PORT_A_data_in = D1_r_rx_byte[6];
G2_ram_block1a6_PORT_A_data_in_reg = DFFE(G2_ram_block1a6_PORT_A_data_in, G2_ram_block1a6_clock_0, , , );
G2_ram_block1a6_PORT_A_address = BUS(C1_r_wr_index[0], C1_r_wr_index[1], C1_r_wr_index[2], C1_r_wr_index[3]);
G2_ram_block1a6_PORT_A_address_reg = DFFE(G2_ram_block1a6_PORT_A_address, G2_ram_block1a6_clock_0, , , );
G2_ram_block1a6_PORT_B_address = BUS(C1L63, C1L66, C1L67, C1L68);
G2_ram_block1a6_PORT_B_address_reg = DFFE(G2_ram_block1a6_PORT_B_address, G2_ram_block1a6_clock_0, , , );
G2_ram_block1a6_PORT_A_write_enable = C1L57;
G2_ram_block1a6_PORT_A_write_enable_reg = DFFE(G2_ram_block1a6_PORT_A_write_enable, G2_ram_block1a6_clock_0, , , );
G2_ram_block1a6_PORT_B_read_enable = VCC;
G2_ram_block1a6_PORT_B_read_enable_reg = DFFE(G2_ram_block1a6_PORT_B_read_enable, G2_ram_block1a6_clock_0, , , );
G2_ram_block1a6_clock_0 = i_clk;
G2_ram_block1a6_PORT_B_data_out = MEMORY(G2_ram_block1a6_PORT_A_data_in_reg, , G2_ram_block1a6_PORT_A_address_reg, G2_ram_block1a6_PORT_B_address_reg, G2_ram_block1a6_PORT_A_write_enable_reg, , , G2_ram_block1a6_PORT_B_read_enable_reg, , , G2_ram_block1a6_clock_0, , , , , , , );
G2_ram_block1a6 = G2_ram_block1a6_PORT_B_data_out[0];


--G2_ram_block1a3 is uart:uart_unit|fifo:fifo_rx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a3
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G2_ram_block1a3_PORT_A_data_in = D1_r_rx_byte[3];
G2_ram_block1a3_PORT_A_data_in_reg = DFFE(G2_ram_block1a3_PORT_A_data_in, G2_ram_block1a3_clock_0, , , );
G2_ram_block1a3_PORT_A_address = BUS(C1_r_wr_index[0], C1_r_wr_index[1], C1_r_wr_index[2], C1_r_wr_index[3]);
G2_ram_block1a3_PORT_A_address_reg = DFFE(G2_ram_block1a3_PORT_A_address, G2_ram_block1a3_clock_0, , , );
G2_ram_block1a3_PORT_B_address = BUS(C1L63, C1L66, C1L67, C1L68);
G2_ram_block1a3_PORT_B_address_reg = DFFE(G2_ram_block1a3_PORT_B_address, G2_ram_block1a3_clock_0, , , );
G2_ram_block1a3_PORT_A_write_enable = C1L57;
G2_ram_block1a3_PORT_A_write_enable_reg = DFFE(G2_ram_block1a3_PORT_A_write_enable, G2_ram_block1a3_clock_0, , , );
G2_ram_block1a3_PORT_B_read_enable = VCC;
G2_ram_block1a3_PORT_B_read_enable_reg = DFFE(G2_ram_block1a3_PORT_B_read_enable, G2_ram_block1a3_clock_0, , , );
G2_ram_block1a3_clock_0 = i_clk;
G2_ram_block1a3_PORT_B_data_out = MEMORY(G2_ram_block1a3_PORT_A_data_in_reg, , G2_ram_block1a3_PORT_A_address_reg, G2_ram_block1a3_PORT_B_address_reg, G2_ram_block1a3_PORT_A_write_enable_reg, , , G2_ram_block1a3_PORT_B_read_enable_reg, , , G2_ram_block1a3_clock_0, , , , , , , );
G2_ram_block1a3 = G2_ram_block1a3_PORT_B_data_out[0];


--G2_ram_block1a2 is uart:uart_unit|fifo:fifo_rx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a2
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G2_ram_block1a2_PORT_A_data_in = D1_r_rx_byte[2];
G2_ram_block1a2_PORT_A_data_in_reg = DFFE(G2_ram_block1a2_PORT_A_data_in, G2_ram_block1a2_clock_0, , , );
G2_ram_block1a2_PORT_A_address = BUS(C1_r_wr_index[0], C1_r_wr_index[1], C1_r_wr_index[2], C1_r_wr_index[3]);
G2_ram_block1a2_PORT_A_address_reg = DFFE(G2_ram_block1a2_PORT_A_address, G2_ram_block1a2_clock_0, , , );
G2_ram_block1a2_PORT_B_address = BUS(C1L63, C1L66, C1L67, C1L68);
G2_ram_block1a2_PORT_B_address_reg = DFFE(G2_ram_block1a2_PORT_B_address, G2_ram_block1a2_clock_0, , , );
G2_ram_block1a2_PORT_A_write_enable = C1L57;
G2_ram_block1a2_PORT_A_write_enable_reg = DFFE(G2_ram_block1a2_PORT_A_write_enable, G2_ram_block1a2_clock_0, , , );
G2_ram_block1a2_PORT_B_read_enable = VCC;
G2_ram_block1a2_PORT_B_read_enable_reg = DFFE(G2_ram_block1a2_PORT_B_read_enable, G2_ram_block1a2_clock_0, , , );
G2_ram_block1a2_clock_0 = i_clk;
G2_ram_block1a2_PORT_B_data_out = MEMORY(G2_ram_block1a2_PORT_A_data_in_reg, , G2_ram_block1a2_PORT_A_address_reg, G2_ram_block1a2_PORT_B_address_reg, G2_ram_block1a2_PORT_A_write_enable_reg, , , G2_ram_block1a2_PORT_B_read_enable_reg, , , G2_ram_block1a2_clock_0, , , , , , , );
G2_ram_block1a2 = G2_ram_block1a2_PORT_B_data_out[0];


--G2_ram_block1a1 is uart:uart_unit|fifo:fifo_rx|altsyncram:r_fifo_data_rtl_0|altsyncram_tcg1:auto_generated|ram_block1a1
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 10, Port A Width: 1, Port B Depth: 10, Port B Width: 1
--Port A Logical Depth: 10, Port A Logical Width: 8, Port B Logical Depth: 10, Port B Logical Width: 8
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
G2_ram_block1a1_PORT_A_data_in = D1_r_rx_byte[1];
G2_ram_block1a1_PORT_A_data_in_reg = DFFE(G2_ram_block1a1_PORT_A_data_in, G2_ram_block1a1_clock_0, , , );
G2_ram_block1a1_PORT_A_address = BUS(C1_r_wr_index[0], C1_r_wr_index[1], C1_r_wr_index[2], C1_r_wr_index[3]);
G2_ram_block1a1_PORT_A_address_reg = DFFE(G2_ram_block1a1_PORT_A_address, G2_ram_block1a1_clock_0, , , );
G2_ram_block1a1_PORT_B_address = BUS(C1L63, C1L66, C1L67, C1L68);
G2_ram_block1a1_PORT_B_address_reg = DFFE(G2_ram_block1a1_PORT_B_address, G2_ram_block1a1_clock_0, , , );
G2_ram_block1a1_PORT_A_write_enable = C1L57;
G2_ram_block1a1_PORT_A_write_enable_reg = DFFE(G2_ram_block1a1_PORT_A_write_enable, G2_ram_block1a1_clock_0, , , );
G2_ram_block1a1_PORT_B_read_enable = VCC;
G2_ram_block1a1_PORT_B_read_enable_reg = DFFE(G2_ram_block1a1_PORT_B_read_enable, G2_ram_block1a1_clock_0, , , );
G2_ram_block1a1_clock_0 = i_clk;
G2_ram_block1a1_PORT_B_data_out = MEMORY(G2_ram_block1a1_PORT_A_data_in_reg, , G2_ram_block1a1_PORT_A_address_reg, G2_ram_block1a1_PORT_B_address_reg, G2_ram_block1a1_PORT_A_write_enable_reg, , , G2_ram_block1a1_PORT_B_read_enable_reg, , , G2_ram_block1a1_clock_0, , , , , , , );
G2_ram_block1a1 = G2_ram_block1a1_PORT_B_data_out[0];


--A1L1 is Add1~0
A1L1 = r_index[0] $ (VCC);

--A1L2 is Add1~1
A1L2 = CARRY(r_index[0]);


--A1L3 is Add1~2
A1L3 = (r_index[1] & (!A1L2)) # (!r_index[1] & ((A1L2) # (GND)));

--A1L4 is Add1~3
A1L4 = CARRY((!A1L2) # (!r_index[1]));


--A1L5 is Add1~4
A1L5 = (r_index[2] & (A1L4 $ (GND))) # (!r_index[2] & (!A1L4 & VCC));

--A1L6 is Add1~5
A1L6 = CARRY((r_index[2] & !A1L4));


--A1L7 is Add1~6
A1L7 = (r_index[3] & (!A1L6)) # (!r_index[3] & ((A1L6) # (GND)));

--A1L8 is Add1~7
A1L8 = CARRY((!A1L6) # (!r_index[3]));


--A1L9 is Add1~8
A1L9 = (r_index[4] & (A1L8 $ (GND))) # (!r_index[4] & (!A1L8 & VCC));

--A1L10 is Add1~9
A1L10 = CARRY((r_index[4] & !A1L8));


--A1L11 is Add1~10
A1L11 = (r_index[5] & (!A1L10)) # (!r_index[5] & ((A1L10) # (GND)));

--A1L12 is Add1~11
A1L12 = CARRY((!A1L10) # (!r_index[5]));


--A1L13 is Add1~12
A1L13 = (r_index[6] & (A1L12 $ (GND))) # (!r_index[6] & (!A1L12 & VCC));

--A1L14 is Add1~13
A1L14 = CARRY((r_index[6] & !A1L12));


--A1L15 is Add1~14
A1L15 = (r_index[7] & (!A1L14)) # (!r_index[7] & ((A1L14) # (GND)));

--A1L16 is Add1~15
A1L16 = CARRY((!A1L14) # (!r_index[7]));


--A1L17 is Add1~16
A1L17 = (r_index[8] & (A1L16 $ (GND))) # (!r_index[8] & (!A1L16 & VCC));

--A1L18 is Add1~17
A1L18 = CARRY((r_index[8] & !A1L16));


--A1L19 is Add1~18
A1L19 = (r_index[9] & (!A1L18)) # (!r_index[9] & ((A1L18) # (GND)));

--A1L20 is Add1~19
A1L20 = CARRY((!A1L18) # (!r_index[9]));


--A1L21 is Add1~20
A1L21 = (r_index[10] & (A1L20 $ (GND))) # (!r_index[10] & (!A1L20 & VCC));

--A1L22 is Add1~21
A1L22 = CARRY((r_index[10] & !A1L20));


--A1L23 is Add1~22
A1L23 = (r_index[11] & (!A1L22)) # (!r_index[11] & ((A1L22) # (GND)));

--A1L24 is Add1~23
A1L24 = CARRY((!A1L22) # (!r_index[11]));


--A1L25 is Add1~24
A1L25 = (r_index[12] & (A1L24 $ (GND))) # (!r_index[12] & (!A1L24 & VCC));

--A1L26 is Add1~25
A1L26 = CARRY((r_index[12] & !A1L24));


--A1L27 is Add1~26
A1L27 = (r_index[13] & (!A1L26)) # (!r_index[13] & ((A1L26) # (GND)));

--A1L28 is Add1~27
A1L28 = CARRY((!A1L26) # (!r_index[13]));


--A1L29 is Add1~28
A1L29 = (r_index[14] & (A1L28 $ (GND))) # (!r_index[14] & (!A1L28 & VCC));

--A1L30 is Add1~29
A1L30 = CARRY((r_index[14] & !A1L28));


--A1L31 is Add1~30
A1L31 = (r_index[15] & (!A1L30)) # (!r_index[15] & ((A1L30) # (GND)));

--A1L32 is Add1~31
A1L32 = CARRY((!A1L30) # (!r_index[15]));


--A1L33 is Add1~32
A1L33 = (r_index[16] & (A1L32 $ (GND))) # (!r_index[16] & (!A1L32 & VCC));

--A1L34 is Add1~33
A1L34 = CARRY((r_index[16] & !A1L32));


--A1L35 is Add1~34
A1L35 = (r_index[17] & (!A1L34)) # (!r_index[17] & ((A1L34) # (GND)));

--A1L36 is Add1~35
A1L36 = CARRY((!A1L34) # (!r_index[17]));


--A1L37 is Add1~36
A1L37 = (r_index[18] & (A1L36 $ (GND))) # (!r_index[18] & (!A1L36 & VCC));

--A1L38 is Add1~37
A1L38 = CARRY((r_index[18] & !A1L36));


--A1L39 is Add1~38
A1L39 = (r_index[19] & (!A1L38)) # (!r_index[19] & ((A1L38) # (GND)));

--A1L40 is Add1~39
A1L40 = CARRY((!A1L38) # (!r_index[19]));


--A1L41 is Add1~40
A1L41 = (r_index[20] & (A1L40 $ (GND))) # (!r_index[20] & (!A1L40 & VCC));

--A1L42 is Add1~41
A1L42 = CARRY((r_index[20] & !A1L40));


--A1L43 is Add1~42
A1L43 = (r_index[21] & (!A1L42)) # (!r_index[21] & ((A1L42) # (GND)));

--A1L44 is Add1~43
A1L44 = CARRY((!A1L42) # (!r_index[21]));


--A1L45 is Add1~44
A1L45 = (r_index[22] & (A1L44 $ (GND))) # (!r_index[22] & (!A1L44 & VCC));

--A1L46 is Add1~45
A1L46 = CARRY((r_index[22] & !A1L44));


--A1L47 is Add1~46
A1L47 = (r_index[23] & (!A1L46)) # (!r_index[23] & ((A1L46) # (GND)));

--A1L48 is Add1~47
A1L48 = CARRY((!A1L46) # (!r_index[23]));


--A1L49 is Add1~48
A1L49 = (r_index[24] & (A1L48 $ (GND))) # (!r_index[24] & (!A1L48 & VCC));

--A1L50 is Add1~49
A1L50 = CARRY((r_index[24] & !A1L48));


--A1L51 is Add1~50
A1L51 = (r_index[25] & (!A1L50)) # (!r_index[25] & ((A1L50) # (GND)));

--A1L52 is Add1~51
A1L52 = CARRY((!A1L50) # (!r_index[25]));


--A1L53 is Add1~52
A1L53 = (r_index[26] & (A1L52 $ (GND))) # (!r_index[26] & (!A1L52 & VCC));

--A1L54 is Add1~53
A1L54 = CARRY((r_index[26] & !A1L52));


--A1L55 is Add1~54
A1L55 = (r_index[27] & (!A1L54)) # (!r_index[27] & ((A1L54) # (GND)));

--A1L56 is Add1~55
A1L56 = CARRY((!A1L54) # (!r_index[27]));


--A1L57 is Add1~56
A1L57 = (r_index[28] & (A1L56 $ (GND))) # (!r_index[28] & (!A1L56 & VCC));

--A1L58 is Add1~57
A1L58 = CARRY((r_index[28] & !A1L56));


--A1L59 is Add1~58
A1L59 = (r_index[29] & (!A1L58)) # (!r_index[29] & ((A1L58) # (GND)));

--A1L60 is Add1~59
A1L60 = CARRY((!A1L58) # (!r_index[29]));


--A1L61 is Add1~60
A1L61 = (r_index[30] & (A1L60 $ (GND))) # (!r_index[30] & (!A1L60 & VCC));

--A1L62 is Add1~61
A1L62 = CARRY((r_index[30] & !A1L60));


--A1L63 is Add1~62
A1L63 = r_index[31] $ (A1L62);


--D1_r_clk_count[2] is uart:uart_unit|uart_rx:receiver|r_clk_count[2]
--register power-up is low

D1_r_clk_count[2] = DFFEAS(D1L30, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[1] is uart:uart_unit|uart_rx:receiver|r_clk_count[1]
--register power-up is low

D1_r_clk_count[1] = DFFEAS(D1L27, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1_r_clk_count[0] is uart:uart_unit|uart_rx:receiver|r_clk_count[0]
--register power-up is low

D1_r_clk_count[0] = DFFEAS(D1L24, i_clk,  ,  , D1L64,  ,  , D1L63,  );


--D1L24 is uart:uart_unit|uart_rx:receiver|r_clk_count[0]~13
D1L24 = D1_r_clk_count[0] $ (VCC);

--D1L25 is uart:uart_unit|uart_rx:receiver|r_clk_count[0]~14
D1L25 = CARRY(D1_r_clk_count[0]);


--D1L27 is uart:uart_unit|uart_rx:receiver|r_clk_count[1]~15
D1L27 = (D1_r_clk_count[1] & (!D1L25)) # (!D1_r_clk_count[1] & ((D1L25) # (GND)));

--D1L28 is uart:uart_unit|uart_rx:receiver|r_clk_count[1]~16
D1L28 = CARRY((!D1L25) # (!D1_r_clk_count[1]));


--D1L30 is uart:uart_unit|uart_rx:receiver|r_clk_count[2]~17
D1L30 = (D1_r_clk_count[2] & (D1L28 $ (GND))) # (!D1_r_clk_count[2] & (!D1L28 & VCC));

--D1L31 is uart:uart_unit|uart_rx:receiver|r_clk_count[2]~18
D1L31 = CARRY((D1_r_clk_count[2] & !D1L28));


--D1L33 is uart:uart_unit|uart_rx:receiver|r_clk_count[3]~19
D1L33 = (D1_r_clk_count[3] & (!D1L31)) # (!D1_r_clk_count[3] & ((D1L31) # (GND)));

--D1L34 is uart:uart_unit|uart_rx:receiver|r_clk_count[3]~20
D1L34 = CARRY((!D1L31) # (!D1_r_clk_count[3]));


--D1L36 is uart:uart_unit|uart_rx:receiver|r_clk_count[4]~21
D1L36 = (D1_r_clk_count[4] & (D1L34 $ (GND))) # (!D1_r_clk_count[4] & (!D1L34 & VCC));

--D1L37 is uart:uart_unit|uart_rx:receiver|r_clk_count[4]~22
D1L37 = CARRY((D1_r_clk_count[4] & !D1L34));


--D1L39 is uart:uart_unit|uart_rx:receiver|r_clk_count[5]~23
D1L39 = (D1_r_clk_count[5] & (!D1L37)) # (!D1_r_clk_count[5] & ((D1L37) # (GND)));

--D1L40 is uart:uart_unit|uart_rx:receiver|r_clk_count[5]~24
D1L40 = CARRY((!D1L37) # (!D1_r_clk_count[5]));


--D1L42 is uart:uart_unit|uart_rx:receiver|r_clk_count[6]~25
D1L42 = (D1_r_clk_count[6] & (D1L40 $ (GND))) # (!D1_r_clk_count[6] & (!D1L40 & VCC));

--D1L43 is uart:uart_unit|uart_rx:receiver|r_clk_count[6]~26
D1L43 = CARRY((D1_r_clk_count[6] & !D1L40));


--D1L45 is uart:uart_unit|uart_rx:receiver|r_clk_count[7]~27
D1L45 = (D1_r_clk_count[7] & (!D1L43)) # (!D1_r_clk_count[7] & ((D1L43) # (GND)));

--D1L46 is uart:uart_unit|uart_rx:receiver|r_clk_count[7]~28
D1L46 = CARRY((!D1L43) # (!D1_r_clk_count[7]));


--D1L48 is uart:uart_unit|uart_rx:receiver|r_clk_count[8]~29
D1L48 = (D1_r_clk_count[8] & (D1L46 $ (GND))) # (!D1_r_clk_count[8] & (!D1L46 & VCC));

--D1L49 is uart:uart_unit|uart_rx:receiver|r_clk_count[8]~30
D1L49 = CARRY((D1_r_clk_count[8] & !D1L46));


--D1L51 is uart:uart_unit|uart_rx:receiver|r_clk_count[9]~31
D1L51 = (D1_r_clk_count[9] & (!D1L49)) # (!D1_r_clk_count[9] & ((D1L49) # (GND)));

--D1L52 is uart:uart_unit|uart_rx:receiver|r_clk_count[9]~32
D1L52 = CARRY((!D1L49) # (!D1_r_clk_count[9]));


--D1L54 is uart:uart_unit|uart_rx:receiver|r_clk_count[10]~33
D1L54 = (D1_r_clk_count[10] & (D1L52 $ (GND))) # (!D1_r_clk_count[10] & (!D1L52 & VCC));

--D1L55 is uart:uart_unit|uart_rx:receiver|r_clk_count[10]~34
D1L55 = CARRY((D1_r_clk_count[10] & !D1L52));


--D1L57 is uart:uart_unit|uart_rx:receiver|r_clk_count[11]~35
D1L57 = (D1_r_clk_count[11] & (!D1L55)) # (!D1_r_clk_count[11] & ((D1L55) # (GND)));

--D1L58 is uart:uart_unit|uart_rx:receiver|r_clk_count[11]~36
D1L58 = CARRY((!D1L55) # (!D1_r_clk_count[11]));


--D1L60 is uart:uart_unit|uart_rx:receiver|r_clk_count[12]~37
D1L60 = D1_r_clk_count[12] $ (!D1L58);


--E1_r_clk_count[2] is uart:uart_unit|uart_tx:transmitter|r_clk_count[2]
--register power-up is low

E1_r_clk_count[2] = DFFEAS(E1L22, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[1] is uart:uart_unit|uart_tx:transmitter|r_clk_count[1]
--register power-up is low

E1_r_clk_count[1] = DFFEAS(E1L19, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1_r_clk_count[0] is uart:uart_unit|uart_tx:transmitter|r_clk_count[0]
--register power-up is low

E1_r_clk_count[0] = DFFEAS(E1L16, i_clk,  ,  , !E1_r_sm_main.s_cleanup,  ,  , E1L49,  );


--E1L16 is uart:uart_unit|uart_tx:transmitter|r_clk_count[0]~13
E1L16 = E1_r_clk_count[0] $ (VCC);

--E1L17 is uart:uart_unit|uart_tx:transmitter|r_clk_count[0]~14
E1L17 = CARRY(E1_r_clk_count[0]);


--E1L19 is uart:uart_unit|uart_tx:transmitter|r_clk_count[1]~15
E1L19 = (E1_r_clk_count[1] & (!E1L17)) # (!E1_r_clk_count[1] & ((E1L17) # (GND)));

--E1L20 is uart:uart_unit|uart_tx:transmitter|r_clk_count[1]~16
E1L20 = CARRY((!E1L17) # (!E1_r_clk_count[1]));


--E1L22 is uart:uart_unit|uart_tx:transmitter|r_clk_count[2]~17
E1L22 = (E1_r_clk_count[2] & (E1L20 $ (GND))) # (!E1_r_clk_count[2] & (!E1L20 & VCC));

--E1L23 is uart:uart_unit|uart_tx:transmitter|r_clk_count[2]~18
E1L23 = CARRY((E1_r_clk_count[2] & !E1L20));


--E1L25 is uart:uart_unit|uart_tx:transmitter|r_clk_count[3]~19
E1L25 = (E1_r_clk_count[3] & (!E1L23)) # (!E1_r_clk_count[3] & ((E1L23) # (GND)));

--E1L26 is uart:uart_unit|uart_tx:transmitter|r_clk_count[3]~20
E1L26 = CARRY((!E1L23) # (!E1_r_clk_count[3]));


--E1L28 is uart:uart_unit|uart_tx:transmitter|r_clk_count[4]~22
E1L28 = (E1_r_clk_count[4] & (E1L26 $ (GND))) # (!E1_r_clk_count[4] & (!E1L26 & VCC));

--E1L29 is uart:uart_unit|uart_tx:transmitter|r_clk_count[4]~23
E1L29 = CARRY((E1_r_clk_count[4] & !E1L26));


--E1L31 is uart:uart_unit|uart_tx:transmitter|r_clk_count[5]~24
E1L31 = (E1_r_clk_count[5] & (!E1L29)) # (!E1_r_clk_count[5] & ((E1L29) # (GND)));

--E1L32 is uart:uart_unit|uart_tx:transmitter|r_clk_count[5]~25
E1L32 = CARRY((!E1L29) # (!E1_r_clk_count[5]));


--E1L34 is uart:uart_unit|uart_tx:transmitter|r_clk_count[6]~26
E1L34 = (E1_r_clk_count[6] & (E1L32 $ (GND))) # (!E1_r_clk_count[6] & (!E1L32 & VCC));

--E1L35 is uart:uart_unit|uart_tx:transmitter|r_clk_count[6]~27
E1L35 = CARRY((E1_r_clk_count[6] & !E1L32));


--E1L37 is uart:uart_unit|uart_tx:transmitter|r_clk_count[7]~28
E1L37 = (E1_r_clk_count[7] & (!E1L35)) # (!E1_r_clk_count[7] & ((E1L35) # (GND)));

--E1L38 is uart:uart_unit|uart_tx:transmitter|r_clk_count[7]~29
E1L38 = CARRY((!E1L35) # (!E1_r_clk_count[7]));


--E1L40 is uart:uart_unit|uart_tx:transmitter|r_clk_count[8]~30
E1L40 = (E1_r_clk_count[8] & (E1L38 $ (GND))) # (!E1_r_clk_count[8] & (!E1L38 & VCC));

--E1L41 is uart:uart_unit|uart_tx:transmitter|r_clk_count[8]~31
E1L41 = CARRY((E1_r_clk_count[8] & !E1L38));


--E1L43 is uart:uart_unit|uart_tx:transmitter|r_clk_count[9]~32
E1L43 = (E1_r_clk_count[9] & (!E1L41)) # (!E1_r_clk_count[9] & ((E1L41) # (GND)));

--E1L44 is uart:uart_unit|uart_tx:transmitter|r_clk_count[9]~33
E1L44 = CARRY((!E1L41) # (!E1_r_clk_count[9]));


--E1L46 is uart:uart_unit|uart_tx:transmitter|r_clk_count[10]~34
E1L46 = (E1_r_clk_count[10] & (E1L44 $ (GND))) # (!E1_r_clk_count[10] & (!E1L44 & VCC));

--E1L47 is uart:uart_unit|uart_tx:transmitter|r_clk_count[10]~35
E1L47 = CARRY((E1_r_clk_count[10] & !E1L44));


--E1L50 is uart:uart_unit|uart_tx:transmitter|r_clk_count[11]~36
E1L50 = (E1_r_clk_count[11] & (!E1L47)) # (!E1_r_clk_count[11] & ((E1L47) # (GND)));

--E1L51 is uart:uart_unit|uart_tx:transmitter|r_clk_count[11]~37
E1L51 = CARRY((!E1L47) # (!E1_r_clk_count[11]));


--E1L53 is uart:uart_unit|uart_tx:transmitter|r_clk_count[12]~38
E1L53 = E1_r_clk_count[12] $ (!E1L51);


--o_rx_full is o_rx_full
o_rx_full = OUTPUT(C1L7);


--o_rx_empty is o_rx_empty
o_rx_empty = OUTPUT(C1L9);


--o_tx is o_tx
o_tx = OUTPUT(E1_o_tx_serial);


--o_tx_full is o_tx_full
o_tx_full = OUTPUT(C2L7);


--o_tx_empty is o_tx_empty
o_tx_empty = OUTPUT(C2L8);


--o_addr[0] is o_addr[0]
o_addr[0] = OUTPUT(r_addr[0]);


--o_addr[1] is o_addr[1]
o_addr[1] = OUTPUT(r_addr[1]);


--o_addr[2] is o_addr[2]
o_addr[2] = OUTPUT(r_addr[2]);


--o_addr[3] is o_addr[3]
o_addr[3] = OUTPUT(r_addr[3]);


--o_addr[4] is o_addr[4]
o_addr[4] = OUTPUT(r_addr[4]);


--o_addr[5] is o_addr[5]
o_addr[5] = OUTPUT(r_addr[5]);


--o_addr[6] is o_addr[6]
o_addr[6] = OUTPUT(r_addr[6]);


--o_addr[7] is o_addr[7]
o_addr[7] = OUTPUT(r_addr[7]);


--o_addr[8] is o_addr[8]
o_addr[8] = OUTPUT(r_addr[8]);


--o_addr[9] is o_addr[9]
o_addr[9] = OUTPUT(r_addr[9]);


--o_addr[10] is o_addr[10]
o_addr[10] = OUTPUT(r_addr[10]);


--o_addr[11] is o_addr[11]
o_addr[11] = OUTPUT(r_addr[11]);


--o_addr[12] is o_addr[12]
o_addr[12] = OUTPUT(r_addr[12]);


--o_addr[13] is o_addr[13]
o_addr[13] = OUTPUT(r_addr[13]);


--o_addr[14] is o_addr[14]
o_addr[14] = OUTPUT(r_addr[14]);


--o_addr[15] is o_addr[15]
o_addr[15] = OUTPUT(r_addr[15]);


--o_addr[16] is o_addr[16]
o_addr[16] = OUTPUT(r_addr[16]);


--o_addr[17] is o_addr[17]
o_addr[17] = OUTPUT(r_addr[17]);


--o_addr[18] is o_addr[18]
o_addr[18] = OUTPUT(r_addr[18]);


--o_addr[19] is o_addr[19]
o_addr[19] = OUTPUT(r_addr[19]);


--o_data[0] is o_data[0]
o_data[0] = OUTPUT(r_sram_data[0]);


--o_data[1] is o_data[1]
o_data[1] = OUTPUT(r_sram_data[1]);


--o_data[2] is o_data[2]
o_data[2] = OUTPUT(r_sram_data[2]);


--o_data[3] is o_data[3]
o_data[3] = OUTPUT(r_sram_data[3]);


--o_data[4] is o_data[4]
o_data[4] = OUTPUT(r_sram_data[4]);


--o_data[5] is o_data[5]
o_data[5] = OUTPUT(r_sram_data[5]);


--o_data[6] is o_data[6]
o_data[6] = OUTPUT(r_sram_data[6]);


--o_data[7] is o_data[7]
o_data[7] = OUTPUT(r_sram_data[7]);


--o_data[8] is o_data[8]
o_data[8] = OUTPUT(r_sram_data[8]);


--o_data[9] is o_data[9]
o_data[9] = OUTPUT(r_sram_data[9]);


--o_data[10] is o_data[10]
o_data[10] = OUTPUT(r_sram_data[10]);


--o_data[11] is o_data[11]
o_data[11] = OUTPUT(r_sram_data[11]);


--o_data[12] is o_data[12]
o_data[12] = OUTPUT(r_sram_data[12]);


--o_data[13] is o_data[13]
o_data[13] = OUTPUT(r_sram_data[13]);


--o_data[14] is o_data[14]
o_data[14] = OUTPUT(r_sram_data[14]);


--o_data[15] is o_data[15]
o_data[15] = OUTPUT(r_sram_data[15]);


--o_we is o_we
o_we = OUTPUT(A1L370);


--o_ce is o_ce
o_ce = OUTPUT(A1L370);


--o_oe is o_oe
o_oe = OUTPUT(A1L370);


--o_ub is o_ub
o_ub = OUTPUT(A1L370);


--o_lb is o_lb
o_lb = OUTPUT(A1L370);


--C1L6 is uart:uart_unit|fifo:fifo_rx|Equal2~0
C1L6 = (!C1_r_fifo_count[0] & (!C1_r_fifo_count[2] & !C1_r_fifo_count[4]));


--C1L7 is uart:uart_unit|fifo:fifo_rx|Equal2~1
C1L7 = (C1_r_fifo_count[3] & (C1_r_fifo_count[1] & C1L6));


--C1L8 is uart:uart_unit|fifo:fifo_rx|Equal3~0
C1L8 = (C1_r_fifo_count[3]) # ((C1_r_fifo_count[1]) # (!C1L6));


--E1_o_tx_serial is uart:uart_unit|uart_tx:transmitter|o_tx_serial
--register power-up is low

E1_o_tx_serial = DFFEAS(E1L75, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L6 is uart:uart_unit|fifo:fifo_tx|Equal2~0
C2L6 = (!C2_r_fifo_count[0] & (!C2_r_fifo_count[2] & !C2_r_fifo_count[4]));


--C2L7 is uart:uart_unit|fifo:fifo_tx|Equal2~1
C2L7 = (C2_r_fifo_count[3] & (C2_r_fifo_count[1] & C2L6));


--C2L8 is uart:uart_unit|fifo:fifo_tx|Equal3~0
C2L8 = (C2L6 & (!C2_r_fifo_count[3] & !C2_r_fifo_count[1]));


--r_sram_data[0] is r_sram_data[0]
--register power-up is low

r_sram_data[0] = DFFEAS(A1L290, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[1] is r_sram_data[1]
--register power-up is low

r_sram_data[1] = DFFEAS(A1L292, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[2] is r_sram_data[2]
--register power-up is low

r_sram_data[2] = DFFEAS(A1L294, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[3] is r_sram_data[3]
--register power-up is low

r_sram_data[3] = DFFEAS(A1L296, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[4] is r_sram_data[4]
--register power-up is low

r_sram_data[4] = DFFEAS(A1L298, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[5] is r_sram_data[5]
--register power-up is low

r_sram_data[5] = DFFEAS(A1L300, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[6] is r_sram_data[6]
--register power-up is low

r_sram_data[6] = DFFEAS(A1L302, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[7] is r_sram_data[7]
--register power-up is low

r_sram_data[7] = DFFEAS(A1L304, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[8] is r_sram_data[8]
--register power-up is low

r_sram_data[8] = DFFEAS(A1L306, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[9] is r_sram_data[9]
--register power-up is low

r_sram_data[9] = DFFEAS(A1L308, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[10] is r_sram_data[10]
--register power-up is low

r_sram_data[10] = DFFEAS(A1L310, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[11] is r_sram_data[11]
--register power-up is low

r_sram_data[11] = DFFEAS(A1L312, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[12] is r_sram_data[12]
--register power-up is low

r_sram_data[12] = DFFEAS(A1L314, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[13] is r_sram_data[13]
--register power-up is low

r_sram_data[13] = DFFEAS(A1L316, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[14] is r_sram_data[14]
--register power-up is low

r_sram_data[14] = DFFEAS(A1L318, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_sram_data[15] is r_sram_data[15]
--register power-up is low

r_sram_data[15] = DFFEAS(A1L320, i_clk,  ,  ,  ,  ,  ,  ,  );


--i_clk is i_clk
i_clk = INPUT();


--D1_r_rx_dv is uart:uart_unit|uart_rx:receiver|r_rx_dv
--register power-up is low

D1_r_rx_dv = DFFEAS(D1L94, i_clk,  ,  ,  ,  ,  ,  ,  );


--r_rd_rx is r_rd_rx
--register power-up is low

r_rd_rx = DFFEAS(A1L327, i_clk, i_rst,  ,  ,  ,  ,  ,  );


--C1L10 is uart:uart_unit|fifo:fifo_rx|p_control~0
C1L10 = (D1_r_rx_dv & !r_rd_rx);


--i_rst_sync is i_rst_sync
i_rst_sync = INPUT();


--C1L25 is uart:uart_unit|fifo:fifo_rx|r_fifo_count[3]~13
C1L25 = (r_rd_rx $ (D1_r_rx_dv)) # (!i_rst_sync);


--E1_r_tx_data[6] is uart:uart_unit|uart_tx:transmitter|r_tx_data[6]
--register power-up is low

E1_r_tx_data[6] = DFFEAS(C2L51, i_clk,  ,  , E1L85,  ,  ,  ,  );


--E1_r_bit_index[1] is uart:uart_unit|uart_tx:transmitter|r_bit_index[1]
--register power-up is low

E1_r_bit_index[1] = DFFEAS(E1L81, i_clk,  ,  ,  ,  ,  ,  ,  );


--E1_r_tx_data[5] is uart:uart_unit|uart_tx:transmitter|r_tx_data[5]
--register power-up is low

E1_r_tx_data[5] = DFFEAS(C2L52, i_clk,  ,  , E1L85,  ,  ,  ,  );


--E1_r_bit_index[0] is uart:uart_unit|uart_tx:transmitter|r_bit_index[0]
--register power-up is low

E1_r_bit_index[0] = DFFEAS(E1L83, i_clk,  ,  ,  ,  ,  ,  ,  );


--E1_r_tx_data[4] is uart:uart_unit|uart_tx:transmitter|r_tx_data[4]
--register power-up is low

E1_r_tx_data[4] = DFFEAS(C2L53, i_clk,  ,  , E1L85,  ,  ,  ,  );


--E1L5 is uart:uart_unit|uart_tx:transmitter|Mux0~0
E1L5 = (E1_r_bit_index[1] & (((E1_r_bit_index[0])))) # (!E1_r_bit_index[1] & ((E1_r_bit_index[0] & (E1_r_tx_data[5])) # (!E1_r_bit_index[0] & ((E1_r_tx_data[4])))));


--E1_r_tx_data[7] is uart:uart_unit|uart_tx:transmitter|r_tx_data[7]
--register power-up is low

E1_r_tx_data[7] = DFFEAS(C2L54, i_clk,  ,  , E1L85,  ,  ,  ,  );


--E1L6 is uart:uart_unit|uart_tx:transmitter|Mux0~1
E1L6 = (E1_r_bit_index[1] & ((E1L5 & ((E1_r_tx_data[7]))) # (!E1L5 & (E1_r_tx_data[6])))) # (!E1_r_bit_index[1] & (((E1L5))));


--E1_r_bit_index[2] is uart:uart_unit|uart_tx:transmitter|r_bit_index[2]
--register power-up is low

E1_r_bit_index[2] = DFFEAS(E1L79, i_clk,  ,  ,  ,  ,  ,  ,  );


--E1_r_sm_main.s_tx_data_bits is uart:uart_unit|uart_tx:transmitter|r_sm_main.s_tx_data_bits
--register power-up is low

E1_r_sm_main.s_tx_data_bits = DFFEAS(E1L87, i_clk,  ,  ,  ,  ,  ,  ,  );


--E1_r_sm_main.s_idle is uart:uart_unit|uart_tx:transmitter|r_sm_main.s_idle
--register power-up is low

E1_r_sm_main.s_idle = DFFEAS(E1L84, i_clk,  ,  ,  ,  ,  ,  ,  );


--E1L73 is uart:uart_unit|uart_tx:transmitter|Selector1~0
E1L73 = ((E1L6 & (E1_r_bit_index[2] & E1_r_sm_main.s_tx_data_bits))) # (!E1_r_sm_main.s_idle);


--E1_r_sm_main.s_tx_stop_bit is uart:uart_unit|uart_tx:transmitter|r_sm_main.s_tx_stop_bit
--register power-up is low

E1_r_sm_main.s_tx_stop_bit = DFFEAS(E1L61, i_clk,  ,  ,  ,  ,  ,  ,  );


--E1_r_tx_data[2] is uart:uart_unit|uart_tx:transmitter|r_tx_data[2]
--register power-up is low

E1_r_tx_data[2] = DFFEAS(C2L55, i_clk,  ,  , E1L85,  ,  ,  ,  );


--E1_r_tx_data[1] is uart:uart_unit|uart_tx:transmitter|r_tx_data[1]
--register power-up is low

E1_r_tx_data[1] = DFFEAS(C2L56, i_clk,  ,  , E1L85,  ,  ,  ,  );


--E1_r_tx_data[0] is uart:uart_unit|uart_tx:transmitter|r_tx_data[0]
--register power-up is low

E1_r_tx_data[0] = DFFEAS(C2L57, i_clk,  ,  , E1L85,  ,  ,  ,  );


--E1L7 is uart:uart_unit|uart_tx:transmitter|Mux0~2
E1L7 = (E1_r_bit_index[1] & (((E1_r_bit_index[0])))) # (!E1_r_bit_index[1] & ((E1_r_bit_index[0] & (E1_r_tx_data[1])) # (!E1_r_bit_index[0] & ((E1_r_tx_data[0])))));


--E1_r_tx_data[3] is uart:uart_unit|uart_tx:transmitter|r_tx_data[3]
--register power-up is low

E1_r_tx_data[3] = DFFEAS(C2L58, i_clk,  ,  , E1L85,  ,  ,  ,  );


--E1L8 is uart:uart_unit|uart_tx:transmitter|Mux0~3
E1L8 = (E1_r_bit_index[1] & ((E1L7 & ((E1_r_tx_data[3]))) # (!E1L7 & (E1_r_tx_data[2])))) # (!E1_r_bit_index[1] & (((E1L7))));


--E1L74 is uart:uart_unit|uart_tx:transmitter|Selector1~1
E1L74 = (E1_r_sm_main.s_tx_stop_bit) # ((E1_r_sm_main.s_tx_data_bits & (E1L8 & !E1_r_bit_index[2])));


--E1_r_sm_main.s_cleanup is uart:uart_unit|uart_tx:transmitter|r_sm_main.s_cleanup
--register power-up is low

E1_r_sm_main.s_cleanup = DFFEAS(E1L62, i_clk,  ,  ,  ,  ,  ,  ,  );


--E1L75 is uart:uart_unit|uart_tx:transmitter|Selector1~2
E1L75 = (E1L73) # ((E1L74) # ((E1_o_tx_serial & E1_r_sm_main.s_cleanup)));


--r_wr_tx is r_wr_tx
--register power-up is low

r_wr_tx = DFFEAS(A1L331, i_clk, i_rst,  ,  ,  ,  ,  ,  );


--E1_r_tx_done is uart:uart_unit|uart_tx:transmitter|r_tx_done
--register power-up is low

E1_r_tx_done = DFFEAS(E1L77, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L9 is uart:uart_unit|fifo:fifo_tx|p_control~0
C2L9 = (r_wr_tx & !E1_r_tx_done);


--C2L18 is uart:uart_unit|fifo:fifo_tx|r_fifo_count[1]~13
C2L18 = (r_wr_tx $ (E1_r_tx_done)) # (!i_rst_sync);


--r_data[0] is r_data[0]
--register power-up is low

r_data[0] = DFFEAS(A1L349, i_clk, i_rst,  , A1L326,  ,  ,  ,  );


--r_data[5] is r_data[5]
--register power-up is low

r_data[5] = DFFEAS(A1L339, i_clk, i_rst,  , A1L326,  ,  ,  ,  );


--r_data[4] is r_data[4]
--register power-up is low

r_data[4] = DFFEAS(A1L341, i_clk, i_rst,  , A1L326,  ,  ,  ,  );


--r_data[7] is r_data[7]
--register power-up is low

r_data[7] = DFFEAS(A1L335, i_clk, i_rst,  , A1L326,  ,  ,  ,  );


--r_data[6] is r_data[6]
--register power-up is low

r_data[6] = DFFEAS(A1L337, i_clk, i_rst,  , A1L326,  ,  ,  ,  );


--A1L100 is Equal0~0
A1L100 = (r_data[5] & (r_data[4] & (!r_data[7] & !r_data[6])));


--r_data[3] is r_data[3]
--register power-up is low

r_data[3] = DFFEAS(A1L343, i_clk, i_rst,  , A1L326,  ,  ,  ,  );


--r_data[2] is r_data[2]
--register power-up is low

r_data[2] = DFFEAS(A1L345, i_clk, i_rst,  , A1L326,  ,  ,  ,  );


--r_data[1] is r_data[1]
--register power-up is low

r_data[1] = DFFEAS(A1L347, i_clk, i_rst,  , A1L326,  ,  ,  ,  );


--A1L101 is Equal0~1
A1L101 = (A1L100 & (!r_data[3] & (!r_data[2] & !r_data[1])));


--A1L102 is Equal0~2
A1L102 = (r_data[0]) # (!A1L101);


--r_index[3] is r_index[3]
--register power-up is low

r_index[3] = DFFEAS(A1L7, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[2] is r_index[2]
--register power-up is low

r_index[2] = DFFEAS(A1L247, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L65 is Decoder0~24
A1L65 = (!r_index[3] & !r_index[2]);


--r_index[31] is r_index[31]
--register power-up is low

r_index[31] = DFFEAS(A1L63, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[26] is r_index[26]
--register power-up is low

r_index[26] = DFFEAS(A1L53, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[25] is r_index[25]
--register power-up is low

r_index[25] = DFFEAS(A1L51, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[24] is r_index[24]
--register power-up is low

r_index[24] = DFFEAS(A1L49, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[23] is r_index[23]
--register power-up is low

r_index[23] = DFFEAS(A1L47, i_clk,  ,  , A1L279,  ,  ,  ,  );


--A1L103 is Equal2~0
A1L103 = (!r_index[26] & (!r_index[25] & (!r_index[24] & !r_index[23])));


--r_index[22] is r_index[22]
--register power-up is low

r_index[22] = DFFEAS(A1L45, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[21] is r_index[21]
--register power-up is low

r_index[21] = DFFEAS(A1L43, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[20] is r_index[20]
--register power-up is low

r_index[20] = DFFEAS(A1L41, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[19] is r_index[19]
--register power-up is low

r_index[19] = DFFEAS(A1L39, i_clk,  ,  , A1L279,  ,  ,  ,  );


--A1L104 is Equal2~1
A1L104 = (!r_index[22] & (!r_index[21] & (!r_index[20] & !r_index[19])));


--r_index[18] is r_index[18]
--register power-up is low

r_index[18] = DFFEAS(A1L37, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[17] is r_index[17]
--register power-up is low

r_index[17] = DFFEAS(A1L35, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[16] is r_index[16]
--register power-up is low

r_index[16] = DFFEAS(A1L33, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[15] is r_index[15]
--register power-up is low

r_index[15] = DFFEAS(A1L31, i_clk,  ,  , A1L279,  ,  ,  ,  );


--A1L105 is Equal2~2
A1L105 = (!r_index[18] & (!r_index[17] & (!r_index[16] & !r_index[15])));


--r_index[14] is r_index[14]
--register power-up is low

r_index[14] = DFFEAS(A1L29, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[13] is r_index[13]
--register power-up is low

r_index[13] = DFFEAS(A1L27, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[12] is r_index[12]
--register power-up is low

r_index[12] = DFFEAS(A1L25, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[11] is r_index[11]
--register power-up is low

r_index[11] = DFFEAS(A1L23, i_clk,  ,  , A1L279,  ,  ,  ,  );


--A1L106 is Equal2~3
A1L106 = (!r_index[14] & (!r_index[13] & (!r_index[12] & !r_index[11])));


--A1L107 is Equal2~4
A1L107 = (A1L103 & (A1L104 & (A1L105 & A1L106)));


--r_index[10] is r_index[10]
--register power-up is low

r_index[10] = DFFEAS(A1L21, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[9] is r_index[9]
--register power-up is low

r_index[9] = DFFEAS(A1L19, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[8] is r_index[8]
--register power-up is low

r_index[8] = DFFEAS(A1L17, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[7] is r_index[7]
--register power-up is low

r_index[7] = DFFEAS(A1L15, i_clk,  ,  , A1L279,  ,  ,  ,  );


--A1L108 is Equal2~5
A1L108 = (!r_index[10] & (!r_index[9] & (!r_index[8] & !r_index[7])));


--r_index[4] is r_index[4]
--register power-up is low

r_index[4] = DFFEAS(A1L9, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[5] is r_index[5]
--register power-up is low

r_index[5] = DFFEAS(A1L251, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L118 is LessThan0~0
A1L118 = (!r_index[5] & (((!r_index[3] & !r_index[2])) # (!r_index[4])));


--r_index[6] is r_index[6]
--register power-up is low

r_index[6] = DFFEAS(A1L13, i_clk,  ,  , A1L279,  ,  ,  ,  );


--A1L119 is LessThan0~1
A1L119 = (A1L107 & (A1L108 & (A1L118 & !r_index[6])));


--r_index[30] is r_index[30]
--register power-up is low

r_index[30] = DFFEAS(A1L61, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[29] is r_index[29]
--register power-up is low

r_index[29] = DFFEAS(A1L59, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[28] is r_index[28]
--register power-up is low

r_index[28] = DFFEAS(A1L57, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[27] is r_index[27]
--register power-up is low

r_index[27] = DFFEAS(A1L55, i_clk,  ,  , A1L279,  ,  ,  ,  );


--A1L109 is Equal2~6
A1L109 = (!r_index[30] & (!r_index[29] & (!r_index[28] & !r_index[27])));


--A1L66 is Decoder0~25
A1L66 = (!r_index[4] & ((r_index[31]) # (A1L109)));


--A1L67 is Decoder0~26
A1L67 = (A1L101 & (A1L66 & ((r_index[31]) # (A1L119))));


--r_index[1] is r_index[1]
--register power-up is low

r_index[1] = DFFEAS(A1L3, i_clk,  ,  , A1L279,  ,  ,  ,  );


--r_index[0] is r_index[0]
--register power-up is low

r_index[0] = DFFEAS(A1L244, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L68 is Decoder0~27
A1L68 = (!r_index[1] & !r_index[0]);


--r_sm.s_clear is r_sm.s_clear
--register power-up is low

r_sm.s_clear = DFFEAS(r_sm.s_write_sram, i_clk, i_rst,  ,  ,  ,  ,  ,  );


--A1L369 is Selector30~0
A1L369 = (r_addr[0] & !r_sm.s_clear);


--r_sm.s_process is r_sm.s_process
--register power-up is low

r_sm.s_process = DFFEAS(r_sm.s_get_fifo_data, i_clk, i_rst,  ,  ,  ,  ,  ,  );


--i_rst is i_rst
i_rst = INPUT();


--A1L69 is Decoder0~28
A1L69 = (r_index[0] & !r_index[1]);


--A1L368 is Selector29~0
A1L368 = (r_addr[1] & !r_sm.s_clear);


--A1L70 is Decoder0~29
A1L70 = (r_index[1] & !r_index[0]);


--A1L367 is Selector28~0
A1L367 = (r_addr[2] & !r_sm.s_clear);


--A1L71 is Decoder0~30
A1L71 = (r_index[1] & r_index[0]);


--A1L366 is Selector27~0
A1L366 = (r_addr[3] & !r_sm.s_clear);


--A1L120 is LessThan0~2
A1L120 = (r_index[31]) # ((A1L119 & A1L109));


--A1L110 is Equal2~7
A1L110 = (r_index[2] & (!r_index[3] & (!r_index[1] & !r_index[0])));


--A1L72 is Decoder0~31
A1L72 = (A1L101 & (A1L120 & (A1L110 & !r_index[4])));


--A1L365 is Selector26~0
A1L365 = (r_addr[4] & !r_sm.s_clear);


--A1L73 is Decoder0~32
A1L73 = (r_index[2] & (A1L67 & (A1L69 & !r_index[3])));


--A1L364 is Selector25~0
A1L364 = (r_addr[5] & !r_sm.s_clear);


--A1L74 is Decoder0~33
A1L74 = (r_index[2] & (A1L67 & (A1L70 & !r_index[3])));


--A1L363 is Selector24~0
A1L363 = (r_addr[6] & !r_sm.s_clear);


--A1L75 is Decoder0~34
A1L75 = (r_index[2] & (A1L67 & (A1L71 & !r_index[3])));


--A1L362 is Selector23~0
A1L362 = (r_addr[7] & !r_sm.s_clear);


--A1L76 is Decoder0~35
A1L76 = (r_index[3] & (A1L67 & (A1L68 & !r_index[2])));


--A1L361 is Selector22~0
A1L361 = (r_addr[8] & !r_sm.s_clear);


--A1L77 is Decoder0~36
A1L77 = (r_index[3] & (A1L67 & (A1L69 & !r_index[2])));


--A1L360 is Selector21~0
A1L360 = (r_addr[9] & !r_sm.s_clear);


--A1L78 is Decoder0~37
A1L78 = (r_index[3] & (A1L67 & (A1L70 & !r_index[2])));


--A1L359 is Selector20~0
A1L359 = (r_addr[10] & !r_sm.s_clear);


--A1L79 is Decoder0~38
A1L79 = (r_index[3] & (A1L67 & (A1L71 & !r_index[2])));


--A1L358 is Selector19~0
A1L358 = (r_addr[11] & !r_sm.s_clear);


--A1L80 is Decoder0~39
A1L80 = (r_index[3] & (r_index[2] & (A1L67 & A1L68)));


--A1L357 is Selector18~0
A1L357 = (r_addr[12] & !r_sm.s_clear);


--A1L81 is Decoder0~40
A1L81 = (r_index[3] & (r_index[2] & (A1L67 & A1L69)));


--A1L356 is Selector17~0
A1L356 = (r_addr[13] & !r_sm.s_clear);


--A1L82 is Decoder0~41
A1L82 = (r_index[3] & (r_index[2] & (A1L67 & A1L70)));


--A1L355 is Selector16~0
A1L355 = (r_addr[14] & !r_sm.s_clear);


--A1L83 is Decoder0~42
A1L83 = (r_index[3] & (r_index[2] & (A1L67 & A1L71)));


--A1L354 is Selector15~0
A1L354 = (r_addr[15] & !r_sm.s_clear);


--A1L84 is Decoder0~43
A1L84 = (A1L101 & (A1L65 & (r_index[4] & A1L120)));


--A1L353 is Selector14~0
A1L353 = (r_addr[16] & !r_sm.s_clear);


--A1L352 is Selector13~0
A1L352 = (r_addr[17] & !r_sm.s_clear);


--A1L351 is Selector12~0
A1L351 = (r_addr[18] & !r_sm.s_clear);


--A1L350 is Selector11~0
A1L350 = (r_addr[19] & !r_sm.s_clear);


--A1L289 is r_sram_data[0]~0
A1L289 = (r_sm.s_process & i_rst);


--A1L169 is p_write_sram~0
A1L169 = (r_index[5] & ((r_index[3]) # ((r_index[2]) # (r_index[4]))));


--A1L170 is p_write_sram~1
A1L170 = ((A1L118) # (r_index[6])) # (!A1L108);


--A1L171 is p_write_sram~2
A1L171 = (((A1L169) # (A1L170)) # (!A1L109)) # (!A1L107);


--A1L93 is Decoder1~6
A1L93 = (A1L101 & (A1L289 & (!A1L120 & !A1L171)));


--A1L290 is r_sram_data[0]~1
A1L290 = (A1L110 & ((A1L93 & (A1L102)) # (!A1L93 & ((r_sram_data[0]))))) # (!A1L110 & (((r_sram_data[0]))));


--A1L94 is Decoder1~7
A1L94 = (A1L101 & (!A1L120 & (!A1L171 & A1L97)));


--A1L292 is r_sram_data[1]~2
A1L292 = (A1L69 & ((A1L94 & (A1L102)) # (!A1L94 & ((r_sram_data[1]))))) # (!A1L69 & (((r_sram_data[1]))));


--A1L294 is r_sram_data[2]~3
A1L294 = (A1L70 & ((A1L94 & (A1L102)) # (!A1L94 & ((r_sram_data[2]))))) # (!A1L70 & (((r_sram_data[2]))));


--A1L296 is r_sram_data[3]~4
A1L296 = (A1L71 & ((A1L94 & (A1L102)) # (!A1L94 & ((r_sram_data[3]))))) # (!A1L71 & (((r_sram_data[3]))));


--A1L95 is Decoder1~8
A1L95 = (r_index[3] & (A1L93 & !r_index[2]));


--A1L298 is r_sram_data[4]~5
A1L298 = (A1L68 & ((A1L95 & (A1L102)) # (!A1L95 & ((r_sram_data[4]))))) # (!A1L68 & (((r_sram_data[4]))));


--A1L300 is r_sram_data[5]~6
A1L300 = (A1L69 & ((A1L95 & (A1L102)) # (!A1L95 & ((r_sram_data[5]))))) # (!A1L69 & (((r_sram_data[5]))));


--A1L302 is r_sram_data[6]~7
A1L302 = (A1L70 & ((A1L95 & (A1L102)) # (!A1L95 & ((r_sram_data[6]))))) # (!A1L70 & (((r_sram_data[6]))));


--A1L304 is r_sram_data[7]~8
A1L304 = (A1L71 & ((A1L95 & (A1L102)) # (!A1L95 & ((r_sram_data[7]))))) # (!A1L71 & (((r_sram_data[7]))));


--A1L96 is Decoder1~9
A1L96 = (A1L101 & (!A1L120 & (!A1L171 & A1L98)));


--A1L306 is r_sram_data[8]~9
A1L306 = (A1L68 & ((A1L96 & (A1L102)) # (!A1L96 & ((r_sram_data[8]))))) # (!A1L68 & (((r_sram_data[8]))));


--A1L308 is r_sram_data[9]~10
A1L308 = (A1L69 & ((A1L96 & (A1L102)) # (!A1L96 & ((r_sram_data[9]))))) # (!A1L69 & (((r_sram_data[9]))));


--A1L310 is r_sram_data[10]~11
A1L310 = (A1L70 & ((A1L96 & (A1L102)) # (!A1L96 & ((r_sram_data[10]))))) # (!A1L70 & (((r_sram_data[10]))));


--A1L312 is r_sram_data[11]~12
A1L312 = (A1L71 & ((A1L96 & (A1L102)) # (!A1L96 & ((r_sram_data[11]))))) # (!A1L71 & (((r_sram_data[11]))));


--A1L314 is r_sram_data[12]~13
A1L314 = (A1L68 & ((A1L99 & (A1L102)) # (!A1L99 & ((r_sram_data[12]))))) # (!A1L68 & (((r_sram_data[12]))));


--A1L316 is r_sram_data[13]~14
A1L316 = (A1L69 & ((A1L99 & (A1L102)) # (!A1L99 & ((r_sram_data[13]))))) # (!A1L69 & (((r_sram_data[13]))));


--A1L318 is r_sram_data[14]~15
A1L318 = (A1L70 & ((A1L99 & (A1L102)) # (!A1L99 & ((r_sram_data[14]))))) # (!A1L70 & (((r_sram_data[14]))));


--A1L320 is r_sram_data[15]~16
A1L320 = (A1L71 & ((A1L99 & (A1L102)) # (!A1L99 & ((r_sram_data[15]))))) # (!A1L71 & (((r_sram_data[15]))));


--D1_r_sm_main.s_rx_stop_bit is uart:uart_unit|uart_rx:receiver|r_sm_main.s_rx_stop_bit
--register power-up is low

D1_r_sm_main.s_rx_stop_bit = DFFEAS(D1L91, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1L14 is uart:uart_unit|uart_rx:receiver|LessThan1~0
D1L14 = ((!D1_r_clk_count[5] & ((!D1_r_clk_count[4]) # (!D1_r_clk_count[3])))) # (!D1_r_clk_count[6]);


--D1L15 is uart:uart_unit|uart_rx:receiver|LessThan1~1
D1L15 = (!D1_r_clk_count[11] & (!D1_r_clk_count[7] & (!D1_r_clk_count[8] & !D1_r_clk_count[9])));


--D1L16 is uart:uart_unit|uart_rx:receiver|LessThan1~2
D1L16 = (D1L14 & ((D1L15) # ((!D1_r_clk_count[10] & !D1_r_clk_count[11])))) # (!D1L14 & (((!D1_r_clk_count[10] & !D1_r_clk_count[11]))));


--D1L92 is uart:uart_unit|uart_rx:receiver|r_sm_main~7
D1L92 = (D1_r_clk_count[12] & (D1_r_sm_main.s_rx_stop_bit & !D1L16));


--D1_r_sm_main.s_rx_start_bit is uart:uart_unit|uart_rx:receiver|r_sm_main.s_rx_start_bit
--register power-up is low

D1_r_sm_main.s_rx_start_bit = DFFEAS(D1L103, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_sm_main.s_rx_data_bits is uart:uart_unit|uart_rx:receiver|r_sm_main.s_rx_data_bits
--register power-up is low

D1_r_sm_main.s_rx_data_bits = DFFEAS(D1L106, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1L93 is uart:uart_unit|uart_rx:receiver|Selector0~0
D1L93 = (!D1_r_sm_main.s_rx_stop_bit & !D1_r_sm_main.s_rx_data_bits);


--D1L94 is uart:uart_unit|uart_rx:receiver|Selector0~1
D1L94 = (D1L92) # ((D1_r_rx_dv & ((D1_r_sm_main.s_rx_start_bit) # (!D1L93))));


--r_sm.s_idle is r_sm.s_idle
--register power-up is low

r_sm.s_idle = DFFEAS(A1L333, i_clk, i_rst,  ,  ,  ,  ,  ,  );


--r_sm.s_get_fifo_data is r_sm.s_get_fifo_data
--register power-up is low

r_sm.s_get_fifo_data = DFFEAS(A1L328, i_clk, i_rst,  ,  ,  ,  ,  ,  );


--A1L327 is Selector0~0
A1L327 = (r_sm.s_idle & (((r_rd_rx & !r_sm.s_get_fifo_data)))) # (!r_sm.s_idle & (C1L8));


--C2L46Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[22]
--register power-up is low

C2L46Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L30Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[1]
--register power-up is low

C2L30Q = DFFEAS(C2_r_wr_index[0], i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L32Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[3]
--register power-up is low

C2L32Q = DFFEAS(C2_r_wr_index[1], i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L33Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[4]
--register power-up is low

C2L33Q = DFFEAS(C2L68, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L31Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[2]
--register power-up is low

C2L31Q = DFFEAS(C2L65, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L48 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~13
C2L48 = (C2L30Q & (C2L31Q & (C2L32Q $ (!C2L33Q)))) # (!C2L30Q & (!C2L31Q & (C2L32Q $ (!C2L33Q))));


--C2L29Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[0]
--register power-up is low

C2L29Q = DFFEAS(C2L59, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L34Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[5]
--register power-up is low

C2L34Q = DFFEAS(C2_r_wr_index[2], i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L36Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[7]
--register power-up is low

C2L36Q = DFFEAS(C2_r_wr_index[3], i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L37Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[8]
--register power-up is low

C2L37Q = DFFEAS(C2L70, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L35Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[6]
--register power-up is low

C2L35Q = DFFEAS(C2L69, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L49 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~14
C2L49 = (C2L34Q & (C2L35Q & (C2L36Q $ (!C2L37Q)))) # (!C2L34Q & (!C2L35Q & (C2L36Q $ (!C2L37Q))));


--C2L50 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~15
C2L50 = (C2L48 & (C2L29Q & C2L49));


--C2L51 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~16
C2L51 = (C2L46Q & (G1_ram_block1a6 & !C2L50));


--E1L85 is uart:uart_unit|uart_tx:transmitter|Selector20~0
E1L85 = (!E1_r_sm_main.s_idle & (((C2_r_fifo_count[3]) # (C2_r_fifo_count[1])) # (!C2L6)));


--E1L1 is uart:uart_unit|uart_tx:transmitter|LessThan1~0
E1L1 = ((!E1_r_clk_count[5] & ((!E1_r_clk_count[4]) # (!E1_r_clk_count[3])))) # (!E1_r_clk_count[6]);


--E1L2 is uart:uart_unit|uart_tx:transmitter|LessThan1~1
E1L2 = (!E1_r_clk_count[11] & (!E1_r_clk_count[7] & (!E1_r_clk_count[8] & !E1_r_clk_count[9])));


--E1L3 is uart:uart_unit|uart_tx:transmitter|LessThan1~2
E1L3 = (E1L1 & ((E1L2) # ((!E1_r_clk_count[10] & !E1_r_clk_count[11])))) # (!E1L1 & (((!E1_r_clk_count[10] & !E1_r_clk_count[11]))));


--E1L4 is uart:uart_unit|uart_tx:transmitter|LessThan1~3
E1L4 = (E1L3) # (!E1_r_clk_count[12]);


--E1L80 is uart:uart_unit|uart_tx:transmitter|Selector17~0
E1L80 = (E1_r_sm_main.s_tx_data_bits & (E1_r_bit_index[0])) # (!E1_r_sm_main.s_tx_data_bits & ((E1_r_sm_main.s_idle)));


--E1L81 is uart:uart_unit|uart_tx:transmitter|Selector17~1
E1L81 = (E1_r_sm_main.s_tx_data_bits & (E1_r_bit_index[1] $ (((!E1L4 & E1L80))))) # (!E1_r_sm_main.s_tx_data_bits & (E1_r_bit_index[1] & ((E1L80))));


--C2L45Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[20]
--register power-up is low

C2L45Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L52 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~17
C2L52 = (C2L45Q & (G1_ram_block1a5 & !C2L50));


--E1L82 is uart:uart_unit|uart_tx:transmitter|Selector18~0
E1L82 = (E1_r_sm_main.s_tx_data_bits & ((E1_r_clk_count[12]))) # (!E1_r_sm_main.s_tx_data_bits & (E1_r_sm_main.s_idle));


--E1L83 is uart:uart_unit|uart_tx:transmitter|Selector18~1
E1L83 = (E1_r_sm_main.s_tx_data_bits & (E1_r_bit_index[0] $ (((!E1L3 & E1L82))))) # (!E1_r_sm_main.s_tx_data_bits & (E1_r_bit_index[0] & ((E1L82))));


--C2L44Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[18]
--register power-up is low

C2L44Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L53 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~18
C2L53 = (C2L44Q & (G1_ram_block1a4 & !C2L50));


--C2L47Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[24]
--register power-up is low

C2L47Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L54 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~19
C2L54 = (C2L47Q & (G1_ram_block1a7 & !C2L50));


--E1L78 is uart:uart_unit|uart_tx:transmitter|Selector16~0
E1L78 = (E1_r_bit_index[0] & (E1_r_clk_count[12] & (!E1L3 & E1_r_bit_index[1])));


--E1L79 is uart:uart_unit|uart_tx:transmitter|Selector16~1
E1L79 = (E1_r_sm_main.s_tx_data_bits & (E1_r_bit_index[2] $ (((E1L78))))) # (!E1_r_sm_main.s_tx_data_bits & (E1_r_bit_index[2] & (E1_r_sm_main.s_idle)));


--E1_r_sm_main.s_tx_start_bit is uart:uart_unit|uart_tx:transmitter|r_sm_main.s_tx_start_bit
--register power-up is low

E1_r_sm_main.s_tx_start_bit = DFFEAS(E1L86, i_clk,  ,  ,  ,  ,  ,  ,  );


--E1L60 is uart:uart_unit|uart_tx:transmitter|r_sm_main.s_tx_stop_bit~0
E1L60 = (E1_r_bit_index[1] & (E1_r_bit_index[0] & (E1_r_bit_index[2] & !E1L4)));


--E1L87 is uart:uart_unit|uart_tx:transmitter|Selector21~0
E1L87 = (E1_r_sm_main.s_tx_data_bits & (((E1_r_sm_main.s_tx_start_bit & !E1L4)) # (!E1L60))) # (!E1_r_sm_main.s_tx_data_bits & (E1_r_sm_main.s_tx_start_bit & ((!E1L4))));


--E1L84 is uart:uart_unit|uart_tx:transmitter|Selector19~0
E1L84 = (!E1_r_sm_main.s_cleanup & ((E1_r_sm_main.s_idle) # (!C2L8)));


--E1L61 is uart:uart_unit|uart_tx:transmitter|r_sm_main.s_tx_stop_bit~1
E1L61 = (E1_r_sm_main.s_tx_data_bits & ((E1L60) # ((E1_r_sm_main.s_tx_stop_bit & E1L4)))) # (!E1_r_sm_main.s_tx_data_bits & (E1_r_sm_main.s_tx_stop_bit & (E1L4)));


--C2L41Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[13]
--register power-up is low

C2L41Q = DFFEAS(r_tx_data[1], i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L42Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[14]
--register power-up is low

C2L42Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L55 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~20
C2L55 = (C2L42Q & ((C2L50 & (C2L41Q)) # (!C2L50 & ((G1_ram_block1a2))))) # (!C2L42Q & (C2L41Q));


--C2L39Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[11]
--register power-up is low

C2L39Q = DFFEAS(r_tx_data[1], i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L40Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[12]
--register power-up is low

C2L40Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L56 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~21
C2L56 = (C2L40Q & ((C2L50 & (C2L39Q)) # (!C2L50 & ((G1_ram_block1a1))))) # (!C2L40Q & (C2L39Q));


--C2L38Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[10]
--register power-up is low

C2L38Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L57 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~22
C2L57 = (C2L38Q & (G1_ram_block1a0 & !C2L50));


--C2L43Q is uart:uart_unit|fifo:fifo_tx|r_fifo_data_rtl_0_bypass[16]
--register power-up is low

C2L43Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L58 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~23
C2L58 = (C2L43Q & (G1_ram_block1a3 & !C2L50));


--E1L62 is uart:uart_unit|uart_tx:transmitter|r_sm_main~7
E1L62 = (!E1L3 & (E1_r_sm_main.s_tx_stop_bit & E1_r_clk_count[12]));


--A1L329 is Selector1~0
A1L329 = (r_wr_tx & ((r_sm.s_clear) # ((r_sm.s_process) # (r_sm.s_get_fifo_data))));


--A1L330 is Selector1~1
A1L330 = (r_sm.s_process & !A1L101);


--A1L331 is Selector1~2
A1L331 = (A1L329) # ((A1L330 & ((A1L120) # (!A1L171))));


--E1L76 is uart:uart_unit|uart_tx:transmitter|Selector2~0
E1L76 = (E1_r_tx_done & ((E1_r_sm_main.s_tx_data_bits) # ((E1_r_sm_main.s_tx_stop_bit) # (E1_r_sm_main.s_tx_start_bit))));


--E1L77 is uart:uart_unit|uart_tx:transmitter|Selector2~1
E1L77 = (E1L76) # ((E1_r_sm_main.s_tx_stop_bit & (E1_r_clk_count[12] & !E1L3)));


--C1L39Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[9]
--register power-up is low

C1L39Q = DFFEAS(D1_r_rx_byte[0], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L40Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[10]
--register power-up is low

C1L40Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L31Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[1]
--register power-up is low

C1L31Q = DFFEAS(C1_r_wr_index[0], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L33Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[3]
--register power-up is low

C1L33Q = DFFEAS(C1_r_wr_index[1], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L34Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[4]
--register power-up is low

C1L34Q = DFFEAS(C1L66, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L32Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[2]
--register power-up is low

C1L32Q = DFFEAS(C1L63, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L55 is uart:uart_unit|fifo:fifo_rx|r_fifo_data~13
C1L55 = (C1L31Q & (C1L32Q & (C1L33Q $ (!C1L34Q)))) # (!C1L31Q & (!C1L32Q & (C1L33Q $ (!C1L34Q))));


--C1L30Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[0]
--register power-up is low

C1L30Q = DFFEAS(C1L57, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L35Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[5]
--register power-up is low

C1L35Q = DFFEAS(C1_r_wr_index[2], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L37Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[7]
--register power-up is low

C1L37Q = DFFEAS(C1_r_wr_index[3], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L38Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[8]
--register power-up is low

C1L38Q = DFFEAS(C1L68, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L36Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[6]
--register power-up is low

C1L36Q = DFFEAS(C1L67, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L56 is uart:uart_unit|fifo:fifo_rx|r_fifo_data~14
C1L56 = (C1L35Q & (C1L36Q & (C1L37Q $ (!C1L38Q)))) # (!C1L35Q & (!C1L36Q & (C1L37Q $ (!C1L38Q))));


--A1L348 is Selector10~0
A1L348 = (C1L40Q & (((!C1L56) # (!C1L30Q)) # (!C1L55)));


--A1L349 is Selector10~1
A1L349 = (r_sm.s_get_fifo_data & ((A1L348 & (G2_ram_block1a0)) # (!A1L348 & ((C1L39Q)))));


--A1L326 is r_wr_tx~0
A1L326 = (r_sm.s_clear) # (r_sm.s_get_fifo_data);


--C1L49Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[19]
--register power-up is low

C1L49Q = DFFEAS(D1_r_rx_byte[5], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L50Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[20]
--register power-up is low

C1L50Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L338 is Selector5~0
A1L338 = (C1L50Q & (((!C1L56) # (!C1L30Q)) # (!C1L55)));


--A1L339 is Selector5~1
A1L339 = (r_sm.s_get_fifo_data & ((A1L338 & (G2_ram_block1a5)) # (!A1L338 & ((C1L49Q)))));


--C1L47Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[17]
--register power-up is low

C1L47Q = DFFEAS(D1_r_rx_byte[4], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L48Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[18]
--register power-up is low

C1L48Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L340 is Selector6~0
A1L340 = (C1L48Q & (((!C1L56) # (!C1L30Q)) # (!C1L55)));


--A1L341 is Selector6~1
A1L341 = (r_sm.s_get_fifo_data & ((A1L340 & (G2_ram_block1a4)) # (!A1L340 & ((C1L47Q)))));


--C1L53Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[23]
--register power-up is low

C1L53Q = DFFEAS(D1_r_rx_byte[7], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L54Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[24]
--register power-up is low

C1L54Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L334 is Selector3~0
A1L334 = (C1L54Q & (((!C1L56) # (!C1L30Q)) # (!C1L55)));


--A1L335 is Selector3~1
A1L335 = (r_sm.s_get_fifo_data & ((A1L334 & (G2_ram_block1a7)) # (!A1L334 & ((C1L53Q)))));


--C1L51Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[21]
--register power-up is low

C1L51Q = DFFEAS(D1_r_rx_byte[6], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L52Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[22]
--register power-up is low

C1L52Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L336 is Selector4~0
A1L336 = (C1L52Q & (((!C1L56) # (!C1L30Q)) # (!C1L55)));


--A1L337 is Selector4~1
A1L337 = (r_sm.s_get_fifo_data & ((A1L336 & (G2_ram_block1a6)) # (!A1L336 & ((C1L51Q)))));


--C1L45Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[15]
--register power-up is low

C1L45Q = DFFEAS(D1_r_rx_byte[3], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L46Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[16]
--register power-up is low

C1L46Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L342 is Selector7~0
A1L342 = (C1L46Q & (((!C1L56) # (!C1L30Q)) # (!C1L55)));


--A1L343 is Selector7~1
A1L343 = (r_sm.s_get_fifo_data & ((A1L342 & (G2_ram_block1a3)) # (!A1L342 & ((C1L45Q)))));


--C1L43Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[13]
--register power-up is low

C1L43Q = DFFEAS(D1_r_rx_byte[2], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L44Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[14]
--register power-up is low

C1L44Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L344 is Selector8~0
A1L344 = (C1L44Q & (((!C1L56) # (!C1L30Q)) # (!C1L55)));


--A1L345 is Selector8~1
A1L345 = (r_sm.s_get_fifo_data & ((A1L344 & (G2_ram_block1a2)) # (!A1L344 & ((C1L43Q)))));


--C1L41Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[11]
--register power-up is low

C1L41Q = DFFEAS(D1_r_rx_byte[1], i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L42Q is uart:uart_unit|fifo:fifo_rx|r_fifo_data_rtl_0_bypass[12]
--register power-up is low

C1L42Q = DFFEAS(VCC, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L346 is Selector9~0
A1L346 = (C1L42Q & (((!C1L56) # (!C1L30Q)) # (!C1L55)));


--A1L347 is Selector9~1
A1L347 = (r_sm.s_get_fifo_data & ((A1L346 & (G2_ram_block1a1)) # (!A1L346 & ((C1L41Q)))));


--A1L111 is Equal2~8
A1L111 = (A1L107 & (A1L108 & (A1L109 & !r_index[6])));


--A1L112 is Equal2~9
A1L112 = (r_index[5] & (!r_index[4] & !r_index[31]));


--A1L113 is Equal2~10
A1L113 = (A1L110 & (A1L111 & A1L112));


--A1L274 is r_index[27]~0
A1L274 = (A1L171 & (!r_index[31] & ((!A1L109) # (!A1L119))));


--A1L279 is r_index[31]~1
A1L279 = (A1L289 & ((A1L113) # ((A1L101 & !A1L274))));


--A1L247 is r_index[2]~2
A1L247 = (A1L279 & (((A1L5 & !A1L113)))) # (!A1L279 & (r_index[2]));


--A1L251 is r_index[5]~3
A1L251 = (A1L279 & (((A1L11 & !A1L113)))) # (!A1L279 & (r_index[5]));


--A1L244 is r_index[0]~4
A1L244 = (A1L279 & (((A1L1 & !A1L113)))) # (!A1L279 & (r_index[0]));


--r_sm.s_write_sram is r_sm.s_write_sram
--register power-up is low

r_sm.s_write_sram = DFFEAS(A1L286, i_clk, i_rst,  ,  ,  ,  ,  ,  );


--D1L10 is uart:uart_unit|uart_rx:receiver|Equal0~0
D1L10 = (D1_r_clk_count[3] & (!D1_r_clk_count[4] & (!D1_r_clk_count[7] & !D1_r_clk_count[8])));


--D1L11 is uart:uart_unit|uart_rx:receiver|Equal0~1
D1L11 = (D1_r_clk_count[5] & (D1_r_clk_count[9] & (!D1_r_clk_count[10] & !D1_r_clk_count[6])));


--D1L12 is uart:uart_unit|uart_rx:receiver|Equal0~2
D1L12 = (D1_r_clk_count[11] & (!D1_r_clk_count[12] & (!D1_r_clk_count[1] & !D1_r_clk_count[0])));


--D1L13 is uart:uart_unit|uart_rx:receiver|Equal0~3
D1L13 = (D1_r_clk_count[2] & (D1L10 & (D1L11 & D1L12)));


--D1L62 is uart:uart_unit|uart_rx:receiver|r_clk_count[12]~39
D1L62 = (D1_r_sm_main.s_rx_start_bit & D1L13);


--D1L17 is uart:uart_unit|uart_rx:receiver|LessThan1~3
D1L17 = (D1_r_clk_count[12] & !D1L16);


--D1_r_sm_main.s_idle is uart:uart_unit|uart_rx:receiver|r_sm_main.s_idle
--register power-up is low

D1_r_sm_main.s_idle = DFFEAS(D1L102, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1L63 is uart:uart_unit|uart_rx:receiver|r_clk_count[12]~40
D1L63 = (D1L62) # (((D1L17 & !D1L93)) # (!D1_r_sm_main.s_idle));


--D1_r_rx_data is uart:uart_unit|uart_rx:receiver|r_rx_data
--register power-up is low

D1_r_rx_data = DFFEAS(D1_r_rx_data_r, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_sm_main.s_cleanup is uart:uart_unit|uart_rx:receiver|r_sm_main.s_cleanup
--register power-up is low

D1_r_sm_main.s_cleanup = DFFEAS(D1L92, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1L64 is uart:uart_unit|uart_rx:receiver|r_clk_count[12]~41
D1L64 = (!D1_r_sm_main.s_cleanup & (((!D1_r_rx_data) # (!D1L13)) # (!D1_r_sm_main.s_rx_start_bit)));


--D1_r_bit_index[0] is uart:uart_unit|uart_rx:receiver|r_bit_index[0]
--register power-up is low

D1_r_bit_index[0] = DFFEAS(D1L101, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1L1 is uart:uart_unit|uart_rx:receiver|Decoder0~0
D1L1 = (D1_r_clk_count[12] & (D1_r_sm_main.s_rx_data_bits & !D1L16));


--D1_r_bit_index[1] is uart:uart_unit|uart_rx:receiver|r_bit_index[1]
--register power-up is low

D1_r_bit_index[1] = DFFEAS(D1L99, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_bit_index[2] is uart:uart_unit|uart_rx:receiver|r_bit_index[2]
--register power-up is low

D1_r_bit_index[2] = DFFEAS(D1L97, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1L90 is uart:uart_unit|uart_rx:receiver|r_sm_main.s_rx_stop_bit~2
D1L90 = (D1_r_bit_index[0] & (D1L1 & (D1_r_bit_index[1] & D1_r_bit_index[2])));


--D1L103 is uart:uart_unit|uart_rx:receiver|Selector18~0
D1L103 = (D1_r_sm_main.s_rx_start_bit & (((!D1_r_sm_main.s_idle & !D1_r_rx_data)) # (!D1L13))) # (!D1_r_sm_main.s_rx_start_bit & (!D1_r_sm_main.s_idle & (!D1_r_rx_data)));


--D1L104 is uart:uart_unit|uart_rx:receiver|Selector19~0
D1L104 = (D1_r_sm_main.s_rx_data_bits & ((D1L16) # (!D1_r_clk_count[12])));


--D1L105 is uart:uart_unit|uart_rx:receiver|Selector19~1
D1L105 = (D1_r_sm_main.s_rx_data_bits & (((!D1_r_bit_index[2]) # (!D1_r_bit_index[1])) # (!D1_r_bit_index[0])));


--D1L106 is uart:uart_unit|uart_rx:receiver|Selector19~2
D1L106 = (D1L104) # ((D1L105) # ((D1L62 & !D1_r_rx_data)));


--A1L332 is Selector2~0
A1L332 = (C1L6 & (!C1_r_fifo_count[3] & (!C1_r_fifo_count[1] & !r_sm.s_idle)));


--A1L333 is Selector2~1
A1L333 = (!r_sm.s_clear & (!A1L332 & ((A1L113) # (!r_sm.s_process))));


--A1L328 is Selector0~1
A1L328 = (!r_sm.s_idle & ((C1_r_fifo_count[3]) # ((C1_r_fifo_count[1]) # (!C1L6))));


--C2L59 is uart:uart_unit|fifo:fifo_tx|r_fifo_data~24
C2L59 = (i_rst_sync & r_wr_tx);


--C2_r_wr_index[0] is uart:uart_unit|fifo:fifo_tx|r_wr_index[0]
--register power-up is low

C2_r_wr_index[0] = DFFEAS(C2L78, i_clk,  ,  , C2L74,  ,  ,  ,  );


--C2_r_wr_index[1] is uart:uart_unit|fifo:fifo_tx|r_wr_index[1]
--register power-up is low

C2_r_wr_index[1] = DFFEAS(C2L79, i_clk,  ,  , C2L74,  ,  ,  ,  );


--C2_r_wr_index[2] is uart:uart_unit|fifo:fifo_tx|r_wr_index[2]
--register power-up is low

C2_r_wr_index[2] = DFFEAS(C2L80, i_clk,  ,  , C2L74,  ,  ,  ,  );


--C2_r_wr_index[3] is uart:uart_unit|fifo:fifo_tx|r_wr_index[3]
--register power-up is low

C2_r_wr_index[3] = DFFEAS(C2L81, i_clk,  ,  , C2L74,  ,  ,  ,  );


--C2_r_rd_index[0] is uart:uart_unit|fifo:fifo_tx|r_rd_index[0]
--register power-up is low

C2_r_rd_index[0] = DFFEAS(C2L65, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L65 is uart:uart_unit|fifo:fifo_tx|r_rd_index~0
C2L65 = (i_rst_sync & (C2_r_rd_index[0] $ (((!C2L8 & E1_r_tx_done)))));


--C2L66 is uart:uart_unit|fifo:fifo_tx|r_rd_index~1
C2L66 = (i_rst_sync & ((C2L8) # (!E1_r_tx_done)));


--C2_r_rd_index[3] is uart:uart_unit|fifo:fifo_tx|r_rd_index[3]
--register power-up is low

C2_r_rd_index[3] = DFFEAS(C2L70, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2_r_rd_index[1] is uart:uart_unit|fifo:fifo_tx|r_rd_index[1]
--register power-up is low

C2_r_rd_index[1] = DFFEAS(C2L68, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2_r_rd_index[2] is uart:uart_unit|fifo:fifo_tx|r_rd_index[2]
--register power-up is low

C2_r_rd_index[2] = DFFEAS(C2L69, i_clk,  ,  ,  ,  ,  ,  ,  );


--C2L5 is uart:uart_unit|fifo:fifo_tx|Equal1~0
C2L5 = (C2_r_rd_index[0] & (C2_r_rd_index[3] & (!C2_r_rd_index[1] & !C2_r_rd_index[2])));


--C2L67 is uart:uart_unit|fifo:fifo_tx|r_rd_index~2
C2L67 = (i_rst_sync & (E1_r_tx_done & (!C2L8 & !C2L5)));


--C2L68 is uart:uart_unit|fifo:fifo_tx|r_rd_index~3
C2L68 = (C2_r_rd_index[1] & ((C2L66) # ((C2L67 & !C2_r_rd_index[0])))) # (!C2_r_rd_index[1] & (((C2L67 & C2_r_rd_index[0]))));


--C2L3 is uart:uart_unit|fifo:fifo_tx|Add3~0
C2L3 = C2_r_rd_index[2] $ (((C2_r_rd_index[0] & C2_r_rd_index[1])));


--C2L10 is uart:uart_unit|fifo:fifo_tx|p_control~1
C2L10 = (E1_r_tx_done & ((C2_r_fifo_count[3]) # ((C2_r_fifo_count[1]) # (!C2L6))));


--C2L69 is uart:uart_unit|fifo:fifo_tx|r_rd_index~4
C2L69 = (i_rst_sync & ((C2L10 & (C2L3)) # (!C2L10 & ((C2_r_rd_index[2])))));


--C2L4 is uart:uart_unit|fifo:fifo_tx|Add3~1
C2L4 = C2_r_rd_index[3] $ (((C2_r_rd_index[0] & (C2_r_rd_index[1] & C2_r_rd_index[2]))));


--C2L70 is uart:uart_unit|fifo:fifo_tx|r_rd_index~5
C2L70 = (C2_r_rd_index[3] & ((C2L66) # ((C2L67 & C2L4)))) # (!C2_r_rd_index[3] & (C2L67 & (C2L4)));


--E1L49 is uart:uart_unit|uart_tx:transmitter|r_clk_count[11]~21
E1L49 = ((!E1L3 & E1_r_clk_count[12])) # (!E1_r_sm_main.s_idle);


--E1L86 is uart:uart_unit|uart_tx:transmitter|Selector20~1
E1L86 = (E1L4 & ((E1_r_sm_main.s_tx_start_bit) # ((!C2L8 & !E1_r_sm_main.s_idle)))) # (!E1L4 & (((!C2L8 & !E1_r_sm_main.s_idle))));


--r_tx_data[1] is r_tx_data[1]
--register power-up is low

r_tx_data[1] = DFFEAS(A1L324, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L57 is uart:uart_unit|fifo:fifo_rx|r_fifo_data~15
C1L57 = (D1_r_rx_dv & i_rst_sync);


--D1_r_rx_byte[0] is uart:uart_unit|uart_rx:receiver|r_rx_byte[0]
--register power-up is low

D1_r_rx_byte[0] = DFFEAS(D1L67, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_wr_index[0] is uart:uart_unit|fifo:fifo_rx|r_wr_index[0]
--register power-up is low

C1_r_wr_index[0] = DFFEAS(C1L76, i_clk,  ,  , C1L71,  ,  ,  ,  );


--C1_r_wr_index[1] is uart:uart_unit|fifo:fifo_rx|r_wr_index[1]
--register power-up is low

C1_r_wr_index[1] = DFFEAS(C1L77, i_clk,  ,  , C1L71,  ,  ,  ,  );


--C1_r_wr_index[2] is uart:uart_unit|fifo:fifo_rx|r_wr_index[2]
--register power-up is low

C1_r_wr_index[2] = DFFEAS(C1L78, i_clk,  ,  , C1L71,  ,  ,  ,  );


--C1_r_wr_index[3] is uart:uart_unit|fifo:fifo_rx|r_wr_index[3]
--register power-up is low

C1_r_wr_index[3] = DFFEAS(C1L79, i_clk,  ,  , C1L71,  ,  ,  ,  );


--C1_r_rd_index[0] is uart:uart_unit|fifo:fifo_rx|r_rd_index[0]
--register power-up is low

C1_r_rd_index[0] = DFFEAS(C1L63, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L63 is uart:uart_unit|fifo:fifo_rx|r_rd_index~0
C1L63 = (i_rst_sync & (C1_r_rd_index[0] $ (((C1L8 & r_rd_rx)))));


--C1L64 is uart:uart_unit|fifo:fifo_rx|r_rd_index~1
C1L64 = (i_rst_sync & ((!r_rd_rx) # (!C1L8)));


--C1_r_rd_index[3] is uart:uart_unit|fifo:fifo_rx|r_rd_index[3]
--register power-up is low

C1_r_rd_index[3] = DFFEAS(C1L68, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rd_index[1] is uart:uart_unit|fifo:fifo_rx|r_rd_index[1]
--register power-up is low

C1_r_rd_index[1] = DFFEAS(C1L66, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rd_index[2] is uart:uart_unit|fifo:fifo_rx|r_rd_index[2]
--register power-up is low

C1_r_rd_index[2] = DFFEAS(C1L67, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L5 is uart:uart_unit|fifo:fifo_rx|Equal1~0
C1L5 = (C1_r_rd_index[0] & (C1_r_rd_index[3] & (!C1_r_rd_index[1] & !C1_r_rd_index[2])));


--C1L65 is uart:uart_unit|fifo:fifo_rx|r_rd_index~2
C1L65 = (C1L8 & (r_rd_rx & (i_rst_sync & !C1L5)));


--C1L66 is uart:uart_unit|fifo:fifo_rx|r_rd_index~3
C1L66 = (C1_r_rd_index[1] & ((C1L64) # ((C1L65 & !C1_r_rd_index[0])))) # (!C1_r_rd_index[1] & (((C1L65 & C1_r_rd_index[0]))));


--C1L3 is uart:uart_unit|fifo:fifo_rx|Add3~0
C1L3 = C1_r_rd_index[2] $ (((C1_r_rd_index[0] & C1_r_rd_index[1])));


--C1L11 is uart:uart_unit|fifo:fifo_rx|p_control~1
C1L11 = (r_rd_rx & ((C1_r_fifo_count[3]) # ((C1_r_fifo_count[1]) # (!C1L6))));


--C1L67 is uart:uart_unit|fifo:fifo_rx|r_rd_index~4
C1L67 = (i_rst_sync & ((C1L11 & (C1L3)) # (!C1L11 & ((C1_r_rd_index[2])))));


--C1L4 is uart:uart_unit|fifo:fifo_rx|Add3~1
C1L4 = C1_r_rd_index[3] $ (((C1_r_rd_index[0] & (C1_r_rd_index[1] & C1_r_rd_index[2]))));


--C1L68 is uart:uart_unit|fifo:fifo_rx|r_rd_index~5
C1L68 = (C1_r_rd_index[3] & ((C1L64) # ((C1L65 & C1L4)))) # (!C1_r_rd_index[3] & (C1L65 & (C1L4)));


--D1_r_rx_byte[5] is uart:uart_unit|uart_rx:receiver|r_rx_byte[5]
--register power-up is low

D1_r_rx_byte[5] = DFFEAS(D1L77, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_rx_byte[4] is uart:uart_unit|uart_rx:receiver|r_rx_byte[4]
--register power-up is low

D1_r_rx_byte[4] = DFFEAS(D1L75, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_rx_byte[7] is uart:uart_unit|uart_rx:receiver|r_rx_byte[7]
--register power-up is low

D1_r_rx_byte[7] = DFFEAS(D1L81, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_rx_byte[6] is uart:uart_unit|uart_rx:receiver|r_rx_byte[6]
--register power-up is low

D1_r_rx_byte[6] = DFFEAS(D1L79, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_rx_byte[3] is uart:uart_unit|uart_rx:receiver|r_rx_byte[3]
--register power-up is low

D1_r_rx_byte[3] = DFFEAS(D1L73, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_rx_byte[2] is uart:uart_unit|uart_rx:receiver|r_rx_byte[2]
--register power-up is low

D1_r_rx_byte[2] = DFFEAS(D1L71, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1_r_rx_byte[1] is uart:uart_unit|uart_rx:receiver|r_rx_byte[1]
--register power-up is low

D1_r_rx_byte[1] = DFFEAS(D1L69, i_clk,  ,  ,  ,  ,  ,  ,  );


--A1L286 is r_sm~9
A1L286 = (r_sm.s_process & (A1L110 & (A1L111 & A1L112)));


--D1L102 is uart:uart_unit|uart_rx:receiver|Selector17~0
D1L102 = (!D1_r_sm_main.s_cleanup & (((!D1L62 & D1_r_sm_main.s_idle)) # (!D1_r_rx_data)));


--D1_r_rx_data_r is uart:uart_unit|uart_rx:receiver|r_rx_data_r
--register power-up is low

D1_r_rx_data_r = DFFEAS(i_rx, i_clk,  ,  ,  ,  ,  ,  ,  );


--D1L100 is uart:uart_unit|uart_rx:receiver|Selector16~0
D1L100 = (D1_r_sm_main.s_rx_data_bits & ((D1_r_clk_count[12]))) # (!D1_r_sm_main.s_rx_data_bits & (D1_r_sm_main.s_idle));


--D1L101 is uart:uart_unit|uart_rx:receiver|Selector16~1
D1L101 = (D1_r_sm_main.s_rx_data_bits & (D1_r_bit_index[0] $ (((!D1L16 & D1L100))))) # (!D1_r_sm_main.s_rx_data_bits & (D1_r_bit_index[0] & ((D1L100))));


--D1L98 is uart:uart_unit|uart_rx:receiver|Selector15~2
D1L98 = (D1_r_sm_main.s_rx_data_bits & (D1_r_bit_index[1] $ (((D1L17 & D1_r_bit_index[0])))));


--D1L95 is uart:uart_unit|uart_rx:receiver|Selector14~0
D1L95 = (D1_r_bit_index[0] & (D1L1 & (D1_r_bit_index[1] $ (D1_r_bit_index[2]))));


--C2L78 is uart:uart_unit|fifo:fifo_tx|r_wr_index~0
C2L78 = (!C2_r_wr_index[0] & i_rst_sync);


--C2L74 is uart:uart_unit|fifo:fifo_tx|r_wr_index[1]~1
C2L74 = ((!C2L7 & r_wr_tx)) # (!i_rst_sync);


--C2L75 is uart:uart_unit|fifo:fifo_tx|r_wr_index[1]~2
C2L75 = (C2_r_wr_index[1]) # ((C2_r_wr_index[2]) # ((!C2_r_wr_index[3]) # (!C2_r_wr_index[0])));


--C2L79 is uart:uart_unit|fifo:fifo_tx|r_wr_index~3
C2L79 = (i_rst_sync & (C2L75 & (C2_r_wr_index[0] $ (C2_r_wr_index[1]))));


--C2L1 is uart:uart_unit|fifo:fifo_tx|Add2~0
C2L1 = C2_r_wr_index[2] $ (((C2_r_wr_index[0] & C2_r_wr_index[1])));


--C2L80 is uart:uart_unit|fifo:fifo_tx|r_wr_index~4
C2L80 = (i_rst_sync & (C2L75 & C2L1));


--C2L2 is uart:uart_unit|fifo:fifo_tx|Add2~1
C2L2 = C2_r_wr_index[3] $ (((C2_r_wr_index[0] & (C2_r_wr_index[1] & C2_r_wr_index[2]))));


--C2L81 is uart:uart_unit|fifo:fifo_tx|r_wr_index~5
C2L81 = (i_rst_sync & (C2L75 & C2L2));


--A1L323 is r_tx_data[1]~0
A1L323 = (r_tx_data[1]) # ((A1L120 & (A1L289 & !A1L101)));


--A1L324 is r_tx_data[1]~1
A1L324 = (A1L323) # ((A1L289 & (!A1L101 & !A1L171)));


--D1L2 is uart:uart_unit|uart_rx:receiver|Decoder0~1
D1L2 = (!D1_r_bit_index[0] & (!D1_r_bit_index[1] & (!D1_r_bit_index[2] & D1L1)));


--D1L67 is uart:uart_unit|uart_rx:receiver|r_rx_byte[0]~0
D1L67 = (D1L2 & (D1_r_rx_data)) # (!D1L2 & ((D1_r_rx_byte[0])));


--C1L76 is uart:uart_unit|fifo:fifo_rx|r_wr_index~0
C1L76 = (!C1_r_wr_index[0] & i_rst_sync);


--C1L71 is uart:uart_unit|fifo:fifo_rx|r_wr_index[0]~1
C1L71 = ((!C1L7 & D1_r_rx_dv)) # (!i_rst_sync);


--C1L72 is uart:uart_unit|fifo:fifo_rx|r_wr_index[0]~2
C1L72 = (C1_r_wr_index[1]) # ((C1_r_wr_index[2]) # ((!C1_r_wr_index[3]) # (!C1_r_wr_index[0])));


--C1L77 is uart:uart_unit|fifo:fifo_rx|r_wr_index~3
C1L77 = (i_rst_sync & (C1L72 & (C1_r_wr_index[0] $ (C1_r_wr_index[1]))));


--C1L1 is uart:uart_unit|fifo:fifo_rx|Add2~0
C1L1 = C1_r_wr_index[2] $ (((C1_r_wr_index[0] & C1_r_wr_index[1])));


--C1L78 is uart:uart_unit|fifo:fifo_rx|r_wr_index~4
C1L78 = (i_rst_sync & (C1L72 & C1L1));


--C1L2 is uart:uart_unit|fifo:fifo_rx|Add2~1
C1L2 = C1_r_wr_index[3] $ (((C1_r_wr_index[0] & (C1_r_wr_index[1] & C1_r_wr_index[2]))));


--C1L79 is uart:uart_unit|fifo:fifo_rx|r_wr_index~5
C1L79 = (i_rst_sync & (C1L72 & C1L2));


--D1L3 is uart:uart_unit|uart_rx:receiver|Decoder0~2
D1L3 = (D1_r_bit_index[0] & (!D1_r_bit_index[1] & (D1_r_bit_index[2] & D1L1)));


--D1L77 is uart:uart_unit|uart_rx:receiver|r_rx_byte[5]~1
D1L77 = (D1L3 & (D1_r_rx_data)) # (!D1L3 & ((D1_r_rx_byte[5])));


--D1L4 is uart:uart_unit|uart_rx:receiver|Decoder0~3
D1L4 = (!D1_r_bit_index[0] & (!D1_r_bit_index[1] & (D1_r_bit_index[2] & D1L1)));


--D1L75 is uart:uart_unit|uart_rx:receiver|r_rx_byte[4]~2
D1L75 = (D1L4 & (D1_r_rx_data)) # (!D1L4 & ((D1_r_rx_byte[4])));


--D1L5 is uart:uart_unit|uart_rx:receiver|Decoder0~4
D1L5 = (D1_r_bit_index[0] & (D1_r_bit_index[1] & (D1_r_bit_index[2] & D1L1)));


--D1L81 is uart:uart_unit|uart_rx:receiver|r_rx_byte[7]~3
D1L81 = (D1L5 & (D1_r_rx_data)) # (!D1L5 & ((D1_r_rx_byte[7])));


--D1L6 is uart:uart_unit|uart_rx:receiver|Decoder0~5
D1L6 = (!D1_r_bit_index[0] & (D1_r_bit_index[1] & (D1_r_bit_index[2] & D1L1)));


--D1L79 is uart:uart_unit|uart_rx:receiver|r_rx_byte[6]~4
D1L79 = (D1L6 & (D1_r_rx_data)) # (!D1L6 & ((D1_r_rx_byte[6])));


--D1L7 is uart:uart_unit|uart_rx:receiver|Decoder0~6
D1L7 = (D1_r_bit_index[0] & (D1_r_bit_index[1] & (!D1_r_bit_index[2] & D1L1)));


--D1L73 is uart:uart_unit|uart_rx:receiver|r_rx_byte[3]~5
D1L73 = (D1L7 & (D1_r_rx_data)) # (!D1L7 & ((D1_r_rx_byte[3])));


--D1L8 is uart:uart_unit|uart_rx:receiver|Decoder0~7
D1L8 = (!D1_r_bit_index[0] & (D1_r_bit_index[1] & (!D1_r_bit_index[2] & D1L1)));


--D1L71 is uart:uart_unit|uart_rx:receiver|r_rx_byte[2]~6
D1L71 = (D1L8 & (D1_r_rx_data)) # (!D1L8 & ((D1_r_rx_byte[2])));


--D1L9 is uart:uart_unit|uart_rx:receiver|Decoder0~8
D1L9 = (D1_r_bit_index[0] & (!D1_r_bit_index[1] & (!D1_r_bit_index[2] & D1L1)));


--D1L69 is uart:uart_unit|uart_rx:receiver|r_rx_byte[1]~7
D1L69 = (D1L9 & (D1_r_rx_data)) # (!D1L9 & ((D1_r_rx_byte[1])));


--i_rx is i_rx
i_rx = INPUT();


--A1L85 is Decoder0~44
A1L85 = (!r_index[3] & (!r_index[2] & (A1L67 & A1L68)));


--A1L86 is Decoder0~45
A1L86 = (!r_index[3] & (!r_index[2] & (A1L67 & A1L69)));


--A1L87 is Decoder0~46
A1L87 = (!r_index[3] & (!r_index[2] & (A1L67 & A1L70)));


--A1L88 is Decoder0~47
A1L88 = (!r_index[3] & (!r_index[2] & (A1L67 & A1L71)));


--A1L89 is Decoder0~48
A1L89 = (!r_index[1] & (!r_index[0] & A1L84));


--A1L90 is Decoder0~49
A1L90 = (r_index[0] & (!r_index[1] & A1L84));


--A1L91 is Decoder0~50
A1L91 = (r_index[1] & (!r_index[0] & A1L84));


--A1L92 is Decoder0~51
A1L92 = (r_index[1] & (r_index[0] & A1L84));


--A1L97 is Decoder1~10
A1L97 = (r_sm.s_process & (i_rst & (r_index[2] & !r_index[3])));


--A1L98 is Decoder1~11
A1L98 = (r_sm.s_process & (i_rst & (r_index[3] & r_index[2])));


--A1L99 is Decoder1~12
A1L99 = (!r_index[3] & (!r_index[2] & A1L93));


--D1L91 is uart:uart_unit|uart_rx:receiver|r_sm_main.s_rx_stop_bit~3
D1L91 = (D1L90) # ((D1_r_sm_main.s_rx_stop_bit & ((D1L16) # (!D1_r_clk_count[12]))));


--D1L99 is uart:uart_unit|uart_rx:receiver|Selector15~3
D1L99 = (D1L98) # ((D1_r_sm_main.s_idle & (!D1_r_sm_main.s_rx_data_bits & D1_r_bit_index[1])));


--D1L96 is uart:uart_unit|uart_rx:receiver|Selector14~1
D1L96 = (D1_r_sm_main.s_rx_data_bits & (((!D1_r_bit_index[0]) # (!D1L17)))) # (!D1_r_sm_main.s_rx_data_bits & (D1_r_sm_main.s_idle));


--D1L97 is uart:uart_unit|uart_rx:receiver|Selector14~2
D1L97 = (D1L95) # ((D1L96 & D1_r_bit_index[2]));


--A1L370 is ~GND
A1L370 = GND;


--C1L9 is uart:uart_unit|fifo:fifo_rx|Equal3~0_wirecell
C1L9 = !C1L8;


