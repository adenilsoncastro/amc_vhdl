-- Copyright (C) 2020  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and any partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details, at
-- https://fpgasoftware.intel.com/eula.
--B1_r_fifo_count[3] is fifo:fifo_rx|r_fifo_count[3]
--register power-up is low

B1_r_fifo_count[3] = DFFEAS(B1L16, i_clk,  ,  , B1L8,  ,  , i_rst_sync,  );


--B1_r_fifo_count[1] is fifo:fifo_rx|r_fifo_count[1]
--register power-up is low

B1_r_fifo_count[1] = DFFEAS(B1L10, i_clk,  ,  , B1L8,  ,  , i_rst_sync,  );


--B1_r_fifo_count[0] is fifo:fifo_rx|r_fifo_count[0]
--register power-up is low

B1_r_fifo_count[0] = DFFEAS(B1L6, i_clk,  ,  , B1L8,  ,  , i_rst_sync,  );


--B1_r_fifo_count[2] is fifo:fifo_rx|r_fifo_count[2]
--register power-up is low

B1_r_fifo_count[2] = DFFEAS(B1L13, i_clk,  ,  , B1L8,  ,  , i_rst_sync,  );


--B1_r_fifo_count[4] is fifo:fifo_rx|r_fifo_count[4]
--register power-up is low

B1_r_fifo_count[4] = DFFEAS(B1L19, i_clk,  ,  , B1L8,  ,  , i_rst_sync,  );


--B1L6 is fifo:fifo_rx|r_fifo_count[0]~5
B1L6 = B1_r_fifo_count[0] $ (VCC);

--B1L7 is fifo:fifo_rx|r_fifo_count[0]~6
B1L7 = CARRY(B1_r_fifo_count[0]);


--B1L10 is fifo:fifo_rx|r_fifo_count[1]~7
B1L10 = (B1_r_fifo_count[1] & ((C1_r_rx_dv & (!B1L7)) # (!C1_r_rx_dv & (B1L7 & VCC)))) # (!B1_r_fifo_count[1] & ((C1_r_rx_dv & ((B1L7) # (GND))) # (!C1_r_rx_dv & (!B1L7))));

--B1L11 is fifo:fifo_rx|r_fifo_count[1]~8
B1L11 = CARRY((B1_r_fifo_count[1] & (C1_r_rx_dv & !B1L7)) # (!B1_r_fifo_count[1] & ((C1_r_rx_dv) # (!B1L7))));


--B1L13 is fifo:fifo_rx|r_fifo_count[2]~9
B1L13 = ((B1_r_fifo_count[2] $ (C1_r_rx_dv $ (B1L11)))) # (GND);

--B1L14 is fifo:fifo_rx|r_fifo_count[2]~10
B1L14 = CARRY((B1_r_fifo_count[2] & ((!B1L11) # (!C1_r_rx_dv))) # (!B1_r_fifo_count[2] & (!C1_r_rx_dv & !B1L11)));


--B1L16 is fifo:fifo_rx|r_fifo_count[3]~11
B1L16 = (B1_r_fifo_count[3] & ((C1_r_rx_dv & (!B1L14)) # (!C1_r_rx_dv & (B1L14 & VCC)))) # (!B1_r_fifo_count[3] & ((C1_r_rx_dv & ((B1L14) # (GND))) # (!C1_r_rx_dv & (!B1L14))));

--B1L17 is fifo:fifo_rx|r_fifo_count[3]~12
B1L17 = CARRY((B1_r_fifo_count[3] & (C1_r_rx_dv & !B1L14)) # (!B1_r_fifo_count[3] & ((C1_r_rx_dv) # (!B1L14))));


--B1L19 is fifo:fifo_rx|r_fifo_count[4]~14
B1L19 = B1_r_fifo_count[4] $ (C1_r_rx_dv $ (B1L17));


--C1_r_clk_count[12] is uart_rx:receiver|r_clk_count[12]
--register power-up is low

C1_r_clk_count[12] = DFFEAS(C1L63, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[3] is uart_rx:receiver|r_clk_count[3]
--register power-up is low

C1_r_clk_count[3] = DFFEAS(C1L36, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[4] is uart_rx:receiver|r_clk_count[4]
--register power-up is low

C1_r_clk_count[4] = DFFEAS(C1L39, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[5] is uart_rx:receiver|r_clk_count[5]
--register power-up is low

C1_r_clk_count[5] = DFFEAS(C1L42, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[6] is uart_rx:receiver|r_clk_count[6]
--register power-up is low

C1_r_clk_count[6] = DFFEAS(C1L45, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[11] is uart_rx:receiver|r_clk_count[11]
--register power-up is low

C1_r_clk_count[11] = DFFEAS(C1L60, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[7] is uart_rx:receiver|r_clk_count[7]
--register power-up is low

C1_r_clk_count[7] = DFFEAS(C1L48, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[8] is uart_rx:receiver|r_clk_count[8]
--register power-up is low

C1_r_clk_count[8] = DFFEAS(C1L51, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[9] is uart_rx:receiver|r_clk_count[9]
--register power-up is low

C1_r_clk_count[9] = DFFEAS(C1L54, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[10] is uart_rx:receiver|r_clk_count[10]
--register power-up is low

C1_r_clk_count[10] = DFFEAS(C1L57, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[2] is uart_rx:receiver|r_clk_count[2]
--register power-up is low

C1_r_clk_count[2] = DFFEAS(C1L33, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[1] is uart_rx:receiver|r_clk_count[1]
--register power-up is low

C1_r_clk_count[1] = DFFEAS(C1L30, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1_r_clk_count[0] is uart_rx:receiver|r_clk_count[0]
--register power-up is low

C1_r_clk_count[0] = DFFEAS(C1L23, i_clk,  ,  , C1L28,  ,  , C1L27,  );


--C1L23 is uart_rx:receiver|r_clk_count[0]~13
C1L23 = C1_r_clk_count[0] $ (VCC);

--C1L24 is uart_rx:receiver|r_clk_count[0]~14
C1L24 = CARRY(C1_r_clk_count[0]);


--C1L30 is uart_rx:receiver|r_clk_count[1]~15
C1L30 = (C1_r_clk_count[1] & (!C1L24)) # (!C1_r_clk_count[1] & ((C1L24) # (GND)));

--C1L31 is uart_rx:receiver|r_clk_count[1]~16
C1L31 = CARRY((!C1L24) # (!C1_r_clk_count[1]));


--C1L33 is uart_rx:receiver|r_clk_count[2]~17
C1L33 = (C1_r_clk_count[2] & (C1L31 $ (GND))) # (!C1_r_clk_count[2] & (!C1L31 & VCC));

--C1L34 is uart_rx:receiver|r_clk_count[2]~18
C1L34 = CARRY((C1_r_clk_count[2] & !C1L31));


--C1L36 is uart_rx:receiver|r_clk_count[3]~19
C1L36 = (C1_r_clk_count[3] & (!C1L34)) # (!C1_r_clk_count[3] & ((C1L34) # (GND)));

--C1L37 is uart_rx:receiver|r_clk_count[3]~20
C1L37 = CARRY((!C1L34) # (!C1_r_clk_count[3]));


--C1L39 is uart_rx:receiver|r_clk_count[4]~21
C1L39 = (C1_r_clk_count[4] & (C1L37 $ (GND))) # (!C1_r_clk_count[4] & (!C1L37 & VCC));

--C1L40 is uart_rx:receiver|r_clk_count[4]~22
C1L40 = CARRY((C1_r_clk_count[4] & !C1L37));


--C1L42 is uart_rx:receiver|r_clk_count[5]~23
C1L42 = (C1_r_clk_count[5] & (!C1L40)) # (!C1_r_clk_count[5] & ((C1L40) # (GND)));

--C1L43 is uart_rx:receiver|r_clk_count[5]~24
C1L43 = CARRY((!C1L40) # (!C1_r_clk_count[5]));


--C1L45 is uart_rx:receiver|r_clk_count[6]~25
C1L45 = (C1_r_clk_count[6] & (C1L43 $ (GND))) # (!C1_r_clk_count[6] & (!C1L43 & VCC));

--C1L46 is uart_rx:receiver|r_clk_count[6]~26
C1L46 = CARRY((C1_r_clk_count[6] & !C1L43));


--C1L48 is uart_rx:receiver|r_clk_count[7]~27
C1L48 = (C1_r_clk_count[7] & (!C1L46)) # (!C1_r_clk_count[7] & ((C1L46) # (GND)));

--C1L49 is uart_rx:receiver|r_clk_count[7]~28
C1L49 = CARRY((!C1L46) # (!C1_r_clk_count[7]));


--C1L51 is uart_rx:receiver|r_clk_count[8]~29
C1L51 = (C1_r_clk_count[8] & (C1L49 $ (GND))) # (!C1_r_clk_count[8] & (!C1L49 & VCC));

--C1L52 is uart_rx:receiver|r_clk_count[8]~30
C1L52 = CARRY((C1_r_clk_count[8] & !C1L49));


--C1L54 is uart_rx:receiver|r_clk_count[9]~31
C1L54 = (C1_r_clk_count[9] & (!C1L52)) # (!C1_r_clk_count[9] & ((C1L52) # (GND)));

--C1L55 is uart_rx:receiver|r_clk_count[9]~32
C1L55 = CARRY((!C1L52) # (!C1_r_clk_count[9]));


--C1L57 is uart_rx:receiver|r_clk_count[10]~33
C1L57 = (C1_r_clk_count[10] & (C1L55 $ (GND))) # (!C1_r_clk_count[10] & (!C1L55 & VCC));

--C1L58 is uart_rx:receiver|r_clk_count[10]~34
C1L58 = CARRY((C1_r_clk_count[10] & !C1L55));


--C1L60 is uart_rx:receiver|r_clk_count[11]~35
C1L60 = (C1_r_clk_count[11] & (!C1L58)) # (!C1_r_clk_count[11] & ((C1L58) # (GND)));

--C1L61 is uart_rx:receiver|r_clk_count[11]~36
C1L61 = CARRY((!C1L58) # (!C1_r_clk_count[11]));


--C1L63 is uart_rx:receiver|r_clk_count[12]~37
C1L63 = C1_r_clk_count[12] $ (!C1L61);


--i_rst is i_rst
i_rst = INPUT();


--o_status[0] is o_status[0]
o_status[0] = OUTPUT(A1L21);


--o_status[1] is o_status[1]
o_status[1] = OUTPUT(A1L21);


--o_status[2] is o_status[2]
o_status[2] = OUTPUT(A1L21);


--o_status[3] is o_status[3]
o_status[3] = OUTPUT(A1L21);


--o_fifo_rx_full is o_fifo_rx_full
o_fifo_rx_full = OUTPUT(B1L2);


--o_fifo_rx_empty is o_fifo_rx_empty
o_fifo_rx_empty = OUTPUT(B1L3);


--rx_data[0] is rx_data[0]
rx_data[0] = OUTPUT(C1_r_rx_byte[0]);


--rx_data[1] is rx_data[1]
rx_data[1] = OUTPUT(C1_r_rx_byte[1]);


--rx_data[2] is rx_data[2]
rx_data[2] = OUTPUT(C1_r_rx_byte[2]);


--rx_data[3] is rx_data[3]
rx_data[3] = OUTPUT(C1_r_rx_byte[3]);


--rx_data[4] is rx_data[4]
rx_data[4] = OUTPUT(C1_r_rx_byte[4]);


--rx_data[5] is rx_data[5]
rx_data[5] = OUTPUT(C1_r_rx_byte[5]);


--rx_data[6] is rx_data[6]
rx_data[6] = OUTPUT(C1_r_rx_byte[6]);


--rx_data[7] is rx_data[7]
rx_data[7] = OUTPUT(C1_r_rx_byte[7]);


--B1L1 is fifo:fifo_rx|Equal2~0
B1L1 = (!B1_r_fifo_count[0] & (!B1_r_fifo_count[2] & !B1_r_fifo_count[4]));


--B1L2 is fifo:fifo_rx|Equal2~1
B1L2 = (B1_r_fifo_count[3] & (B1_r_fifo_count[1] & B1L1));


--B1L3 is fifo:fifo_rx|Equal3~0
B1L3 = (B1L1 & (!B1_r_fifo_count[3] & !B1_r_fifo_count[1]));


--C1_r_rx_byte[0] is uart_rx:receiver|r_rx_byte[0]
--register power-up is low

C1_r_rx_byte[0] = DFFEAS(C1L67, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[1] is uart_rx:receiver|r_rx_byte[1]
--register power-up is low

C1_r_rx_byte[1] = DFFEAS(C1L69, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[2] is uart_rx:receiver|r_rx_byte[2]
--register power-up is low

C1_r_rx_byte[2] = DFFEAS(C1L71, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[3] is uart_rx:receiver|r_rx_byte[3]
--register power-up is low

C1_r_rx_byte[3] = DFFEAS(C1L73, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[4] is uart_rx:receiver|r_rx_byte[4]
--register power-up is low

C1_r_rx_byte[4] = DFFEAS(C1L75, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[5] is uart_rx:receiver|r_rx_byte[5]
--register power-up is low

C1_r_rx_byte[5] = DFFEAS(C1L77, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[6] is uart_rx:receiver|r_rx_byte[6]
--register power-up is low

C1_r_rx_byte[6] = DFFEAS(C1L79, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_rx_byte[7] is uart_rx:receiver|r_rx_byte[7]
--register power-up is low

C1_r_rx_byte[7] = DFFEAS(C1L81, i_clk,  ,  ,  ,  ,  ,  ,  );


--i_clk is i_clk
i_clk = INPUT();


--C1_r_rx_dv is uart_rx:receiver|r_rx_dv
--register power-up is low

C1_r_rx_dv = DFFEAS(C1L93, i_clk,  ,  ,  ,  ,  ,  ,  );


--i_rst_sync is i_rst_sync
i_rst_sync = INPUT();


--B1L8 is fifo:fifo_rx|r_fifo_count[0]~13
B1L8 = (C1_r_rx_dv) # (i_rst_sync);


--C1_r_rx_data is uart_rx:receiver|r_rx_data
--register power-up is low

C1_r_rx_data = DFFEAS(C1_r_rx_data_r, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_bit_index[0] is uart_rx:receiver|r_bit_index[0]
--register power-up is low

C1_r_bit_index[0] = DFFEAS(C1L100, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_bit_index[1] is uart_rx:receiver|r_bit_index[1]
--register power-up is low

C1_r_bit_index[1] = DFFEAS(C1L99, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_bit_index[2] is uart_rx:receiver|r_bit_index[2]
--register power-up is low

C1_r_bit_index[2] = DFFEAS(C1L97, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L14 is uart_rx:receiver|LessThan1~0
C1L14 = ((!C1_r_clk_count[5] & ((!C1_r_clk_count[4]) # (!C1_r_clk_count[3])))) # (!C1_r_clk_count[6]);


--C1_r_sm_main.s_rx_data_bits is uart_rx:receiver|r_sm_main.s_rx_data_bits
--register power-up is low

C1_r_sm_main.s_rx_data_bits = DFFEAS(C1L104, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L1 is uart_rx:receiver|Decoder0~0
C1L1 = (C1L16 & C1_r_sm_main.s_rx_data_bits);


--C1L2 is uart_rx:receiver|Decoder0~1
C1L2 = (!C1_r_bit_index[0] & (!C1_r_bit_index[1] & (!C1_r_bit_index[2] & C1L1)));


--C1L67 is uart_rx:receiver|r_rx_byte[0]~0
C1L67 = (C1L2 & (C1_r_rx_data)) # (!C1L2 & ((C1_r_rx_byte[0])));


--C1L3 is uart_rx:receiver|Decoder0~2
C1L3 = (C1_r_bit_index[0] & (!C1_r_bit_index[1] & (!C1_r_bit_index[2] & C1L1)));


--C1L69 is uart_rx:receiver|r_rx_byte[1]~1
C1L69 = (C1L3 & (C1_r_rx_data)) # (!C1L3 & ((C1_r_rx_byte[1])));


--C1L4 is uart_rx:receiver|Decoder0~3
C1L4 = (!C1_r_bit_index[0] & (C1_r_bit_index[1] & (!C1_r_bit_index[2] & C1L1)));


--C1L71 is uart_rx:receiver|r_rx_byte[2]~2
C1L71 = (C1L4 & (C1_r_rx_data)) # (!C1L4 & ((C1_r_rx_byte[2])));


--C1L5 is uart_rx:receiver|Decoder0~4
C1L5 = (C1_r_bit_index[0] & (C1_r_bit_index[1] & (!C1_r_bit_index[2] & C1L1)));


--C1L73 is uart_rx:receiver|r_rx_byte[3]~3
C1L73 = (C1L5 & (C1_r_rx_data)) # (!C1L5 & ((C1_r_rx_byte[3])));


--C1L6 is uart_rx:receiver|Decoder0~5
C1L6 = (!C1_r_bit_index[0] & (!C1_r_bit_index[1] & (C1_r_bit_index[2] & C1L1)));


--C1L75 is uart_rx:receiver|r_rx_byte[4]~4
C1L75 = (C1L6 & (C1_r_rx_data)) # (!C1L6 & ((C1_r_rx_byte[4])));


--C1L7 is uart_rx:receiver|Decoder0~6
C1L7 = (C1_r_bit_index[0] & (!C1_r_bit_index[1] & (C1_r_bit_index[2] & C1L1)));


--C1L77 is uart_rx:receiver|r_rx_byte[5]~5
C1L77 = (C1L7 & (C1_r_rx_data)) # (!C1L7 & ((C1_r_rx_byte[5])));


--C1L8 is uart_rx:receiver|Decoder0~7
C1L8 = (!C1_r_bit_index[0] & (C1_r_bit_index[1] & (C1_r_bit_index[2] & C1L1)));


--C1L79 is uart_rx:receiver|r_rx_byte[6]~6
C1L79 = (C1L8 & (C1_r_rx_data)) # (!C1L8 & ((C1_r_rx_byte[6])));


--C1L9 is uart_rx:receiver|Decoder0~8
C1L9 = (C1_r_bit_index[0] & (C1_r_bit_index[1] & (C1_r_bit_index[2] & C1L1)));


--C1L81 is uart_rx:receiver|r_rx_byte[7]~7
C1L81 = (C1L9 & (C1_r_rx_data)) # (!C1L9 & ((C1_r_rx_byte[7])));


--C1_r_sm_main.s_rx_stop_bit is uart_rx:receiver|r_sm_main.s_rx_stop_bit
--register power-up is low

C1_r_sm_main.s_rx_stop_bit = DFFEAS(C1L90, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L91 is uart_rx:receiver|r_sm_main~7
C1L91 = (C1L16 & C1_r_sm_main.s_rx_stop_bit);


--C1_r_sm_main.s_rx_start_bit is uart_rx:receiver|r_sm_main.s_rx_start_bit
--register power-up is low

C1_r_sm_main.s_rx_start_bit = DFFEAS(C1L102, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L92 is uart_rx:receiver|Selector0~0
C1L92 = (!C1_r_sm_main.s_rx_data_bits & !C1_r_sm_main.s_rx_stop_bit);


--C1L93 is uart_rx:receiver|Selector0~1
C1L93 = (C1L91) # ((C1_r_rx_dv & ((C1_r_sm_main.s_rx_start_bit) # (!C1L92))));


--C1_r_rx_data_r is uart_rx:receiver|r_rx_data_r
--register power-up is low

C1_r_rx_data_r = DFFEAS(i_rx_serial, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1_r_sm_main.s_idle is uart_rx:receiver|r_sm_main.s_idle
--register power-up is low

C1_r_sm_main.s_idle = DFFEAS(C1L101, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L100 is uart_rx:receiver|Selector16~0
C1L100 = (C1_r_sm_main.s_rx_data_bits & (C1_r_bit_index[0] $ (((C1L16))))) # (!C1_r_sm_main.s_rx_data_bits & (C1_r_bit_index[0] & (C1_r_sm_main.s_idle)));


--C1L98 is uart_rx:receiver|Selector15~2
C1L98 = (C1_r_sm_main.s_rx_data_bits & (C1_r_bit_index[1] $ (((C1_r_bit_index[0] & C1L16)))));


--C1L94 is uart_rx:receiver|Selector14~0
C1L94 = (C1_r_sm_main.s_idle & !C1_r_sm_main.s_rx_data_bits);


--C1L95 is uart_rx:receiver|Selector14~1
C1L95 = (C1_r_bit_index[0] & (C1L1 & (C1_r_bit_index[1] $ (C1_r_bit_index[2]))));


--C1L96 is uart_rx:receiver|Selector14~2
C1L96 = (C1_r_bit_index[2] & (C1_r_sm_main.s_rx_data_bits & ((!C1L16) # (!C1_r_bit_index[0]))));


--C1L97 is uart_rx:receiver|Selector14~3
C1L97 = (C1L95) # ((C1L96) # ((C1_r_bit_index[2] & C1L94)));


--C1L10 is uart_rx:receiver|Equal0~0
C1L10 = (C1_r_clk_count[3] & (!C1_r_clk_count[4] & (!C1_r_clk_count[7] & !C1_r_clk_count[8])));


--C1L11 is uart_rx:receiver|Equal0~1
C1L11 = (C1_r_clk_count[5] & (C1_r_clk_count[9] & (!C1_r_clk_count[10] & !C1_r_clk_count[6])));


--C1L12 is uart_rx:receiver|Equal0~2
C1L12 = (C1_r_clk_count[11] & (!C1_r_clk_count[12] & (!C1_r_clk_count[1] & !C1_r_clk_count[0])));


--C1L25 is uart_rx:receiver|r_clk_count[0]~39
C1L25 = (C1_r_sm_main.s_rx_start_bit & C1_r_clk_count[2]);


--C1L26 is uart_rx:receiver|r_clk_count[0]~40
C1L26 = (C1L10 & (C1L11 & (C1L12 & C1L25)));


--C1L27 is uart_rx:receiver|r_clk_count[0]~41
C1L27 = C1_r_sm_main.s_idle $ (C1L26 $ (((C1L92) # (!C1L16))));


--C1L13 is uart_rx:receiver|Equal0~3
C1L13 = (C1_r_clk_count[2] & (C1L10 & (C1L11 & C1L12)));


--C1_r_sm_main.s_cleanup is uart_rx:receiver|r_sm_main.s_cleanup
--register power-up is low

C1_r_sm_main.s_cleanup = DFFEAS(C1L91, i_clk,  ,  ,  ,  ,  ,  ,  );


--C1L28 is uart_rx:receiver|r_clk_count[0]~42
C1L28 = (!C1_r_sm_main.s_cleanup & (((!C1L13) # (!C1_r_sm_main.s_rx_start_bit)) # (!C1_r_rx_data)));


--C1L103 is uart_rx:receiver|Selector19~0
C1L103 = (C1L16 & (C1_r_bit_index[0] & (C1_r_bit_index[1] & C1_r_bit_index[2])));


--C1L104 is uart_rx:receiver|Selector19~1
C1L104 = (C1_r_sm_main.s_rx_data_bits & (((C1L26 & !C1_r_rx_data)) # (!C1L103))) # (!C1_r_sm_main.s_rx_data_bits & (C1L26 & (!C1_r_rx_data)));


--C1L90 is uart_rx:receiver|r_sm_main.s_rx_stop_bit~0
C1L90 = (C1L9) # ((C1_r_sm_main.s_rx_stop_bit & !C1L16));


--C1L102 is uart_rx:receiver|Selector18~0
C1L102 = (C1_r_sm_main.s_rx_start_bit & (((!C1_r_rx_data & !C1_r_sm_main.s_idle)) # (!C1L13))) # (!C1_r_sm_main.s_rx_start_bit & (!C1_r_rx_data & (!C1_r_sm_main.s_idle)));


--i_rx_serial is i_rx_serial
i_rx_serial = INPUT();


--C1L101 is uart_rx:receiver|Selector17~0
C1L101 = (!C1_r_sm_main.s_cleanup & (((!C1L26 & C1_r_sm_main.s_idle)) # (!C1_r_rx_data)));


--C1L99 is uart_rx:receiver|Selector15~3
C1L99 = (C1L98) # ((C1_r_sm_main.s_idle & (!C1_r_sm_main.s_rx_data_bits & C1_r_bit_index[1])));


--C1L15 is uart_rx:receiver|LessThan1~1
C1L15 = (C1_r_clk_count[9]) # ((C1_r_clk_count[8]) # ((C1_r_clk_count[7]) # (!C1L14)));


--C1L16 is uart_rx:receiver|LessThan1~2
C1L16 = (C1_r_clk_count[12] & ((C1_r_clk_count[11]) # ((C1_r_clk_count[10] & C1L15))));


--A1L21 is ~GND
A1L21 = GND;


